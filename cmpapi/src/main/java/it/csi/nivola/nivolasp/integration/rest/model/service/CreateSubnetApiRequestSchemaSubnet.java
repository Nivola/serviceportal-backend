/*-
 * ========================LICENSE_START=================================
 * Api CMP
 * %%
 * Copyright (C) 2022 Regione Piemonte
 * %%
 * SPDX-FileCopyrightText: Copyright 2022 | Regione Piemonte
 * SPDX-License-Identifier: EUPL-1.2
 * =========================LICENSE_END==================================
 */
/*
 * Beehive API
 * Beehive API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: nivola.engineering@csi.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.csi.nivola.nivolasp.integration.rest.model.service;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.annotations.ApiModelProperty;

/**
 * CreateSubnetApiRequestSchemaSubnet
 */

public class CreateSubnetApiRequestSchemaSubnet {
  @JsonProperty("AvailabilityZone")
  private String availabilityZone = null;

  @JsonProperty("CidrBlock")
  private String cidrBlock = null;

  @JsonProperty("Nvl_SubnetType")
  private String nvlSubnetType = null;

  @JsonProperty("SubnetDescription")
  private String subnetDescription = null;

  @JsonProperty("SubnetName")
  private String subnetName = null;

  @JsonProperty("VpcId")
  private String vpcId = null;

  public CreateSubnetApiRequestSchemaSubnet availabilityZone(String availabilityZone) {
    this.availabilityZone = availabilityZone;
    return this;
  }

   /**
   * subnet availability zone
   * @return availabilityZone
  **/
  @ApiModelProperty(example = "", required = true, value = "subnet availability zone")
  public String getAvailabilityZone() {
    return availabilityZone;
  }

  public void setAvailabilityZone(String availabilityZone) {
    this.availabilityZone = availabilityZone;
  }

  public CreateSubnetApiRequestSchemaSubnet cidrBlock(String cidrBlock) {
    this.cidrBlock = cidrBlock;
    return this;
  }

   /**
   * subnet cidr like 10.102.78.0/24
   * @return cidrBlock
  **/
  @ApiModelProperty(example = "", required = true, value = "subnet cidr like 10.102.78.0/24")
  public String getCidrBlock() {
    return cidrBlock;
  }

  public void setCidrBlock(String cidrBlock) {
    this.cidrBlock = cidrBlock;
  }

  public CreateSubnetApiRequestSchemaSubnet nvlSubnetType(String nvlSubnetType) {
    this.nvlSubnetType = nvlSubnetType;
    return this;
  }

   /**
   * subnet template
   * @return nvlSubnetType
  **/
  @ApiModelProperty(value = "subnet template")
  public String getNvlSubnetType() {
    return nvlSubnetType;
  }

  public void setNvlSubnetType(String nvlSubnetType) {
    this.nvlSubnetType = nvlSubnetType;
  }

  public CreateSubnetApiRequestSchemaSubnet subnetDescription(String subnetDescription) {
    this.subnetDescription = subnetDescription;
    return this;
  }

   /**
   * description of the subnet
   * @return subnetDescription
  **/
  @ApiModelProperty(example = "", value = "description of the subnet")
  public String getSubnetDescription() {
    return subnetDescription;
  }

  public void setSubnetDescription(String subnetDescription) {
    this.subnetDescription = subnetDescription;
  }

  public CreateSubnetApiRequestSchemaSubnet subnetName(String subnetName) {
    this.subnetName = subnetName;
    return this;
  }

   /**
   * name of the subnet
   * @return subnetName
  **/
  @ApiModelProperty(example = "", required = true, value = "name of the subnet")
  public String getSubnetName() {
    return subnetName;
  }

  public void setSubnetName(String subnetName) {
    this.subnetName = subnetName;
  }

  public CreateSubnetApiRequestSchemaSubnet vpcId(String vpcId) {
    this.vpcId = vpcId;
    return this;
  }

   /**
   * parent vpc id or uuid
   * @return vpcId
  **/
  @ApiModelProperty(example = "", required = true, value = "parent vpc id or uuid")
  public String getVpcId() {
    return vpcId;
  }

  public void setVpcId(String vpcId) {
    this.vpcId = vpcId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateSubnetApiRequestSchemaSubnet createSubnetApiRequestSchemaSubnet = (CreateSubnetApiRequestSchemaSubnet) o;
    return Objects.equals(this.availabilityZone, createSubnetApiRequestSchemaSubnet.availabilityZone) &&
        Objects.equals(this.cidrBlock, createSubnetApiRequestSchemaSubnet.cidrBlock) &&
        Objects.equals(this.nvlSubnetType, createSubnetApiRequestSchemaSubnet.nvlSubnetType) &&
        Objects.equals(this.subnetDescription, createSubnetApiRequestSchemaSubnet.subnetDescription) &&
        Objects.equals(this.subnetName, createSubnetApiRequestSchemaSubnet.subnetName) &&
        Objects.equals(this.vpcId, createSubnetApiRequestSchemaSubnet.vpcId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(availabilityZone, cidrBlock, nvlSubnetType, subnetDescription, subnetName, vpcId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateSubnetApiRequestSchemaSubnet {\n");
    
    sb.append("    availabilityZone: ").append(toIndentedString(availabilityZone)).append("\n");
    sb.append("    cidrBlock: ").append(toIndentedString(cidrBlock)).append("\n");
    sb.append("    nvlSubnetType: ").append(toIndentedString(nvlSubnetType)).append("\n");
    sb.append("    subnetDescription: ").append(toIndentedString(subnetDescription)).append("\n");
    sb.append("    subnetName: ").append(toIndentedString(subnetName)).append("\n");
    sb.append("    vpcId: ").append(toIndentedString(vpcId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

