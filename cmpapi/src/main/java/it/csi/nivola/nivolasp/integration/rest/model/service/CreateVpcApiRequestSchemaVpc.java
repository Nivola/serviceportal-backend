/*-
 * ========================LICENSE_START=================================
 * Api CMP
 * %%
 * Copyright (C) 2022 Regione Piemonte
 * %%
 * SPDX-FileCopyrightText: Copyright 2022 | Regione Piemonte
 * SPDX-License-Identifier: EUPL-1.2
 * =========================LICENSE_END==================================
 */
/*
 * Beehive API
 * Beehive API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: nivola.engineering@csi.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.csi.nivola.nivolasp.integration.rest.model.service;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;

import io.swagger.annotations.ApiModelProperty;

/**
 * CreateVpcApiRequestSchemaVpc
 */

public class CreateVpcApiRequestSchemaVpc {
  @JsonProperty("CidrBlock")
  private String cidrBlock = null;

  /**
   * allowed tenancy of instances launched into the VPC. Use default for shared vpc. Use dedicated for private vpc
   */
  public enum InstanceTenancyEnum {
    DEFAULT("default"),
    
    DEDICATED("dedicated");

    private String value;

    InstanceTenancyEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static InstanceTenancyEnum fromValue(String value) {
      for (InstanceTenancyEnum b : InstanceTenancyEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("InstanceTenancy")
  private InstanceTenancyEnum instanceTenancy = InstanceTenancyEnum.DEFAULT;

  @JsonProperty("VpcDescription")
  private String vpcDescription = null;

  @JsonProperty("VpcName")
  private String vpcName = null;

  @JsonProperty("VpcType")
  private String vpcType = null;

  @JsonProperty("owner_id")
  private String ownerId = null;

  public CreateVpcApiRequestSchemaVpc cidrBlock(String cidrBlock) {
    this.cidrBlock = cidrBlock;
    return this;
  }

   /**
   * base vpc cidr block
   * @return cidrBlock
  **/
  @ApiModelProperty(example = "10.0.0.0/16", value = "base vpc cidr block")
  public String getCidrBlock() {
    return cidrBlock;
  }

  public void setCidrBlock(String cidrBlock) {
    this.cidrBlock = cidrBlock;
  }

  public CreateVpcApiRequestSchemaVpc instanceTenancy(InstanceTenancyEnum instanceTenancy) {
    this.instanceTenancy = instanceTenancy;
    return this;
  }

   /**
   * allowed tenancy of instances launched into the VPC. Use default for shared vpc. Use dedicated for private vpc
   * @return instanceTenancy
  **/
  @ApiModelProperty(example = "default", value = "allowed tenancy of instances launched into the VPC. Use default for shared vpc. Use dedicated for private vpc")
  public InstanceTenancyEnum getInstanceTenancy() {
    return instanceTenancy;
  }

  public void setInstanceTenancy(InstanceTenancyEnum instanceTenancy) {
    this.instanceTenancy = instanceTenancy;
  }

  public CreateVpcApiRequestSchemaVpc vpcDescription(String vpcDescription) {
    this.vpcDescription = vpcDescription;
    return this;
  }

   /**
   * description of the vpc
   * @return vpcDescription
  **/
  @ApiModelProperty(example = "", value = "description of the vpc")
  public String getVpcDescription() {
    return vpcDescription;
  }

  public void setVpcDescription(String vpcDescription) {
    this.vpcDescription = vpcDescription;
  }

  public CreateVpcApiRequestSchemaVpc vpcName(String vpcName) {
    this.vpcName = vpcName;
    return this;
  }

   /**
   * name of the vpc
   * @return vpcName
  **/
  @ApiModelProperty(example = "", required = true, value = "name of the vpc")
  public String getVpcName() {
    return vpcName;
  }

  public void setVpcName(String vpcName) {
    this.vpcName = vpcName;
  }

  public CreateVpcApiRequestSchemaVpc vpcType(String vpcType) {
    this.vpcType = vpcType;
    return this;
  }

   /**
   * vpc template
   * @return vpcType
  **/
  @ApiModelProperty(value = "vpc template")
  public String getVpcType() {
    return vpcType;
  }

  public void setVpcType(String vpcType) {
    this.vpcType = vpcType;
  }

  public CreateVpcApiRequestSchemaVpc ownerId(String ownerId) {
    this.ownerId = ownerId;
    return this;
  }

   /**
   * account id
   * @return ownerId
  **/
  @ApiModelProperty(example = "", required = true, value = "account id")
  public String getOwnerId() {
    return ownerId;
  }

  public void setOwnerId(String ownerId) {
    this.ownerId = ownerId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateVpcApiRequestSchemaVpc createVpcApiRequestSchemaVpc = (CreateVpcApiRequestSchemaVpc) o;
    return Objects.equals(this.cidrBlock, createVpcApiRequestSchemaVpc.cidrBlock) &&
        Objects.equals(this.instanceTenancy, createVpcApiRequestSchemaVpc.instanceTenancy) &&
        Objects.equals(this.vpcDescription, createVpcApiRequestSchemaVpc.vpcDescription) &&
        Objects.equals(this.vpcName, createVpcApiRequestSchemaVpc.vpcName) &&
        Objects.equals(this.vpcType, createVpcApiRequestSchemaVpc.vpcType) &&
        Objects.equals(this.ownerId, createVpcApiRequestSchemaVpc.ownerId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cidrBlock, instanceTenancy, vpcDescription, vpcName, vpcType, ownerId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateVpcApiRequestSchemaVpc {\n");
    
    sb.append("    cidrBlock: ").append(toIndentedString(cidrBlock)).append("\n");
    sb.append("    instanceTenancy: ").append(toIndentedString(instanceTenancy)).append("\n");
    sb.append("    vpcDescription: ").append(toIndentedString(vpcDescription)).append("\n");
    sb.append("    vpcName: ").append(toIndentedString(vpcName)).append("\n");
    sb.append("    vpcType: ").append(toIndentedString(vpcType)).append("\n");
    sb.append("    ownerId: ").append(toIndentedString(ownerId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

