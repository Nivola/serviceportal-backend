/*-
 * ========================LICENSE_START=================================
 * Api CMP
 * %%
 * Copyright (C) 2022 CSI Piemonte
 * %%
 * SPDX-FileCopyrightText: Copyright 2022 | CSI Piemonte
 * SPDX-License-Identifier: EUPL-1.2
 * =========================LICENSE_END==================================
 */
/*
 * Beehive API
 * Beehive API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: nivola.engineering@csi.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.csi.nivola.nivolasp.integration.rest.model.service;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;

import io.swagger.annotations.ApiModelProperty;
import it.csi.nivola.nivolasp.restinvoker.RawJsonDeserializer;

/**
 * CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance
 */

public class CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance {
  @JsonProperty("AllocatedStorage")
  private Integer allocatedStorage = null;

  @JsonProperty("AvailabilityZone")
  private String availabilityZone = null;

  @JsonProperty("CharacterSetName")
  private String characterSetName = "latin1";

  @JsonProperty("DBInstanceClass")
  private String dbInstanceClass = null;

  @JsonProperty("DBInstanceIdentifier")
  private String dbInstanceIdentifier = null;

  @JsonProperty("DBInstanceStatus")
  private String dbInstanceStatus = null;

  @JsonProperty("DBName")
  private String dbName = null;

  @JsonProperty("DBSubnetGroup")
  private CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceDBSubnetGroup dbSubnetGroup = null;

  @JsonProperty("DbInstancePort")
  private Integer dbInstancePort = null;

  @JsonProperty("DbiResourceId")
  private String dbiResourceId = null;

  @JsonProperty("Endpoint")
  private CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceEndpoint endpoint = null;

  @JsonProperty("Engine")
  private String engine = null;

  @JsonProperty("EngineVersion")
  private String engineVersion = null;

  @JsonProperty("InstanceCreateTime")
  private LocalDateTime instanceCreateTime = null;

  @JsonProperty("LicenseModel")
  private String licenseModel = null;

  @JsonProperty("MasterUsername")
  @JsonDeserialize(using = RawJsonDeserializer.class)
  private String masterUsername = null;

  @JsonProperty("MultiAZ")
  private Boolean multiAZ = false;

  @JsonProperty("PreferredBackupWindow")
  private String preferredBackupWindow = null;

  @JsonProperty("PreferredMaintenanceWindow")
  private String preferredMaintenanceWindow = null;

  @JsonProperty("ReadReplicaDBClusterIdentifiers")
  private List<String> readReplicaDBClusterIdentifiers = null;

  @JsonProperty("ReadReplicaDBInstanceIdentifiers")
  private List<String> readReplicaDBInstanceIdentifiers = null;

  @JsonProperty("ReadReplicaSourceDBInstanceIdentifier")
  private String readReplicaSourceDBInstanceIdentifier = null;

  @JsonProperty("SecondaryAvailabilityZone")
  private String secondaryAvailabilityZone = null;

  @JsonProperty("StatusInfos")
  private List<CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceStatusInfos> statusInfos = null;

  @JsonProperty("StorageEncrypted")
  private Boolean storageEncrypted = null;

  @JsonProperty("StorageType")
  private String storageType = null;

  @JsonProperty("TagList")
  private List<CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceTagList> tagList = null;

  @JsonProperty("Timezone")
  private String timezone = null;

  @JsonProperty("VpcSecurityGroups")
  private List<CreateDBInstanceResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceVpcSecurityGroups> vpcSecurityGroups = null;

  @JsonProperty("nvl-ownerAlias")
  private String nvlOwnerAlias = null;

  @JsonProperty("nvl-ownerId")
  private String nvlOwnerId = null;

  @JsonProperty("nvl-stateReason")
  private List<CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceNvlstateReason> nvlStateReason = null;

  public CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance allocatedStorage(Integer allocatedStorage) {
    this.allocatedStorage = allocatedStorage;
    return this;
  }

   /**
   * amount of storage (in GB) to allocate for the DB instance
   * @return allocatedStorage
  **/
  @ApiModelProperty(example = "20", value = "amount of storage (in GB) to allocate for the DB instance")
  public Integer getAllocatedStorage() {
    return allocatedStorage;
  }

  public void setAllocatedStorage(Integer allocatedStorage) {
    this.allocatedStorage = allocatedStorage;
  }

  public CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance availabilityZone(String availabilityZone) {
    this.availabilityZone = availabilityZone;
    return this;
  }

   /**
   * 
   * @return availabilityZone
  **/
  @ApiModelProperty(example = "", value = "")
  public String getAvailabilityZone() {
    return availabilityZone;
  }

  public void setAvailabilityZone(String availabilityZone) {
    this.availabilityZone = availabilityZone;
  }

  public CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance characterSetName(String characterSetName) {
    this.characterSetName = characterSetName;
    return this;
  }

   /**
   * For supported engines, indicates that the DB instance should be  associated with the specified CharacterSet.
   * @return characterSetName
  **/
  @ApiModelProperty(value = "For supported engines, indicates that the DB instance should be  associated with the specified CharacterSet.")
  public String getCharacterSetName() {
    return characterSetName;
  }

  public void setCharacterSetName(String characterSetName) {
    this.characterSetName = characterSetName;
  }

  public CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance dbInstanceClass(String dbInstanceClass) {
    this.dbInstanceClass = dbInstanceClass;
    return this;
  }

   /**
   * The compute and memory capacity of the DB instance
   * @return dbInstanceClass
  **/
  @ApiModelProperty(example = "db.m4.large", value = "The compute and memory capacity of the DB instance")
  public String getDbInstanceClass() {
    return dbInstanceClass;
  }

  public void setDbInstanceClass(String dbInstanceClass) {
    this.dbInstanceClass = dbInstanceClass;
  }

  public CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance dbInstanceIdentifier(String dbInstanceIdentifier) {
    this.dbInstanceIdentifier = dbInstanceIdentifier;
    return this;
  }

   /**
   * The DB instance identifier
   * @return dbInstanceIdentifier
  **/
  @ApiModelProperty(example = "", value = "The DB instance identifier")
  public String getDbInstanceIdentifier() {
    return dbInstanceIdentifier;
  }

  public void setDbInstanceIdentifier(String dbInstanceIdentifier) {
    this.dbInstanceIdentifier = dbInstanceIdentifier;
  }

  public CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance dbInstanceStatus(String dbInstanceStatus) {
    this.dbInstanceStatus = dbInstanceStatus;
    return this;
  }

   /**
   * Specifies the current state of this database.
   * @return dbInstanceStatus
  **/
  @ApiModelProperty(example = "available", value = "Specifies the current state of this database.")
  public String getDbInstanceStatus() {
    return dbInstanceStatus;
  }

  public void setDbInstanceStatus(String dbInstanceStatus) {
    this.dbInstanceStatus = dbInstanceStatus;
  }

  public CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance dbName(String dbName) {
    this.dbName = dbName;
    return this;
  }

   /**
   * The name of the database to create when the DB instance is created. 
   * @return dbName
  **/
  @ApiModelProperty(example = "", value = "The name of the database to create when the DB instance is created. ")
  public String getDbName() {
    return dbName;
  }

  public void setDbName(String dbName) {
    this.dbName = dbName;
  }

  public CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance dbSubnetGroup(CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceDBSubnetGroup dbSubnetGroup) {
    this.dbSubnetGroup = dbSubnetGroup;
    return this;
  }

   /**
   * Get dbSubnetGroup
   * @return dbSubnetGroup
  **/
  @ApiModelProperty(value = "")
  public CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceDBSubnetGroup getDbSubnetGroup() {
    return dbSubnetGroup;
  }

  public void setDbSubnetGroup(CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceDBSubnetGroup dbSubnetGroup) {
    this.dbSubnetGroup = dbSubnetGroup;
  }

  public CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance dbInstancePort(Integer dbInstancePort) {
    this.dbInstancePort = dbInstancePort;
    return this;
  }

   /**
   * Specifies the port that the DB instance listens on. If the DB instance is part of a DB cluster, this can be a different port than the DB cluster port.
   * @return dbInstancePort
  **/
  @ApiModelProperty(example = "3306", value = "Specifies the port that the DB instance listens on. If the DB instance is part of a DB cluster, this can be a different port than the DB cluster port.")
  public Integer getDbInstancePort() {
    return dbInstancePort;
  }

  public void setDbInstancePort(Integer dbInstancePort) {
    this.dbInstancePort = dbInstancePort;
  }

  public CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance dbiResourceId(String dbiResourceId) {
    this.dbiResourceId = dbiResourceId;
    return this;
  }

   /**
   * The Region-unique, immutable identifier for the DB instance. 
   * @return dbiResourceId
  **/
  @ApiModelProperty(example = "1234", value = "The Region-unique, immutable identifier for the DB instance. ")
  public String getDbiResourceId() {
    return dbiResourceId;
  }

  public void setDbiResourceId(String dbiResourceId) {
    this.dbiResourceId = dbiResourceId;
  }

  public CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance endpoint(CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceEndpoint endpoint) {
    this.endpoint = endpoint;
    return this;
  }

   /**
   * Get endpoint
   * @return endpoint
  **/
  @ApiModelProperty(value = "")
  public CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceEndpoint getEndpoint() {
    return endpoint;
  }

  public void setEndpoint(CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceEndpoint endpoint) {
    this.endpoint = endpoint;
  }

  public CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance engine(String engine) {
    this.engine = engine;
    return this;
  }

   /**
   * name of the DB engine
   * @return engine
  **/
  @ApiModelProperty(example = "", value = "name of the DB engine")
  public String getEngine() {
    return engine;
  }

  public void setEngine(String engine) {
    this.engine = engine;
  }

  public CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance engineVersion(String engineVersion) {
    this.engineVersion = engineVersion;
    return this;
  }

   /**
   * DB engine version
   * @return engineVersion
  **/
  @ApiModelProperty(example = "", value = "DB engine version")
  public String getEngineVersion() {
    return engineVersion;
  }

  public void setEngineVersion(String engineVersion) {
    this.engineVersion = engineVersion;
  }

  public CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance instanceCreateTime(LocalDateTime instanceCreateTime) {
    this.instanceCreateTime = instanceCreateTime;
    return this;
  }

   /**
   * DB instance creation date
   * @return instanceCreateTime
  **/
  @ApiModelProperty(example = "", value = "DB instance creation date")
  public LocalDateTime getInstanceCreateTime() {
    return instanceCreateTime;
  }

  public void setInstanceCreateTime(LocalDateTime instanceCreateTime) {
    this.instanceCreateTime = instanceCreateTime;
  }

  public CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance licenseModel(String licenseModel) {
    this.licenseModel = licenseModel;
    return this;
  }

   /**
   * License model information for this DB instance.
   * @return licenseModel
  **/
  @ApiModelProperty(example = "", value = "License model information for this DB instance.")
  public String getLicenseModel() {
    return licenseModel;
  }

  public void setLicenseModel(String licenseModel) {
    this.licenseModel = licenseModel;
  }

  public CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance masterUsername(String masterUsername) {
    this.masterUsername = masterUsername;
    return this;
  }

   /**
   * Get masterUsername
   * @return masterUsername
  **/
 

  public CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance multiAZ(Boolean multiAZ) {
    this.multiAZ = multiAZ;
    return this;
  }

   public String getMasterUsername() {
	return masterUsername;
}

public void setMasterUsername(String masterUsername) {
	this.masterUsername = masterUsername;
}

/**
   * Specifies if the DB instance is a Multi-AZ deployment
   * @return multiAZ
  **/
  @ApiModelProperty(example = "true", value = "Specifies if the DB instance is a Multi-AZ deployment")
  public Boolean isMultiAZ() {
    return multiAZ;
  }

  public void setMultiAZ(Boolean multiAZ) {
    this.multiAZ = multiAZ;
  }

  public CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance preferredBackupWindow(String preferredBackupWindow) {
    this.preferredBackupWindow = preferredBackupWindow;
    return this;
  }

   /**
   * Get preferredBackupWindow
   * @return preferredBackupWindow
  **/
  @ApiModelProperty(value = "")
  public String getPreferredBackupWindow() {
    return preferredBackupWindow;
  }

  public void setPreferredBackupWindow(String preferredBackupWindow) {
    this.preferredBackupWindow = preferredBackupWindow;
  }

  public CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance preferredMaintenanceWindow(String preferredMaintenanceWindow) {
    this.preferredMaintenanceWindow = preferredMaintenanceWindow;
    return this;
  }

   /**
   * Get preferredMaintenanceWindow
   * @return preferredMaintenanceWindow
  **/
  @ApiModelProperty(value = "")
  public String getPreferredMaintenanceWindow() {
    return preferredMaintenanceWindow;
  }

  public void setPreferredMaintenanceWindow(String preferredMaintenanceWindow) {
    this.preferredMaintenanceWindow = preferredMaintenanceWindow;
  }

  public CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance readReplicaDBClusterIdentifiers(List<String> readReplicaDBClusterIdentifiers) {
    this.readReplicaDBClusterIdentifiers = readReplicaDBClusterIdentifiers;
    return this;
  }

  public CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance addReadReplicaDBClusterIdentifiersItem(String readReplicaDBClusterIdentifiersItem) {
    if (this.readReplicaDBClusterIdentifiers == null) {
      this.readReplicaDBClusterIdentifiers = new ArrayList<>();
    }
    this.readReplicaDBClusterIdentifiers.add(readReplicaDBClusterIdentifiersItem);
    return this;
  }

   /**
   * Get readReplicaDBClusterIdentifiers
   * @return readReplicaDBClusterIdentifiers
  **/
  @ApiModelProperty(value = "")
  public List<String> getReadReplicaDBClusterIdentifiers() {
    return readReplicaDBClusterIdentifiers;
  }

  public void setReadReplicaDBClusterIdentifiers(List<String> readReplicaDBClusterIdentifiers) {
    this.readReplicaDBClusterIdentifiers = readReplicaDBClusterIdentifiers;
  }

  public CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance readReplicaDBInstanceIdentifiers(List<String> readReplicaDBInstanceIdentifiers) {
    this.readReplicaDBInstanceIdentifiers = readReplicaDBInstanceIdentifiers;
    return this;
  }

  public CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance addReadReplicaDBInstanceIdentifiersItem(String readReplicaDBInstanceIdentifiersItem) {
    if (this.readReplicaDBInstanceIdentifiers == null) {
      this.readReplicaDBInstanceIdentifiers = new ArrayList<>();
    }
    this.readReplicaDBInstanceIdentifiers.add(readReplicaDBInstanceIdentifiersItem);
    return this;
  }

   /**
   * Get readReplicaDBInstanceIdentifiers
   * @return readReplicaDBInstanceIdentifiers
  **/
  @ApiModelProperty(value = "")
  public List<String> getReadReplicaDBInstanceIdentifiers() {
    return readReplicaDBInstanceIdentifiers;
  }

  public void setReadReplicaDBInstanceIdentifiers(List<String> readReplicaDBInstanceIdentifiers) {
    this.readReplicaDBInstanceIdentifiers = readReplicaDBInstanceIdentifiers;
  }

  public CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance readReplicaSourceDBInstanceIdentifier(String readReplicaSourceDBInstanceIdentifier) {
    this.readReplicaSourceDBInstanceIdentifier = readReplicaSourceDBInstanceIdentifier;
    return this;
  }

   /**
   * Get readReplicaSourceDBInstanceIdentifier
   * @return readReplicaSourceDBInstanceIdentifier
  **/
  @ApiModelProperty(value = "")
  public String getReadReplicaSourceDBInstanceIdentifier() {
    return readReplicaSourceDBInstanceIdentifier;
  }

  public void setReadReplicaSourceDBInstanceIdentifier(String readReplicaSourceDBInstanceIdentifier) {
    this.readReplicaSourceDBInstanceIdentifier = readReplicaSourceDBInstanceIdentifier;
  }

  public CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance secondaryAvailabilityZone(String secondaryAvailabilityZone) {
    this.secondaryAvailabilityZone = secondaryAvailabilityZone;
    return this;
  }

   /**
   * Get secondaryAvailabilityZone
   * @return secondaryAvailabilityZone
  **/
  @ApiModelProperty(value = "")
  public String getSecondaryAvailabilityZone() {
    return secondaryAvailabilityZone;
  }

  public void setSecondaryAvailabilityZone(String secondaryAvailabilityZone) {
    this.secondaryAvailabilityZone = secondaryAvailabilityZone;
  }

  public CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance statusInfos(List<CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceStatusInfos> statusInfos) {
    this.statusInfos = statusInfos;
    return this;
  }

  public CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance addStatusInfosItem(CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceStatusInfos statusInfosItem) {
    if (this.statusInfos == null) {
      this.statusInfos = new ArrayList<>();
    }
    this.statusInfos.add(statusInfosItem);
    return this;
  }

   /**
   * The status of a read replica. If the instance is not a read replica, this is blank
   * @return statusInfos
  **/
  @ApiModelProperty(value = "The status of a read replica. If the instance is not a read replica, this is blank")
  public List<CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceStatusInfos> getStatusInfos() {
    return statusInfos;
  }

  public void setStatusInfos(List<CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceStatusInfos> statusInfos) {
    this.statusInfos = statusInfos;
  }

  public CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance storageEncrypted(Boolean storageEncrypted) {
    this.storageEncrypted = storageEncrypted;
    return this;
  }

   /**
   * Specifies whether the DB instance is encrypted
   * @return storageEncrypted
  **/
  @ApiModelProperty(example = "false", value = "Specifies whether the DB instance is encrypted")
  public Boolean isStorageEncrypted() {
    return storageEncrypted;
  }

  public void setStorageEncrypted(Boolean storageEncrypted) {
    this.storageEncrypted = storageEncrypted;
  }

  public CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance storageType(String storageType) {
    this.storageType = storageType;
    return this;
  }

   /**
   * Specifies the storage type associated with DB instance
   * @return storageType
  **/
  @ApiModelProperty(example = "", value = "Specifies the storage type associated with DB instance")
  public String getStorageType() {
    return storageType;
  }

  public void setStorageType(String storageType) {
    this.storageType = storageType;
  }

  public CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance tagList(List<CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceTagList> tagList) {
    this.tagList = tagList;
    return this;
  }

  public CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance addTagListItem(CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceTagList tagListItem) {
    if (this.tagList == null) {
      this.tagList = new ArrayList<>();
    }
    this.tagList.add(tagListItem);
    return this;
  }

   /**
   * A list of tags
   * @return tagList
  **/
  @ApiModelProperty(value = "A list of tags")
  public List<CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceTagList> getTagList() {
    return tagList;
  }

  public void setTagList(List<CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceTagList> tagList) {
    this.tagList = tagList;
  }

  public CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance timezone(String timezone) {
    this.timezone = timezone;
    return this;
  }

   /**
   * The time zone of the DB instance
   * @return timezone
  **/
  @ApiModelProperty(example = "Europe/Rome", value = "The time zone of the DB instance")
  public String getTimezone() {
    return timezone;
  }

  public void setTimezone(String timezone) {
    this.timezone = timezone;
  }

  public CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance vpcSecurityGroups(List<CreateDBInstanceResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceVpcSecurityGroups> vpcSecurityGroups) {
    this.vpcSecurityGroups = vpcSecurityGroups;
    return this;
  }

  public CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance addVpcSecurityGroupsItem(CreateDBInstanceResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceVpcSecurityGroups vpcSecurityGroupsItem) {
    if (this.vpcSecurityGroups == null) {
      this.vpcSecurityGroups = new ArrayList<>();
    }
    this.vpcSecurityGroups.add(vpcSecurityGroupsItem);
    return this;
  }

   /**
   * Get vpcSecurityGroups
   * @return vpcSecurityGroups
  **/
  @ApiModelProperty(value = "")
  public List<CreateDBInstanceResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceVpcSecurityGroups> getVpcSecurityGroups() {
    return vpcSecurityGroups;
  }

  public void setVpcSecurityGroups(List<CreateDBInstanceResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceVpcSecurityGroups> vpcSecurityGroups) {
    this.vpcSecurityGroups = vpcSecurityGroups;
  }

  public CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance nvlOwnerAlias(String nvlOwnerAlias) {
    this.nvlOwnerAlias = nvlOwnerAlias;
    return this;
  }

   /**
   * name of the account that owns the instance
   * @return nvlOwnerAlias
  **/
  @ApiModelProperty(example = "", value = "name of the account that owns the instance")
  public String getNvlOwnerAlias() {
    return nvlOwnerAlias;
  }

  public void setNvlOwnerAlias(String nvlOwnerAlias) {
    this.nvlOwnerAlias = nvlOwnerAlias;
  }

  public CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance nvlOwnerId(String nvlOwnerId) {
    this.nvlOwnerId = nvlOwnerId;
    return this;
  }

   /**
   * ID of the account that owns the instance
   * @return nvlOwnerId
  **/
  @ApiModelProperty(example = "", value = "ID of the account that owns the instance")
  public String getNvlOwnerId() {
    return nvlOwnerId;
  }

  public void setNvlOwnerId(String nvlOwnerId) {
    this.nvlOwnerId = nvlOwnerId;
  }

  public CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance nvlStateReason(List<CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceNvlstateReason> nvlStateReason) {
    this.nvlStateReason = nvlStateReason;
    return this;
  }

  public CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance addNvlStateReasonItem(CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceNvlstateReason nvlStateReasonItem) {
    if (this.nvlStateReason == null) {
      this.nvlStateReason = new ArrayList<>();
    }
    this.nvlStateReason.add(nvlStateReasonItem);
    return this;
  }

   /**
   * Get nvlStateReason
   * @return nvlStateReason
  **/
  @ApiModelProperty(value = "")
  public List<CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceNvlstateReason> getNvlStateReason() {
    return nvlStateReason;
  }

  public void setNvlStateReason(List<CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceNvlstateReason> nvlStateReason) {
    this.nvlStateReason = nvlStateReason;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance createDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance = (CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance) o;
    return Objects.equals(this.allocatedStorage, createDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance.allocatedStorage) &&
        Objects.equals(this.availabilityZone, createDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance.availabilityZone) &&
        Objects.equals(this.characterSetName, createDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance.characterSetName) &&
        Objects.equals(this.dbInstanceClass, createDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance.dbInstanceClass) &&
        Objects.equals(this.dbInstanceIdentifier, createDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance.dbInstanceIdentifier) &&
        Objects.equals(this.dbInstanceStatus, createDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance.dbInstanceStatus) &&
        Objects.equals(this.dbName, createDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance.dbName) &&
        Objects.equals(this.dbSubnetGroup, createDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance.dbSubnetGroup) &&
        Objects.equals(this.dbInstancePort, createDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance.dbInstancePort) &&
        Objects.equals(this.dbiResourceId, createDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance.dbiResourceId) &&
        Objects.equals(this.endpoint, createDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance.endpoint) &&
        Objects.equals(this.engine, createDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance.engine) &&
        Objects.equals(this.engineVersion, createDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance.engineVersion) &&
        Objects.equals(this.instanceCreateTime, createDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance.instanceCreateTime) &&
        Objects.equals(this.licenseModel, createDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance.licenseModel) &&
        Objects.equals(this.masterUsername, createDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance.masterUsername) &&
        Objects.equals(this.multiAZ, createDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance.multiAZ) &&
        Objects.equals(this.preferredBackupWindow, createDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance.preferredBackupWindow) &&
        Objects.equals(this.preferredMaintenanceWindow, createDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance.preferredMaintenanceWindow) &&
        Objects.equals(this.readReplicaDBClusterIdentifiers, createDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance.readReplicaDBClusterIdentifiers) &&
        Objects.equals(this.readReplicaDBInstanceIdentifiers, createDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance.readReplicaDBInstanceIdentifiers) &&
        Objects.equals(this.readReplicaSourceDBInstanceIdentifier, createDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance.readReplicaSourceDBInstanceIdentifier) &&
        Objects.equals(this.secondaryAvailabilityZone, createDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance.secondaryAvailabilityZone) &&
        Objects.equals(this.statusInfos, createDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance.statusInfos) &&
        Objects.equals(this.storageEncrypted, createDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance.storageEncrypted) &&
        Objects.equals(this.storageType, createDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance.storageType) &&
        Objects.equals(this.tagList, createDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance.tagList) &&
        Objects.equals(this.timezone, createDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance.timezone) &&
        Objects.equals(this.vpcSecurityGroups, createDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance.vpcSecurityGroups) &&
        Objects.equals(this.nvlOwnerAlias, createDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance.nvlOwnerAlias) &&
        Objects.equals(this.nvlOwnerId, createDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance.nvlOwnerId) &&
        Objects.equals(this.nvlStateReason, createDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance.nvlStateReason);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allocatedStorage, availabilityZone, characterSetName, dbInstanceClass, dbInstanceIdentifier, dbInstanceStatus, dbName, dbSubnetGroup, dbInstancePort, dbiResourceId, endpoint, engine, engineVersion, instanceCreateTime, licenseModel, masterUsername, multiAZ, preferredBackupWindow, preferredMaintenanceWindow, readReplicaDBClusterIdentifiers, readReplicaDBInstanceIdentifiers, readReplicaSourceDBInstanceIdentifier, secondaryAvailabilityZone, statusInfos, storageEncrypted, storageType, tagList, timezone, vpcSecurityGroups, nvlOwnerAlias, nvlOwnerId, nvlStateReason);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstance {\n");
    
    sb.append("    allocatedStorage: ").append(toIndentedString(allocatedStorage)).append("\n");
    sb.append("    availabilityZone: ").append(toIndentedString(availabilityZone)).append("\n");
    sb.append("    characterSetName: ").append(toIndentedString(characterSetName)).append("\n");
    sb.append("    dbInstanceClass: ").append(toIndentedString(dbInstanceClass)).append("\n");
    sb.append("    dbInstanceIdentifier: ").append(toIndentedString(dbInstanceIdentifier)).append("\n");
    sb.append("    dbInstanceStatus: ").append(toIndentedString(dbInstanceStatus)).append("\n");
    sb.append("    dbName: ").append(toIndentedString(dbName)).append("\n");
    sb.append("    dbSubnetGroup: ").append(toIndentedString(dbSubnetGroup)).append("\n");
    sb.append("    dbInstancePort: ").append(toIndentedString(dbInstancePort)).append("\n");
    sb.append("    dbiResourceId: ").append(toIndentedString(dbiResourceId)).append("\n");
    sb.append("    endpoint: ").append(toIndentedString(endpoint)).append("\n");
    sb.append("    engine: ").append(toIndentedString(engine)).append("\n");
    sb.append("    engineVersion: ").append(toIndentedString(engineVersion)).append("\n");
    sb.append("    instanceCreateTime: ").append(toIndentedString(instanceCreateTime)).append("\n");
    sb.append("    licenseModel: ").append(toIndentedString(licenseModel)).append("\n");
    sb.append("    masterUsername: ").append(toIndentedString(masterUsername)).append("\n");
    sb.append("    multiAZ: ").append(toIndentedString(multiAZ)).append("\n");
    sb.append("    preferredBackupWindow: ").append(toIndentedString(preferredBackupWindow)).append("\n");
    sb.append("    preferredMaintenanceWindow: ").append(toIndentedString(preferredMaintenanceWindow)).append("\n");
    sb.append("    readReplicaDBClusterIdentifiers: ").append(toIndentedString(readReplicaDBClusterIdentifiers)).append("\n");
    sb.append("    readReplicaDBInstanceIdentifiers: ").append(toIndentedString(readReplicaDBInstanceIdentifiers)).append("\n");
    sb.append("    readReplicaSourceDBInstanceIdentifier: ").append(toIndentedString(readReplicaSourceDBInstanceIdentifier)).append("\n");
    sb.append("    secondaryAvailabilityZone: ").append(toIndentedString(secondaryAvailabilityZone)).append("\n");
    sb.append("    statusInfos: ").append(toIndentedString(statusInfos)).append("\n");
    sb.append("    storageEncrypted: ").append(toIndentedString(storageEncrypted)).append("\n");
    sb.append("    storageType: ").append(toIndentedString(storageType)).append("\n");
    sb.append("    tagList: ").append(toIndentedString(tagList)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    vpcSecurityGroups: ").append(toIndentedString(vpcSecurityGroups)).append("\n");
    sb.append("    nvlOwnerAlias: ").append(toIndentedString(nvlOwnerAlias)).append("\n");
    sb.append("    nvlOwnerId: ").append(toIndentedString(nvlOwnerId)).append("\n");
    sb.append("    nvlStateReason: ").append(toIndentedString(nvlStateReason)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

