/*-
 * ========================LICENSE_START=================================
 * Api CMP
 * %%
 * Copyright (C) 2022 CSI Piemonte
 * %%
 * SPDX-FileCopyrightText: Copyright 2022 | CSI Piemonte
 * SPDX-License-Identifier: EUPL-1.2
 * =========================LICENSE_END==================================
 */
/*
 * Beehive API
 * Beehive API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: nivola.engineering@csi.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.csi.nivola.nivolasp.integration.rest.model.service;

import java.math.BigDecimal;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.annotations.ApiModelProperty;

/**
 * CreateServicePriceMetricRequestSchemaPriceMetricThresholds
 */

public class CreateServicePriceMetricRequestSchemaPriceMetricThresholds {
  @JsonProperty("ammount_from")
  private BigDecimal ammountFrom = null;

  @JsonProperty("ammount_till")
  private BigDecimal ammountTill = null;

  @JsonProperty("price")
  private BigDecimal price = null;

  public CreateServicePriceMetricRequestSchemaPriceMetricThresholds ammountFrom(BigDecimal ammountFrom) {
    this.ammountFrom = ammountFrom;
    return this;
  }

   /**
   * Get ammountFrom
   * @return ammountFrom
  **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getAmmountFrom() {
    return ammountFrom;
  }

  public void setAmmountFrom(BigDecimal ammountFrom) {
    this.ammountFrom = ammountFrom;
  }

  public CreateServicePriceMetricRequestSchemaPriceMetricThresholds ammountTill(BigDecimal ammountTill) {
    this.ammountTill = ammountTill;
    return this;
  }

   /**
   * Get ammountTill
   * @return ammountTill
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getAmmountTill() {
    return ammountTill;
  }

  public void setAmmountTill(BigDecimal ammountTill) {
    this.ammountTill = ammountTill;
  }

  public CreateServicePriceMetricRequestSchemaPriceMetricThresholds price(BigDecimal price) {
    this.price = price;
    return this;
  }

   /**
   * Get price
   * @return price
  **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getPrice() {
    return price;
  }

  public void setPrice(BigDecimal price) {
    this.price = price;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateServicePriceMetricRequestSchemaPriceMetricThresholds createServicePriceMetricRequestSchemaPriceMetricThresholds = (CreateServicePriceMetricRequestSchemaPriceMetricThresholds) o;
    return Objects.equals(this.ammountFrom, createServicePriceMetricRequestSchemaPriceMetricThresholds.ammountFrom) &&
        Objects.equals(this.ammountTill, createServicePriceMetricRequestSchemaPriceMetricThresholds.ammountTill) &&
        Objects.equals(this.price, createServicePriceMetricRequestSchemaPriceMetricThresholds.price);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ammountFrom, ammountTill, price);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateServicePriceMetricRequestSchemaPriceMetricThresholds {\n");
    
    sb.append("    ammountFrom: ").append(toIndentedString(ammountFrom)).append("\n");
    sb.append("    ammountTill: ").append(toIndentedString(ammountTill)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

