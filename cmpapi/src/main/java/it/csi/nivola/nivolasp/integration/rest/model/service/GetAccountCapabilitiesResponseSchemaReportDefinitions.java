/*-
 * ========================LICENSE_START=================================
 * Api CMP
 * %%
 * Copyright (C) 2022 CSI Piemonte
 * %%
 * SPDX-FileCopyrightText: Copyright 2022 | CSI Piemonte
 * SPDX-License-Identifier: EUPL-1.2
 * =========================LICENSE_END==================================
 */
/*
 * Beehive API
 * Beehive API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: nivola.engineering@csi.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.csi.nivola.nivolasp.integration.rest.model.service;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.annotations.ApiModelProperty;

/**
 * GetAccountCapabilitiesResponseSchemaReportDefinitions
 */

public class GetAccountCapabilitiesResponseSchemaReportDefinitions {
  @JsonProperty("created")
  private Integer created = null;

  @JsonProperty("missed")
  private List<Object> missed = null;

  @JsonProperty("required")
  private Integer required = null;

  public GetAccountCapabilitiesResponseSchemaReportDefinitions created(Integer created) {
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/
  @ApiModelProperty(value = "")
  public Integer getCreated() {
    return created;
  }

  public void setCreated(Integer created) {
    this.created = created;
  }

  public GetAccountCapabilitiesResponseSchemaReportDefinitions missed(List<Object> missed) {
    this.missed = missed;
    return this;
  }

  public GetAccountCapabilitiesResponseSchemaReportDefinitions addMissedItem(Object missedItem) {
    if (this.missed == null) {
      this.missed = new ArrayList<>();
    }
    this.missed.add(missedItem);
    return this;
  }

   /**
   * Get missed
   * @return missed
  **/
  @ApiModelProperty(value = "")
  public List<Object> getMissed() {
    return missed;
  }

  public void setMissed(List<Object> missed) {
    this.missed = missed;
  }

  public GetAccountCapabilitiesResponseSchemaReportDefinitions required(Integer required) {
    this.required = required;
    return this;
  }

   /**
   * Get required
   * @return required
  **/
  @ApiModelProperty(value = "")
  public Integer getRequired() {
    return required;
  }

  public void setRequired(Integer required) {
    this.required = required;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetAccountCapabilitiesResponseSchemaReportDefinitions getAccountCapabilitiesResponseSchemaReportDefinitions = (GetAccountCapabilitiesResponseSchemaReportDefinitions) o;
    return Objects.equals(this.created, getAccountCapabilitiesResponseSchemaReportDefinitions.created) &&
        Objects.equals(this.missed, getAccountCapabilitiesResponseSchemaReportDefinitions.missed) &&
        Objects.equals(this.required, getAccountCapabilitiesResponseSchemaReportDefinitions.required);
  }

  @Override
  public int hashCode() {
    return Objects.hash(created, missed, required);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetAccountCapabilitiesResponseSchemaReportDefinitions {\n");
    
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    missed: ").append(toIndentedString(missed)).append("\n");
    sb.append("    required: ").append(toIndentedString(required)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

