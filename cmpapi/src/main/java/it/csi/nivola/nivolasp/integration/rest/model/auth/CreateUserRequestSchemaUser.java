/*-
 * ========================LICENSE_START=================================
 * Api CMP
 * %%
 * Copyright (C) 2022 CSI Piemonte
 * %%
 * SPDX-FileCopyrightText: Copyright 2022 | CSI Piemonte
 * SPDX-License-Identifier: EUPL-1.2
 * =========================LICENSE_END==================================
 */
/*
 * Beehive API
 * API description in Markdown.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: me@csi.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.csi.nivola.nivolasp.integration.rest.model.auth;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;

import io.swagger.annotations.ApiModelProperty;

/**
 * CreateUserRequestSchemaUser
 */

public class CreateUserRequestSchemaUser {
  @JsonProperty("active")
  private Boolean active = true;

  @JsonProperty("base")
  private Boolean base = false;

  @JsonProperty("desc")
  private String desc = null;

  @JsonProperty("email")
  private String email = null;

  @JsonProperty("expirydate")
  private String expirydate = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("password")
  private String password = null;

  /**
   * Gets or Sets storetype
   */
  public enum StoretypeEnum {
    DBUSER("DBUSER"),
    
    LDAPUSER("LDAPUSER");

    private String value;

    StoretypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StoretypeEnum fromValue(String text) {
      for (StoretypeEnum b : StoretypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("storetype")
  private StoretypeEnum storetype = StoretypeEnum.DBUSER;

  @JsonProperty("system")
  private Boolean system = false;

  public CreateUserRequestSchemaUser active(Boolean active) {
    this.active = active;
    return this;
  }

   /**
   * Get active
   * @return active
  **/
  @ApiModelProperty(value = "")
  public Boolean isActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }

  public CreateUserRequestSchemaUser base(Boolean base) {
    this.base = base;
    return this;
  }

   /**
   * Get base
   * @return base
  **/
  @ApiModelProperty(value = "")
  public Boolean isBase() {
    return base;
  }

  public void setBase(Boolean base) {
    this.base = base;
  }

  public CreateUserRequestSchemaUser desc(String desc) {
    this.desc = desc;
    return this;
  }

   /**
   * Get desc
   * @return desc
  **/
  @ApiModelProperty(required = true, value = "")
  public String getDesc() {
    return desc;
  }

  public void setDesc(String desc) {
    this.desc = desc;
  }

  public CreateUserRequestSchemaUser email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @ApiModelProperty(value = "")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public CreateUserRequestSchemaUser expirydate(String expirydate) {
    this.expirydate = expirydate;
    return this;
  }

   /**
   * expiration date. [default&#x3D;365days]
   * @return expirydate
  **/
  @ApiModelProperty(example = "", value = "expiration date. [default=365days]")
  public String getExpirydate() {
    return expirydate;
  }

  public void setExpirydate(String expirydate) {
    this.expirydate = expirydate;
  }

  public CreateUserRequestSchemaUser name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CreateUserRequestSchemaUser password(String password) {
    this.password = password;
    return this;
  }

   /**
   * Get password
   * @return password
  **/
  @ApiModelProperty(value = "")
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }

  public CreateUserRequestSchemaUser storetype(StoretypeEnum storetype) {
    this.storetype = storetype;
    return this;
  }

   /**
   * Get storetype
   * @return storetype
  **/
  @ApiModelProperty(value = "")
  public StoretypeEnum getStoretype() {
    return storetype;
  }

  public void setStoretype(StoretypeEnum storetype) {
    this.storetype = storetype;
  }

  public CreateUserRequestSchemaUser system(Boolean system) {
    this.system = system;
    return this;
  }

   /**
   * Get system
   * @return system
  **/
  @ApiModelProperty(value = "")
  public Boolean isSystem() {
    return system;
  }

  public void setSystem(Boolean system) {
    this.system = system;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateUserRequestSchemaUser createUserRequestSchemaUser = (CreateUserRequestSchemaUser) o;
    return Objects.equals(this.active, createUserRequestSchemaUser.active) &&
        Objects.equals(this.base, createUserRequestSchemaUser.base) &&
        Objects.equals(this.desc, createUserRequestSchemaUser.desc) &&
        Objects.equals(this.email, createUserRequestSchemaUser.email) &&
        Objects.equals(this.expirydate, createUserRequestSchemaUser.expirydate) &&
        Objects.equals(this.name, createUserRequestSchemaUser.name) &&
        Objects.equals(this.password, createUserRequestSchemaUser.password) &&
        Objects.equals(this.storetype, createUserRequestSchemaUser.storetype) &&
        Objects.equals(this.system, createUserRequestSchemaUser.system);
  }

  @Override
  public int hashCode() {
    return Objects.hash(active, base, desc, email, expirydate, name, password, storetype, system);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateUserRequestSchemaUser {\n");
    
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    base: ").append(toIndentedString(base)).append("\n");
    sb.append("    desc: ").append(toIndentedString(desc)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    expirydate: ").append(toIndentedString(expirydate)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    storetype: ").append(toIndentedString(storetype)).append("\n");
    sb.append("    system: ").append(toIndentedString(system)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

