/*-
 * ========================LICENSE_START=================================
 * Api CMP
 * %%
 * Copyright (C) 2022 CSI Piemonte
 * %%
 * SPDX-FileCopyrightText: Copyright 2022 | CSI Piemonte
 * SPDX-License-Identifier: EUPL-1.2
 * =========================LICENSE_END==================================
 */
/*
 * Beehive API
 * Beehive API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: nivola.engineering@csi.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.csi.nivola.nivolasp.integration.rest.model.service;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.annotations.ApiModelProperty;

/**
 * DetachVolumeApiRequestSchema
 */

public class DetachVolumeApiRequestSchema {
  @JsonProperty("Device")
  private String device = null;

  @JsonProperty("Force")
  private Boolean force = false;

  @JsonProperty("InstanceId")
  private String instanceId = null;

  @JsonProperty("VolumeId")
  private String volumeId = null;

  public DetachVolumeApiRequestSchema device(String device) {
    this.device = device;
    return this;
  }

   /**
   * The device name
   * @return device
  **/
  @ApiModelProperty(example = "/dev/sdh", required = true, value = "The device name")
  public String getDevice() {
    return device;
  }

  public void setDevice(String device) {
    this.device = device;
  }

  public DetachVolumeApiRequestSchema force(Boolean force) {
    this.force = force;
    return this;
  }

   /**
   * Forces detachment if the previous detachment attempt did not occur cleanly (for example, logging into an instance, unmounting the volume, and detaching normally). This option can lead to data loss or a corrupted file system. Use this option only as a last resort to detach a volume from a failed instance
   * @return force
  **/
  @ApiModelProperty(example = "true", value = "Forces detachment if the previous detachment attempt did not occur cleanly (for example, logging into an instance, unmounting the volume, and detaching normally). This option can lead to data loss or a corrupted file system. Use this option only as a last resort to detach a volume from a failed instance")
  public Boolean isForce() {
    return force;
  }

  public void setForce(Boolean force) {
    this.force = force;
  }

  public DetachVolumeApiRequestSchema instanceId(String instanceId) {
    this.instanceId = instanceId;
    return this;
  }

   /**
   * The ID of the instance
   * @return instanceId
  **/
  @ApiModelProperty(example = "123", required = true, value = "The ID of the instance")
  public String getInstanceId() {
    return instanceId;
  }

  public void setInstanceId(String instanceId) {
    this.instanceId = instanceId;
  }

  public DetachVolumeApiRequestSchema volumeId(String volumeId) {
    this.volumeId = volumeId;
    return this;
  }

   /**
   * The ID of the volume. The volume and instance must be within the same Availability Zone.
   * @return volumeId
  **/
  @ApiModelProperty(example = "123", required = true, value = "The ID of the volume. The volume and instance must be within the same Availability Zone.")
  public String getVolumeId() {
    return volumeId;
  }

  public void setVolumeId(String volumeId) {
    this.volumeId = volumeId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DetachVolumeApiRequestSchema detachVolumeApiRequestSchema = (DetachVolumeApiRequestSchema) o;
    return Objects.equals(this.device, detachVolumeApiRequestSchema.device) &&
        Objects.equals(this.force, detachVolumeApiRequestSchema.force) &&
        Objects.equals(this.instanceId, detachVolumeApiRequestSchema.instanceId) &&
        Objects.equals(this.volumeId, detachVolumeApiRequestSchema.volumeId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(device, force, instanceId, volumeId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DetachVolumeApiRequestSchema {\n");
    
    sb.append("    device: ").append(toIndentedString(device)).append("\n");
    sb.append("    force: ").append(toIndentedString(force)).append("\n");
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    volumeId: ").append(toIndentedString(volumeId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

