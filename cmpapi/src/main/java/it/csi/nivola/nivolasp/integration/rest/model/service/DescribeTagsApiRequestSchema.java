/*-
 * ========================LICENSE_START=================================
 * Api CMP
 * %%
 * Copyright (C) 2022 CSI Piemonte
 * %%
 * SPDX-FileCopyrightText: Copyright 2022 | CSI Piemonte
 * SPDX-License-Identifier: EUPL-1.2
 * =========================LICENSE_END==================================
 */
/*
 * Beehive API
 * Beehive API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: nivola.engineering@csi.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.csi.nivola.nivolasp.integration.rest.model.service;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;

import io.swagger.annotations.ApiModelProperty;

/**
 * DescribeTagsApiRequestSchema
 */

public class DescribeTagsApiRequestSchema {
  @JsonProperty("MaxResults")
  private Integer maxResults = null;

  @JsonProperty("NextToken")
  private String nextToken = null;

  @JsonProperty("key.N")
  private List<String> keyN = null;

  @JsonProperty("owner-id.N")
  private List<String> ownerIdN = null;

  @JsonProperty("resource-id.N")
  private List<String> resourceIdN = null;

  /**
   * Gets or Sets resourceTypeN
   */
  public enum ResourceTypeNEnum {
    CUSTOMER_GATEWAY("customer-gateway"),
    
    DHCP_OPTIONS("dhcp-options"),
    
    IMAGE("image"),
    
    INSTANCE("instance"),
    
    INTERNET_GATEWAY("internet-gateway"),
    
    NETWORK_ACL("network-acl"),
    
    NETWORK_INTERFACE("network-interface"),
    
    RESERVED_INSTANCES("reserved-instances"),
    
    ROUTE_TABLE("route-table"),
    
    SNAPSHOT("snapshot"),
    
    SPOT_INSTANCES_REQUEST("spot-instances-request"),
    
    SUBNET("subnet"),
    
    SECURITY_GROUP("security-group"),
    
    VOLUME("volume"),
    
    VPC("vpc"),
    
    VPN_CONNECTION("vpn-connection"),
    
    VPN_GATEWAY("vpn-gateway");

    private String value;

    ResourceTypeNEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ResourceTypeNEnum fromValue(String value) {
      for (ResourceTypeNEnum b : ResourceTypeNEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("resource-type.N")
  private List<ResourceTypeNEnum> resourceTypeN = null;

  public DescribeTagsApiRequestSchema maxResults(Integer maxResults) {
    this.maxResults = maxResults;
    return this;
  }

   /**
   * maximum number of results to return
   * minimum: -1
   * maximum: 1000
   * @return maxResults
  **/
  @ApiModelProperty(example = "", value = "maximum number of results to return")
  public Integer getMaxResults() {
    return maxResults;
  }

  public void setMaxResults(Integer maxResults) {
    this.maxResults = maxResults;
  }

  public DescribeTagsApiRequestSchema nextToken(String nextToken) {
    this.nextToken = nextToken;
    return this;
  }

   /**
   * pagination token
   * @return nextToken
  **/
  @ApiModelProperty(example = "", value = "pagination token")
  public String getNextToken() {
    return nextToken;
  }

  public void setNextToken(String nextToken) {
    this.nextToken = nextToken;
  }

  public DescribeTagsApiRequestSchema keyN(List<String> keyN) {
    this.keyN = keyN;
    return this;
  }

  public DescribeTagsApiRequestSchema addKeyNItem(String keyNItem) {
    if (this.keyN == null) {
      this.keyN = new ArrayList<>();
    }
    this.keyN.add(keyNItem);
    return this;
  }

   /**
   * tag key
   * @return keyN
  **/
  @ApiModelProperty(value = "tag key")
  public List<String> getKeyN() {
    return keyN;
  }

  public void setKeyN(List<String> keyN) {
    this.keyN = keyN;
  }

  public DescribeTagsApiRequestSchema ownerIdN(List<String> ownerIdN) {
    this.ownerIdN = ownerIdN;
    return this;
  }

  public DescribeTagsApiRequestSchema addOwnerIdNItem(String ownerIdNItem) {
    if (this.ownerIdN == null) {
      this.ownerIdN = new ArrayList<>();
    }
    this.ownerIdN.add(ownerIdNItem);
    return this;
  }

   /**
   * account ID of compute service
   * @return ownerIdN
  **/
  @ApiModelProperty(value = "account ID of compute service")
  public List<String> getOwnerIdN() {
    return ownerIdN;
  }

  public void setOwnerIdN(List<String> ownerIdN) {
    this.ownerIdN = ownerIdN;
  }

  public DescribeTagsApiRequestSchema resourceIdN(List<String> resourceIdN) {
    this.resourceIdN = resourceIdN;
    return this;
  }

  public DescribeTagsApiRequestSchema addResourceIdNItem(String resourceIdNItem) {
    if (this.resourceIdN == null) {
      this.resourceIdN = new ArrayList<>();
    }
    this.resourceIdN.add(resourceIdNItem);
    return this;
  }

   /**
   * resource type ID
   * @return resourceIdN
  **/
  @ApiModelProperty(value = "resource type ID")
  public List<String> getResourceIdN() {
    return resourceIdN;
  }

  public void setResourceIdN(List<String> resourceIdN) {
    this.resourceIdN = resourceIdN;
  }

  public DescribeTagsApiRequestSchema resourceTypeN(List<ResourceTypeNEnum> resourceTypeN) {
    this.resourceTypeN = resourceTypeN;
    return this;
  }

  public DescribeTagsApiRequestSchema addResourceTypeNItem(ResourceTypeNEnum resourceTypeNItem) {
    if (this.resourceTypeN == null) {
      this.resourceTypeN = new ArrayList<>();
    }
    this.resourceTypeN.add(resourceTypeNItem);
    return this;
  }

   /**
   * resource type ID
   * @return resourceTypeN
  **/
  @ApiModelProperty(value = "resource type ID")
  public List<ResourceTypeNEnum> getResourceTypeN() {
    return resourceTypeN;
  }

  public void setResourceTypeN(List<ResourceTypeNEnum> resourceTypeN) {
    this.resourceTypeN = resourceTypeN;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeTagsApiRequestSchema describeTagsApiRequestSchema = (DescribeTagsApiRequestSchema) o;
    return Objects.equals(this.maxResults, describeTagsApiRequestSchema.maxResults) &&
        Objects.equals(this.nextToken, describeTagsApiRequestSchema.nextToken) &&
        Objects.equals(this.keyN, describeTagsApiRequestSchema.keyN) &&
        Objects.equals(this.ownerIdN, describeTagsApiRequestSchema.ownerIdN) &&
        Objects.equals(this.resourceIdN, describeTagsApiRequestSchema.resourceIdN) &&
        Objects.equals(this.resourceTypeN, describeTagsApiRequestSchema.resourceTypeN);
  }

  @Override
  public int hashCode() {
    return Objects.hash(maxResults, nextToken, keyN, ownerIdN, resourceIdN, resourceTypeN);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeTagsApiRequestSchema {\n");
    
    sb.append("    maxResults: ").append(toIndentedString(maxResults)).append("\n");
    sb.append("    nextToken: ").append(toIndentedString(nextToken)).append("\n");
    sb.append("    keyN: ").append(toIndentedString(keyN)).append("\n");
    sb.append("    ownerIdN: ").append(toIndentedString(ownerIdN)).append("\n");
    sb.append("    resourceIdN: ").append(toIndentedString(resourceIdN)).append("\n");
    sb.append("    resourceTypeN: ").append(toIndentedString(resourceTypeN)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

