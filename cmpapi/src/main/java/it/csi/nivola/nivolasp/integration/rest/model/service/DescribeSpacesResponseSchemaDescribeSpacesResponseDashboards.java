/*-
 * ========================LICENSE_START=================================
 * Api CMP
 * %%
 * Copyright (C) 2022 CSI Piemonte
 * %%
 * SPDX-FileCopyrightText: Copyright 2022 | CSI Piemonte
 * SPDX-License-Identifier: EUPL-1.2
 * =========================LICENSE_END==================================
 */
/*
 * Beehive API
 * Beehive API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: nivola.engineering@csi.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.csi.nivola.nivolasp.integration.rest.model.service;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.annotations.ApiModelProperty;

/**
 * DescribeSpacesResponseSchemaDescribeSpacesResponseDashboards
 */

public class DescribeSpacesResponseSchemaDescribeSpacesResponseDashboards {
  @JsonProperty("dashboardId")
  private String dashboardId = null;

  @JsonProperty("dashboardName")
  private String dashboardName = null;

  @JsonProperty("dashboardScore")
  private Integer dashboardScore = null;

  @JsonProperty("dashboardVersion")
  private String dashboardVersion = null;

  @JsonProperty("endpoint")
  private String endpoint = null;

  @JsonProperty("modificationDate")
  private String modificationDate = null;

  public DescribeSpacesResponseSchemaDescribeSpacesResponseDashboards dashboardId(String dashboardId) {
    this.dashboardId = dashboardId;
    return this;
  }

   /**
   * id of the dashboard
   * @return dashboardId
  **/
  @ApiModelProperty(example = "c6772ba4-0fc2-493b-86a3-6edf717cb2ff", required = true, value = "id of the dashboard")
  public String getDashboardId() {
    return dashboardId;
  }

  public void setDashboardId(String dashboardId) {
    this.dashboardId = dashboardId;
  }

  public DescribeSpacesResponseSchemaDescribeSpacesResponseDashboards dashboardName(String dashboardName) {
    this.dashboardName = dashboardName;
    return this;
  }

   /**
   * name of the dashboard
   * @return dashboardName
  **/
  @ApiModelProperty(example = "[Filebeat MySQL] Overview ECS", required = true, value = "name of the dashboard")
  public String getDashboardName() {
    return dashboardName;
  }

  public void setDashboardName(String dashboardName) {
    this.dashboardName = dashboardName;
  }

  public DescribeSpacesResponseSchemaDescribeSpacesResponseDashboards dashboardScore(Integer dashboardScore) {
    this.dashboardScore = dashboardScore;
    return this;
  }

   /**
   * dashboard score
   * @return dashboardScore
  **/
  @ApiModelProperty(example = "1", required = true, value = "dashboard score")
  public Integer getDashboardScore() {
    return dashboardScore;
  }

  public void setDashboardScore(Integer dashboardScore) {
    this.dashboardScore = dashboardScore;
  }

  public DescribeSpacesResponseSchemaDescribeSpacesResponseDashboards dashboardVersion(String dashboardVersion) {
    this.dashboardVersion = dashboardVersion;
    return this;
  }

   /**
   * dashboard version
   * @return dashboardVersion
  **/
  @ApiModelProperty(example = "WzE3Mjk0MTksMTRd", required = true, value = "dashboard version")
  public String getDashboardVersion() {
    return dashboardVersion;
  }

  public void setDashboardVersion(String dashboardVersion) {
    this.dashboardVersion = dashboardVersion;
  }

  public DescribeSpacesResponseSchemaDescribeSpacesResponseDashboards endpoint(String endpoint) {
    this.endpoint = endpoint;
    return this;
  }

   /**
   * space dashboard endpoint
   * @return endpoint
  **/
  @ApiModelProperty(example = "https://localhost/s/prova/app/dashboards#/view/dusnawiu7cnsdiu", required = true, value = "space dashboard endpoint")
  public String getEndpoint() {
    return endpoint;
  }

  public void setEndpoint(String endpoint) {
    this.endpoint = endpoint;
  }

  public DescribeSpacesResponseSchemaDescribeSpacesResponseDashboards modificationDate(String modificationDate) {
    this.modificationDate = modificationDate;
    return this;
  }

   /**
   * dashboard modification date
   * @return modificationDate
  **/
  @ApiModelProperty(example = "2022-01-25T10:21:26.772Z", required = true, value = "dashboard modification date")
  public String getModificationDate() {
    return modificationDate;
  }

  public void setModificationDate(String modificationDate) {
    this.modificationDate = modificationDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeSpacesResponseSchemaDescribeSpacesResponseDashboards describeSpacesResponseSchemaDescribeSpacesResponseDashboards = (DescribeSpacesResponseSchemaDescribeSpacesResponseDashboards) o;
    return Objects.equals(this.dashboardId, describeSpacesResponseSchemaDescribeSpacesResponseDashboards.dashboardId) &&
        Objects.equals(this.dashboardName, describeSpacesResponseSchemaDescribeSpacesResponseDashboards.dashboardName) &&
        Objects.equals(this.dashboardScore, describeSpacesResponseSchemaDescribeSpacesResponseDashboards.dashboardScore) &&
        Objects.equals(this.dashboardVersion, describeSpacesResponseSchemaDescribeSpacesResponseDashboards.dashboardVersion) &&
        Objects.equals(this.endpoint, describeSpacesResponseSchemaDescribeSpacesResponseDashboards.endpoint) &&
        Objects.equals(this.modificationDate, describeSpacesResponseSchemaDescribeSpacesResponseDashboards.modificationDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dashboardId, dashboardName, dashboardScore, dashboardVersion, endpoint, modificationDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeSpacesResponseSchemaDescribeSpacesResponseDashboards {\n");
    
    sb.append("    dashboardId: ").append(toIndentedString(dashboardId)).append("\n");
    sb.append("    dashboardName: ").append(toIndentedString(dashboardName)).append("\n");
    sb.append("    dashboardScore: ").append(toIndentedString(dashboardScore)).append("\n");
    sb.append("    dashboardVersion: ").append(toIndentedString(dashboardVersion)).append("\n");
    sb.append("    endpoint: ").append(toIndentedString(endpoint)).append("\n");
    sb.append("    modificationDate: ").append(toIndentedString(modificationDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

