/*
 * Beehive API
 * Beehive API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: nivola.engineering@csi.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.csi.nivola.nivolasp.integration.rest.model.service;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;

import io.swagger.annotations.ApiModelProperty;

/**
 * CreateDBInstancesApiRequestSchemaDbinstance
 */

public class CreateDBInstancesApiRequestSchemaDbinstance {
  @JsonProperty("AccountId")
  private String accountId = null;

  @JsonProperty("AllocatedStorage")
  private Integer allocatedStorage = null;

  @JsonProperty("DBInstanceClass")
  private String dbInstanceClass = null;

  @JsonProperty("DBInstanceIdentifier")
  private String dbInstanceIdentifier = null;

  @JsonProperty("DBName")
  private String dbName = "mydbname";

  @JsonProperty("DBSubnetGroupName")
  private String dbSubnetGroupName = null;

  /**
   * engine of DB instance
   */
  public enum EngineEnum {
    MYSQL("mysql"),
    
    ORACLE("oracle"),
    
<<<<<<< HEAD
    POSTGRES("postgres"),
	  
<<<<<<< HEAD
	POSTGRES_SQL("postgresql"),
	
	SQL_SERVER("sqlserver");
	  
	 
=======
	POSTGRES_SQL("postgresql");
>>>>>>> develop
=======
    POSTGRESQL("postgresql"),
    
    SQLSERVER("sqlserver");
>>>>>>> rigenerazione

    private String value;

    EngineEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static EngineEnum fromValue(String text) {
      for (EngineEnum b : EngineEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("Engine")
  private EngineEnum engine = null;

<<<<<<< HEAD
  /**
   * engine version of DB instance
   */
  public enum EngineVersionEnum {
    _5_7("5.7"),
    
    _5_6("5.6"),
    
    _11("11"),
    
    _12("12"),
    
    _9_6("9.6"),
    
    _8("8"),
    
    _12EE("12EE"),
    
    _19EE("19EE"),
    
    _2017("2017");
	  
	  
    private String value;

    EngineVersionEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static EngineVersionEnum fromValue(String text) {
      for (EngineVersionEnum b : EngineVersionEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

=======
>>>>>>> rigenerazione
  @JsonProperty("EngineVersion")
  private String engineVersion = null;

  @JsonProperty("MasterUserPassword")
  private String masterUserPassword = null;

  @JsonProperty("MultiAZ")
  private Boolean multiAZ = false;

  @JsonProperty("Nvl_KeyName")
  private String nvlKeyName = null;

  @JsonProperty("Tag_N")
  private List<CreateDBInstancesApiRequestSchemaDbinstanceTagN> tagN = null;

  @JsonProperty("VpcSecurityGroupIds")
  private CreateDBInstancesApiRequestSchemaDbinstanceVpcSecurityGroupIds vpcSecurityGroupIds = null;

  public CreateDBInstancesApiRequestSchemaDbinstance accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * account id or uuid associated to compute zone
   * @return accountId
  **/
  @ApiModelProperty(example = "", required = true, value = "account id or uuid associated to compute zone")
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }

  public CreateDBInstancesApiRequestSchemaDbinstance allocatedStorage(Integer allocatedStorage) {
    this.allocatedStorage = allocatedStorage;
    return this;
  }

   /**
   * amount of storage (in GB) to allocate for the DB instance
   * minimum: 30
   * @return allocatedStorage
  **/
  @ApiModelProperty(example = "30", value = "amount of storage (in GB) to allocate for the DB instance")
  public Integer getAllocatedStorage() {
    return allocatedStorage;
  }

  public void setAllocatedStorage(Integer allocatedStorage) {
    this.allocatedStorage = allocatedStorage;
  }

  public CreateDBInstancesApiRequestSchemaDbinstance dbInstanceClass(String dbInstanceClass) {
    this.dbInstanceClass = dbInstanceClass;
    return this;
  }

   /**
   * service definition of the DB instance
   * @return dbInstanceClass
  **/
  @ApiModelProperty(example = "db.m1.small", required = true, value = "service definition of the DB instance")
  public String getDbInstanceClass() {
    return dbInstanceClass;
  }

  public void setDbInstanceClass(String dbInstanceClass) {
    this.dbInstanceClass = dbInstanceClass;
  }

  public CreateDBInstancesApiRequestSchemaDbinstance dbInstanceIdentifier(String dbInstanceIdentifier) {
    this.dbInstanceIdentifier = dbInstanceIdentifier;
    return this;
  }

   /**
   * ID DB instance account
   * @return dbInstanceIdentifier
  **/
  @ApiModelProperty(example = "", required = true, value = "ID DB instance account")
  public String getDbInstanceIdentifier() {
    return dbInstanceIdentifier;
  }

  public void setDbInstanceIdentifier(String dbInstanceIdentifier) {
    this.dbInstanceIdentifier = dbInstanceIdentifier;
  }

  public CreateDBInstancesApiRequestSchemaDbinstance dbName(String dbName) {
    this.dbName = dbName;
    return this;
  }

   /**
   * name of instance database to create
   * @return dbName
  **/
  @ApiModelProperty(example = "", value = "name of instance database to create")
  public String getDbName() {
    return dbName;
  }

  public void setDbName(String dbName) {
    this.dbName = dbName;
  }

  public CreateDBInstancesApiRequestSchemaDbinstance dbSubnetGroupName(String dbSubnetGroupName) {
    this.dbSubnetGroupName = dbSubnetGroupName;
    return this;
  }

   /**
   * a DB security groups to associate with DB instance
   * @return dbSubnetGroupName
  **/
  @ApiModelProperty(example = "", required = true, value = "a DB security groups to associate with DB instance")
  public String getDbSubnetGroupName() {
    return dbSubnetGroupName;
  }

  public void setDbSubnetGroupName(String dbSubnetGroupName) {
    this.dbSubnetGroupName = dbSubnetGroupName;
  }

  public CreateDBInstancesApiRequestSchemaDbinstance engine(EngineEnum engine) {
    this.engine = engine;
    return this;
  }

   /**
   * engine of DB instance
   * @return engine
  **/
  @ApiModelProperty(example = "MySQL", required = true, value = "engine of DB instance")
  public EngineEnum getEngine() {
    return engine;
  }

  public void setEngine(EngineEnum engine) {
    this.engine = engine;
  }

  public CreateDBInstancesApiRequestSchemaDbinstance engineVersion(String engineVersion) {
    this.engineVersion = engineVersion;
    return this;
  }

   /**
   * engine version of DB instance
   * @return engineVersion
  **/
  @ApiModelProperty(example = "5.7", required = true, value = "engine version of DB instance")
  public String getEngineVersion() {
    return engineVersion;
  }

  public void setEngineVersion(String engineVersion) {
    this.engineVersion = engineVersion;
  }

  public CreateDBInstancesApiRequestSchemaDbinstance masterUserPassword(String masterUserPassword) {
    this.masterUserPassword = masterUserPassword;
    return this;
  }

   /**
   * password for the master database user
   * @return masterUserPassword
  **/
  @ApiModelProperty(example = "", value = "password for the master database user")
  public String getMasterUserPassword() {
    return masterUserPassword;
  }

  public void setMasterUserPassword(String masterUserPassword) {
    this.masterUserPassword = masterUserPassword;
  }

  public CreateDBInstancesApiRequestSchemaDbinstance multiAZ(Boolean multiAZ) {
    this.multiAZ = multiAZ;
    return this;
  }

   /**
   * Specifies if the DB instance is a Multi-AZ deployment
   * @return multiAZ
  **/
  @ApiModelProperty(example = "true", value = "Specifies if the DB instance is a Multi-AZ deployment")
  public Boolean isMultiAZ() {
    return multiAZ;
  }

  public void setMultiAZ(Boolean multiAZ) {
    this.multiAZ = multiAZ;
  }

  public CreateDBInstancesApiRequestSchemaDbinstance nvlKeyName(String nvlKeyName) {
    this.nvlKeyName = nvlKeyName;
    return this;
  }

   /**
   * The name of the key pair
   * @return nvlKeyName
  **/
  @ApiModelProperty(example = "1ffd", value = "The name of the key pair")
  public String getNvlKeyName() {
    return nvlKeyName;
  }

  public void setNvlKeyName(String nvlKeyName) {
    this.nvlKeyName = nvlKeyName;
  }

  public CreateDBInstancesApiRequestSchemaDbinstance tagN(List<CreateDBInstancesApiRequestSchemaDbinstanceTagN> tagN) {
    this.tagN = tagN;
    return this;
  }

  public CreateDBInstancesApiRequestSchemaDbinstance addTagNItem(CreateDBInstancesApiRequestSchemaDbinstanceTagN tagNItem) {
    if (this.tagN == null) {
      this.tagN = new ArrayList<>();
    }
    this.tagN.add(tagNItem);
    return this;
  }

   /**
   * Get tagN
   * @return tagN
  **/
  @ApiModelProperty(value = "")
  public List<CreateDBInstancesApiRequestSchemaDbinstanceTagN> getTagN() {
    return tagN;
  }

  public void setTagN(List<CreateDBInstancesApiRequestSchemaDbinstanceTagN> tagN) {
    this.tagN = tagN;
  }

  public CreateDBInstancesApiRequestSchemaDbinstance vpcSecurityGroupIds(CreateDBInstancesApiRequestSchemaDbinstanceVpcSecurityGroupIds vpcSecurityGroupIds) {
    this.vpcSecurityGroupIds = vpcSecurityGroupIds;
    return this;
  }

   /**
   * Get vpcSecurityGroupIds
   * @return vpcSecurityGroupIds
  **/
  @ApiModelProperty(value = "")
  public CreateDBInstancesApiRequestSchemaDbinstanceVpcSecurityGroupIds getVpcSecurityGroupIds() {
    return vpcSecurityGroupIds;
  }

  public void setVpcSecurityGroupIds(CreateDBInstancesApiRequestSchemaDbinstanceVpcSecurityGroupIds vpcSecurityGroupIds) {
    this.vpcSecurityGroupIds = vpcSecurityGroupIds;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateDBInstancesApiRequestSchemaDbinstance createDBInstancesApiRequestSchemaDbinstance = (CreateDBInstancesApiRequestSchemaDbinstance) o;
    return Objects.equals(this.accountId, createDBInstancesApiRequestSchemaDbinstance.accountId) &&
        Objects.equals(this.allocatedStorage, createDBInstancesApiRequestSchemaDbinstance.allocatedStorage) &&
        Objects.equals(this.dbInstanceClass, createDBInstancesApiRequestSchemaDbinstance.dbInstanceClass) &&
        Objects.equals(this.dbInstanceIdentifier, createDBInstancesApiRequestSchemaDbinstance.dbInstanceIdentifier) &&
        Objects.equals(this.dbName, createDBInstancesApiRequestSchemaDbinstance.dbName) &&
        Objects.equals(this.dbSubnetGroupName, createDBInstancesApiRequestSchemaDbinstance.dbSubnetGroupName) &&
        Objects.equals(this.engine, createDBInstancesApiRequestSchemaDbinstance.engine) &&
        Objects.equals(this.engineVersion, createDBInstancesApiRequestSchemaDbinstance.engineVersion) &&
        Objects.equals(this.masterUserPassword, createDBInstancesApiRequestSchemaDbinstance.masterUserPassword) &&
        Objects.equals(this.multiAZ, createDBInstancesApiRequestSchemaDbinstance.multiAZ) &&
        Objects.equals(this.nvlKeyName, createDBInstancesApiRequestSchemaDbinstance.nvlKeyName) &&
        Objects.equals(this.tagN, createDBInstancesApiRequestSchemaDbinstance.tagN) &&
        Objects.equals(this.vpcSecurityGroupIds, createDBInstancesApiRequestSchemaDbinstance.vpcSecurityGroupIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, allocatedStorage, dbInstanceClass, dbInstanceIdentifier, dbName, dbSubnetGroupName, engine, engineVersion, masterUserPassword, multiAZ, nvlKeyName, tagN, vpcSecurityGroupIds);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateDBInstancesApiRequestSchemaDbinstance {\n");
    
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    allocatedStorage: ").append(toIndentedString(allocatedStorage)).append("\n");
    sb.append("    dbInstanceClass: ").append(toIndentedString(dbInstanceClass)).append("\n");
    sb.append("    dbInstanceIdentifier: ").append(toIndentedString(dbInstanceIdentifier)).append("\n");
    sb.append("    dbName: ").append(toIndentedString(dbName)).append("\n");
    sb.append("    dbSubnetGroupName: ").append(toIndentedString(dbSubnetGroupName)).append("\n");
    sb.append("    engine: ").append(toIndentedString(engine)).append("\n");
    sb.append("    engineVersion: ").append(toIndentedString(engineVersion)).append("\n");
    sb.append("    masterUserPassword: ").append(toIndentedString(masterUserPassword)).append("\n");
    sb.append("    multiAZ: ").append(toIndentedString(multiAZ)).append("\n");
    sb.append("    nvlKeyName: ").append(toIndentedString(nvlKeyName)).append("\n");
    sb.append("    tagN: ").append(toIndentedString(tagN)).append("\n");
    sb.append("    vpcSecurityGroupIds: ").append(toIndentedString(vpcSecurityGroupIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

