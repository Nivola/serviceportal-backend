/*-
 * ========================LICENSE_START=================================
 * Api CMP
 * %%
 * Copyright (C) 2022 CSI Piemonte
 * %%
 * SPDX-FileCopyrightText: Copyright 2022 | CSI Piemonte
 * SPDX-License-Identifier: EUPL-1.2
 * =========================LICENSE_END==================================
 */
/*
 * Beehive API
 * Beehive API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: nivola.engineering@csi.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.csi.nivola.nivolasp.integration.rest.model.service;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.annotations.ApiModelProperty;

/**
 * GetActiveServicesByAccountResponseSchemaServicesServiceContainer
 */

public class GetActiveServicesByAccountResponseSchemaServicesServiceContainer {
  @JsonProperty("desc")
  private String desc = null;

  @JsonProperty("extraction_date")
  private LocalDateTime extractionDate = null;

  @JsonProperty("instances")
  private Integer instances = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("plugin_type")
  private String pluginType = null;

  @JsonProperty("status")
  private String status = null;

  @JsonProperty("tot_metrics")
  private List<GetActiveServicesByAccountResponseSchemaServicesTotMetrics> totMetrics = new ArrayList<>();

  @JsonProperty("uuid")
  private String uuid = null;

  public GetActiveServicesByAccountResponseSchemaServicesServiceContainer desc(String desc) {
    this.desc = desc;
    return this;
  }

   /**
   * Get desc
   * @return desc
  **/
  @ApiModelProperty(value = "")
  public String getDesc() {
    return desc;
  }

  public void setDesc(String desc) {
    this.desc = desc;
  }

  public GetActiveServicesByAccountResponseSchemaServicesServiceContainer extractionDate(LocalDateTime extractionDate) {
    this.extractionDate = extractionDate;
    return this;
  }

   /**
   * metric extraction date
   * @return extractionDate
  **/
  @ApiModelProperty(example = "1990-12-31T23:59:59Z", value = "metric extraction date")
  public LocalDateTime getExtractionDate() {
    return extractionDate;
  }

  public void setExtractionDate(LocalDateTime extractionDate) {
    this.extractionDate = extractionDate;
  }

  public GetActiveServicesByAccountResponseSchemaServicesServiceContainer instances(Integer instances) {
    this.instances = instances;
    return this;
  }

   /**
   * Num. instances
   * @return instances
  **/
  @ApiModelProperty(example = "0", required = true, value = "Num. instances")
  public Integer getInstances() {
    return instances;
  }

  public void setInstances(Integer instances) {
    this.instances = instances;
  }

  public GetActiveServicesByAccountResponseSchemaServicesServiceContainer name(String name) {
    this.name = name;
    return this;
  }

   /**
   * service name
   * @return name
  **/
  @ApiModelProperty(example = "computeservice-medium", required = true, value = "service name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public GetActiveServicesByAccountResponseSchemaServicesServiceContainer pluginType(String pluginType) {
    this.pluginType = pluginType;
    return this;
  }

   /**
   * Service container plugin name
   * @return pluginType
  **/
  @ApiModelProperty(example = "ComputeService", required = true, value = "Service container plugin name")
  public String getPluginType() {
    return pluginType;
  }

  public void setPluginType(String pluginType) {
    this.pluginType = pluginType;
  }

  public GetActiveServicesByAccountResponseSchemaServicesServiceContainer status(String status) {
    this.status = status;
    return this;
  }

   /**
   * service status
   * @return status
  **/
  @ApiModelProperty(example = "ACTIVE", required = true, value = "service status")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public GetActiveServicesByAccountResponseSchemaServicesServiceContainer totMetrics(List<GetActiveServicesByAccountResponseSchemaServicesTotMetrics> totMetrics) {
    this.totMetrics = totMetrics;
    return this;
  }

  public GetActiveServicesByAccountResponseSchemaServicesServiceContainer addTotMetricsItem(GetActiveServicesByAccountResponseSchemaServicesTotMetrics totMetricsItem) {
    this.totMetrics.add(totMetricsItem);
    return this;
  }

   /**
   * Get totMetrics
   * @return totMetrics
  **/
  @ApiModelProperty(required = true, value = "")
  public List<GetActiveServicesByAccountResponseSchemaServicesTotMetrics> getTotMetrics() {
    return totMetrics;
  }

  public void setTotMetrics(List<GetActiveServicesByAccountResponseSchemaServicesTotMetrics> totMetrics) {
    this.totMetrics = totMetrics;
  }

  public GetActiveServicesByAccountResponseSchemaServicesServiceContainer uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * service uuid
   * @return uuid
  **/
  @ApiModelProperty(example = "148175b2-948a-4567-9ecd-9c80425fc8f0", required = true, value = "service uuid")
  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetActiveServicesByAccountResponseSchemaServicesServiceContainer getActiveServicesByAccountResponseSchemaServicesServiceContainer = (GetActiveServicesByAccountResponseSchemaServicesServiceContainer) o;
    return Objects.equals(this.desc, getActiveServicesByAccountResponseSchemaServicesServiceContainer.desc) &&
        Objects.equals(this.extractionDate, getActiveServicesByAccountResponseSchemaServicesServiceContainer.extractionDate) &&
        Objects.equals(this.instances, getActiveServicesByAccountResponseSchemaServicesServiceContainer.instances) &&
        Objects.equals(this.name, getActiveServicesByAccountResponseSchemaServicesServiceContainer.name) &&
        Objects.equals(this.pluginType, getActiveServicesByAccountResponseSchemaServicesServiceContainer.pluginType) &&
        Objects.equals(this.status, getActiveServicesByAccountResponseSchemaServicesServiceContainer.status) &&
        Objects.equals(this.totMetrics, getActiveServicesByAccountResponseSchemaServicesServiceContainer.totMetrics) &&
        Objects.equals(this.uuid, getActiveServicesByAccountResponseSchemaServicesServiceContainer.uuid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(desc, extractionDate, instances, name, pluginType, status, totMetrics, uuid);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetActiveServicesByAccountResponseSchemaServicesServiceContainer {\n");
    
    sb.append("    desc: ").append(toIndentedString(desc)).append("\n");
    sb.append("    extractionDate: ").append(toIndentedString(extractionDate)).append("\n");
    sb.append("    instances: ").append(toIndentedString(instances)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    pluginType: ").append(toIndentedString(pluginType)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    totMetrics: ").append(toIndentedString(totMetrics)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

