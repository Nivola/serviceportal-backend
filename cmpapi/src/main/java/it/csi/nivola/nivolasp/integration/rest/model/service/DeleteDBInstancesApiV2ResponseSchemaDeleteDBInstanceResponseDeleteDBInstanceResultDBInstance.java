/*-
 * ========================LICENSE_START=================================
 * Api CMP
 * %%
 * Copyright (C) 2022 CSI Piemonte
 * %%
 * SPDX-FileCopyrightText: Copyright 2022 | CSI Piemonte
 * SPDX-License-Identifier: EUPL-1.2
 * =========================LICENSE_END==================================
 */
/*
 * Beehive API
 * Beehive API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: nivola.engineering@csi.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.csi.nivola.nivolasp.integration.rest.model.service;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.annotations.ApiModelProperty;

/**
 * DeleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance
 */

public class DeleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance {
  @JsonProperty("AllocatedStorage")
  private Integer allocatedStorage = null;

  @JsonProperty("AvailabilityZone")
  private String availabilityZone = null;

  @JsonProperty("CharacterSetName")
  private String characterSetName = "latin1";

  @JsonProperty("DBInstanceClass")
  private String dbInstanceClass = null;

  @JsonProperty("DBInstanceIdentifier")
  private String dbInstanceIdentifier = null;

  @JsonProperty("DBInstanceStatus")
  private String dbInstanceStatus = null;

  @JsonProperty("DBName")
  private String dbName = null;

  @JsonProperty("DBSubnetGroup")
  private CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceDBSubnetGroup dbSubnetGroup = null;

  @JsonProperty("DbInstancePort")
  private Integer dbInstancePort = null;

  @JsonProperty("DbiResourceId")
  private String dbiResourceId = null;

  @JsonProperty("Endpoint")
  private CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceEndpoint endpoint = null;

  @JsonProperty("Engine")
  private String engine = null;

  @JsonProperty("EngineVersion")
  private String engineVersion = null;

  @JsonProperty("InstanceCreateTime")
  private LocalDateTime instanceCreateTime = null;

  @JsonProperty("LicenseModel")
  private String licenseModel = null;

  @JsonProperty("MasterUsername")
  private String masterUsername = null;

  @JsonProperty("MultiAZ")
  private Boolean multiAZ = false;

  @JsonProperty("PreferredBackupWindow")
  private String preferredBackupWindow = null;

  @JsonProperty("PreferredMaintenanceWindow")
  private String preferredMaintenanceWindow = null;

  @JsonProperty("ReadReplicaDBClusterIdentifiers")
  private List<String> readReplicaDBClusterIdentifiers = null;

  @JsonProperty("ReadReplicaDBInstanceIdentifiers")
  private List<String> readReplicaDBInstanceIdentifiers = null;

  @JsonProperty("ReadReplicaSourceDBInstanceIdentifier")
  private String readReplicaSourceDBInstanceIdentifier = null;

  @JsonProperty("SecondaryAvailabilityZone")
  private String secondaryAvailabilityZone = null;

  @JsonProperty("StatusInfos")
  private List<CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceStatusInfos> statusInfos = null;

  @JsonProperty("StorageEncrypted")
  private Boolean storageEncrypted = null;

  @JsonProperty("StorageType")
  private String storageType = null;

  @JsonProperty("TagList")
  private List<CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceTagList> tagList = null;

  @JsonProperty("Timezone")
  private String timezone = null;

  @JsonProperty("VpcSecurityGroups")
  private List<CreateDBInstanceResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceVpcSecurityGroups> vpcSecurityGroups = null;

  @JsonProperty("nvl-ownerAlias")
  private String nvlOwnerAlias = null;

  @JsonProperty("nvl-ownerId")
  private String nvlOwnerId = null;

  @JsonProperty("nvl-stateReason")
  private List<CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceNvlstateReason> nvlStateReason = null;

  public DeleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance allocatedStorage(Integer allocatedStorage) {
    this.allocatedStorage = allocatedStorage;
    return this;
  }

   /**
   * amount of storage (in GB) to allocate for the DB instance
   * @return allocatedStorage
  **/
  @ApiModelProperty(example = "20", value = "amount of storage (in GB) to allocate for the DB instance")
  public Integer getAllocatedStorage() {
    return allocatedStorage;
  }

  public void setAllocatedStorage(Integer allocatedStorage) {
    this.allocatedStorage = allocatedStorage;
  }

  public DeleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance availabilityZone(String availabilityZone) {
    this.availabilityZone = availabilityZone;
    return this;
  }

   /**
   * 
   * @return availabilityZone
  **/
  @ApiModelProperty(example = "", value = "")
  public String getAvailabilityZone() {
    return availabilityZone;
  }

  public void setAvailabilityZone(String availabilityZone) {
    this.availabilityZone = availabilityZone;
  }

  public DeleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance characterSetName(String characterSetName) {
    this.characterSetName = characterSetName;
    return this;
  }

   /**
   * For supported engines, indicates that the DB instance should be  associated with the specified CharacterSet.
   * @return characterSetName
  **/
  @ApiModelProperty(value = "For supported engines, indicates that the DB instance should be  associated with the specified CharacterSet.")
  public String getCharacterSetName() {
    return characterSetName;
  }

  public void setCharacterSetName(String characterSetName) {
    this.characterSetName = characterSetName;
  }

  public DeleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance dbInstanceClass(String dbInstanceClass) {
    this.dbInstanceClass = dbInstanceClass;
    return this;
  }

   /**
   * The compute and memory capacity of the DB instance
   * @return dbInstanceClass
  **/
  @ApiModelProperty(example = "db.m4.large", value = "The compute and memory capacity of the DB instance")
  public String getDbInstanceClass() {
    return dbInstanceClass;
  }

  public void setDbInstanceClass(String dbInstanceClass) {
    this.dbInstanceClass = dbInstanceClass;
  }

  public DeleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance dbInstanceIdentifier(String dbInstanceIdentifier) {
    this.dbInstanceIdentifier = dbInstanceIdentifier;
    return this;
  }

   /**
   * The DB instance identifier
   * @return dbInstanceIdentifier
  **/
  @ApiModelProperty(example = "", value = "The DB instance identifier")
  public String getDbInstanceIdentifier() {
    return dbInstanceIdentifier;
  }

  public void setDbInstanceIdentifier(String dbInstanceIdentifier) {
    this.dbInstanceIdentifier = dbInstanceIdentifier;
  }

  public DeleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance dbInstanceStatus(String dbInstanceStatus) {
    this.dbInstanceStatus = dbInstanceStatus;
    return this;
  }

   /**
   * Specifies the current state of this database.
   * @return dbInstanceStatus
  **/
  @ApiModelProperty(example = "available", value = "Specifies the current state of this database.")
  public String getDbInstanceStatus() {
    return dbInstanceStatus;
  }

  public void setDbInstanceStatus(String dbInstanceStatus) {
    this.dbInstanceStatus = dbInstanceStatus;
  }

  public DeleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance dbName(String dbName) {
    this.dbName = dbName;
    return this;
  }

   /**
   * The name of the database to create when the DB instance is created. 
   * @return dbName
  **/
  @ApiModelProperty(example = "", value = "The name of the database to create when the DB instance is created. ")
  public String getDbName() {
    return dbName;
  }

  public void setDbName(String dbName) {
    this.dbName = dbName;
  }

  public DeleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance dbSubnetGroup(CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceDBSubnetGroup dbSubnetGroup) {
    this.dbSubnetGroup = dbSubnetGroup;
    return this;
  }

   /**
   * Get dbSubnetGroup
   * @return dbSubnetGroup
  **/
  @ApiModelProperty(value = "")
  public CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceDBSubnetGroup getDbSubnetGroup() {
    return dbSubnetGroup;
  }

  public void setDbSubnetGroup(CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceDBSubnetGroup dbSubnetGroup) {
    this.dbSubnetGroup = dbSubnetGroup;
  }

  public DeleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance dbInstancePort(Integer dbInstancePort) {
    this.dbInstancePort = dbInstancePort;
    return this;
  }

   /**
   * Specifies the port that the DB instance listens on. If the DB instance is part of a DB cluster, this can be a different port than the DB cluster port.
   * @return dbInstancePort
  **/
  @ApiModelProperty(example = "3306", value = "Specifies the port that the DB instance listens on. If the DB instance is part of a DB cluster, this can be a different port than the DB cluster port.")
  public Integer getDbInstancePort() {
    return dbInstancePort;
  }

  public void setDbInstancePort(Integer dbInstancePort) {
    this.dbInstancePort = dbInstancePort;
  }

  public DeleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance dbiResourceId(String dbiResourceId) {
    this.dbiResourceId = dbiResourceId;
    return this;
  }

   /**
   * The Region-unique, immutable identifier for the DB instance. 
   * @return dbiResourceId
  **/
  @ApiModelProperty(example = "1234", value = "The Region-unique, immutable identifier for the DB instance. ")
  public String getDbiResourceId() {
    return dbiResourceId;
  }

  public void setDbiResourceId(String dbiResourceId) {
    this.dbiResourceId = dbiResourceId;
  }

  public DeleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance endpoint(CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceEndpoint endpoint) {
    this.endpoint = endpoint;
    return this;
  }

   /**
   * Get endpoint
   * @return endpoint
  **/
  @ApiModelProperty(value = "")
  public CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceEndpoint getEndpoint() {
    return endpoint;
  }

  public void setEndpoint(CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceEndpoint endpoint) {
    this.endpoint = endpoint;
  }

  public DeleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance engine(String engine) {
    this.engine = engine;
    return this;
  }

   /**
   * name of the DB engine
   * @return engine
  **/
  @ApiModelProperty(example = "", value = "name of the DB engine")
  public String getEngine() {
    return engine;
  }

  public void setEngine(String engine) {
    this.engine = engine;
  }

  public DeleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance engineVersion(String engineVersion) {
    this.engineVersion = engineVersion;
    return this;
  }

   /**
   * DB engine version
   * @return engineVersion
  **/
  @ApiModelProperty(example = "", value = "DB engine version")
  public String getEngineVersion() {
    return engineVersion;
  }

  public void setEngineVersion(String engineVersion) {
    this.engineVersion = engineVersion;
  }

  public DeleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance instanceCreateTime(LocalDateTime instanceCreateTime) {
    this.instanceCreateTime = instanceCreateTime;
    return this;
  }

   /**
   * DB instance creation date
   * @return instanceCreateTime
  **/
  @ApiModelProperty(example = "", value = "DB instance creation date")
  public LocalDateTime getInstanceCreateTime() {
    return instanceCreateTime;
  }

  public void setInstanceCreateTime(LocalDateTime instanceCreateTime) {
    this.instanceCreateTime = instanceCreateTime;
  }

  public DeleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance licenseModel(String licenseModel) {
    this.licenseModel = licenseModel;
    return this;
  }

   /**
   * License model information for this DB instance.
   * @return licenseModel
  **/
  @ApiModelProperty(example = "", value = "License model information for this DB instance.")
  public String getLicenseModel() {
    return licenseModel;
  }

  public void setLicenseModel(String licenseModel) {
    this.licenseModel = licenseModel;
  }

  public DeleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance masterUsername(String masterUsername) {
    this.masterUsername = masterUsername;
    return this;
  }

   /**
   * Get masterUsername
   * @return masterUsername
  **/
  @ApiModelProperty(value = "")
  public String getMasterUsername() {
    return masterUsername;
  }

  public void setMasterUsername(String masterUsername) {
    this.masterUsername = masterUsername;
  }

  public DeleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance multiAZ(Boolean multiAZ) {
    this.multiAZ = multiAZ;
    return this;
  }

   /**
   * Specifies if the DB instance is a Multi-AZ deployment
   * @return multiAZ
  **/
  @ApiModelProperty(example = "true", value = "Specifies if the DB instance is a Multi-AZ deployment")
  public Boolean isMultiAZ() {
    return multiAZ;
  }

  public void setMultiAZ(Boolean multiAZ) {
    this.multiAZ = multiAZ;
  }

  public DeleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance preferredBackupWindow(String preferredBackupWindow) {
    this.preferredBackupWindow = preferredBackupWindow;
    return this;
  }

   /**
   * Get preferredBackupWindow
   * @return preferredBackupWindow
  **/
  @ApiModelProperty(value = "")
  public String getPreferredBackupWindow() {
    return preferredBackupWindow;
  }

  public void setPreferredBackupWindow(String preferredBackupWindow) {
    this.preferredBackupWindow = preferredBackupWindow;
  }

  public DeleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance preferredMaintenanceWindow(String preferredMaintenanceWindow) {
    this.preferredMaintenanceWindow = preferredMaintenanceWindow;
    return this;
  }

   /**
   * Get preferredMaintenanceWindow
   * @return preferredMaintenanceWindow
  **/
  @ApiModelProperty(value = "")
  public String getPreferredMaintenanceWindow() {
    return preferredMaintenanceWindow;
  }

  public void setPreferredMaintenanceWindow(String preferredMaintenanceWindow) {
    this.preferredMaintenanceWindow = preferredMaintenanceWindow;
  }

  public DeleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance readReplicaDBClusterIdentifiers(List<String> readReplicaDBClusterIdentifiers) {
    this.readReplicaDBClusterIdentifiers = readReplicaDBClusterIdentifiers;
    return this;
  }

  public DeleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance addReadReplicaDBClusterIdentifiersItem(String readReplicaDBClusterIdentifiersItem) {
    if (this.readReplicaDBClusterIdentifiers == null) {
      this.readReplicaDBClusterIdentifiers = new ArrayList<>();
    }
    this.readReplicaDBClusterIdentifiers.add(readReplicaDBClusterIdentifiersItem);
    return this;
  }

   /**
   * Get readReplicaDBClusterIdentifiers
   * @return readReplicaDBClusterIdentifiers
  **/
  @ApiModelProperty(value = "")
  public List<String> getReadReplicaDBClusterIdentifiers() {
    return readReplicaDBClusterIdentifiers;
  }

  public void setReadReplicaDBClusterIdentifiers(List<String> readReplicaDBClusterIdentifiers) {
    this.readReplicaDBClusterIdentifiers = readReplicaDBClusterIdentifiers;
  }

  public DeleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance readReplicaDBInstanceIdentifiers(List<String> readReplicaDBInstanceIdentifiers) {
    this.readReplicaDBInstanceIdentifiers = readReplicaDBInstanceIdentifiers;
    return this;
  }

  public DeleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance addReadReplicaDBInstanceIdentifiersItem(String readReplicaDBInstanceIdentifiersItem) {
    if (this.readReplicaDBInstanceIdentifiers == null) {
      this.readReplicaDBInstanceIdentifiers = new ArrayList<>();
    }
    this.readReplicaDBInstanceIdentifiers.add(readReplicaDBInstanceIdentifiersItem);
    return this;
  }

   /**
   * Get readReplicaDBInstanceIdentifiers
   * @return readReplicaDBInstanceIdentifiers
  **/
  @ApiModelProperty(value = "")
  public List<String> getReadReplicaDBInstanceIdentifiers() {
    return readReplicaDBInstanceIdentifiers;
  }

  public void setReadReplicaDBInstanceIdentifiers(List<String> readReplicaDBInstanceIdentifiers) {
    this.readReplicaDBInstanceIdentifiers = readReplicaDBInstanceIdentifiers;
  }

  public DeleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance readReplicaSourceDBInstanceIdentifier(String readReplicaSourceDBInstanceIdentifier) {
    this.readReplicaSourceDBInstanceIdentifier = readReplicaSourceDBInstanceIdentifier;
    return this;
  }

   /**
   * Get readReplicaSourceDBInstanceIdentifier
   * @return readReplicaSourceDBInstanceIdentifier
  **/
  @ApiModelProperty(value = "")
  public String getReadReplicaSourceDBInstanceIdentifier() {
    return readReplicaSourceDBInstanceIdentifier;
  }

  public void setReadReplicaSourceDBInstanceIdentifier(String readReplicaSourceDBInstanceIdentifier) {
    this.readReplicaSourceDBInstanceIdentifier = readReplicaSourceDBInstanceIdentifier;
  }

  public DeleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance secondaryAvailabilityZone(String secondaryAvailabilityZone) {
    this.secondaryAvailabilityZone = secondaryAvailabilityZone;
    return this;
  }

   /**
   * Get secondaryAvailabilityZone
   * @return secondaryAvailabilityZone
  **/
  @ApiModelProperty(value = "")
  public String getSecondaryAvailabilityZone() {
    return secondaryAvailabilityZone;
  }

  public void setSecondaryAvailabilityZone(String secondaryAvailabilityZone) {
    this.secondaryAvailabilityZone = secondaryAvailabilityZone;
  }

  public DeleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance statusInfos(List<CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceStatusInfos> statusInfos) {
    this.statusInfos = statusInfos;
    return this;
  }

  public DeleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance addStatusInfosItem(CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceStatusInfos statusInfosItem) {
    if (this.statusInfos == null) {
      this.statusInfos = new ArrayList<>();
    }
    this.statusInfos.add(statusInfosItem);
    return this;
  }

   /**
   * The status of a read replica. If the instance is not a read replica, this is blank
   * @return statusInfos
  **/
  @ApiModelProperty(value = "The status of a read replica. If the instance is not a read replica, this is blank")
  public List<CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceStatusInfos> getStatusInfos() {
    return statusInfos;
  }

  public void setStatusInfos(List<CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceStatusInfos> statusInfos) {
    this.statusInfos = statusInfos;
  }

  public DeleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance storageEncrypted(Boolean storageEncrypted) {
    this.storageEncrypted = storageEncrypted;
    return this;
  }

   /**
   * Specifies whether the DB instance is encrypted
   * @return storageEncrypted
  **/
  @ApiModelProperty(example = "false", value = "Specifies whether the DB instance is encrypted")
  public Boolean isStorageEncrypted() {
    return storageEncrypted;
  }

  public void setStorageEncrypted(Boolean storageEncrypted) {
    this.storageEncrypted = storageEncrypted;
  }

  public DeleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance storageType(String storageType) {
    this.storageType = storageType;
    return this;
  }

   /**
   * Specifies the storage type associated with DB instance
   * @return storageType
  **/
  @ApiModelProperty(example = "", value = "Specifies the storage type associated with DB instance")
  public String getStorageType() {
    return storageType;
  }

  public void setStorageType(String storageType) {
    this.storageType = storageType;
  }

  public DeleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance tagList(List<CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceTagList> tagList) {
    this.tagList = tagList;
    return this;
  }

  public DeleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance addTagListItem(CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceTagList tagListItem) {
    if (this.tagList == null) {
      this.tagList = new ArrayList<>();
    }
    this.tagList.add(tagListItem);
    return this;
  }

   /**
   * A list of tags
   * @return tagList
  **/
  @ApiModelProperty(value = "A list of tags")
  public List<CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceTagList> getTagList() {
    return tagList;
  }

  public void setTagList(List<CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceTagList> tagList) {
    this.tagList = tagList;
  }

  public DeleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance timezone(String timezone) {
    this.timezone = timezone;
    return this;
  }

   /**
   * The time zone of the DB instance
   * @return timezone
  **/
  @ApiModelProperty(example = "Europe/Rome", value = "The time zone of the DB instance")
  public String getTimezone() {
    return timezone;
  }

  public void setTimezone(String timezone) {
    this.timezone = timezone;
  }

  public DeleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance vpcSecurityGroups(List<CreateDBInstanceResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceVpcSecurityGroups> vpcSecurityGroups) {
    this.vpcSecurityGroups = vpcSecurityGroups;
    return this;
  }

  public DeleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance addVpcSecurityGroupsItem(CreateDBInstanceResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceVpcSecurityGroups vpcSecurityGroupsItem) {
    if (this.vpcSecurityGroups == null) {
      this.vpcSecurityGroups = new ArrayList<>();
    }
    this.vpcSecurityGroups.add(vpcSecurityGroupsItem);
    return this;
  }

   /**
   * Get vpcSecurityGroups
   * @return vpcSecurityGroups
  **/
  @ApiModelProperty(value = "")
  public List<CreateDBInstanceResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceVpcSecurityGroups> getVpcSecurityGroups() {
    return vpcSecurityGroups;
  }

  public void setVpcSecurityGroups(List<CreateDBInstanceResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceVpcSecurityGroups> vpcSecurityGroups) {
    this.vpcSecurityGroups = vpcSecurityGroups;
  }

  public DeleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance nvlOwnerAlias(String nvlOwnerAlias) {
    this.nvlOwnerAlias = nvlOwnerAlias;
    return this;
  }

   /**
   * name of the account that owns the instance
   * @return nvlOwnerAlias
  **/
  @ApiModelProperty(example = "", value = "name of the account that owns the instance")
  public String getNvlOwnerAlias() {
    return nvlOwnerAlias;
  }

  public void setNvlOwnerAlias(String nvlOwnerAlias) {
    this.nvlOwnerAlias = nvlOwnerAlias;
  }

  public DeleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance nvlOwnerId(String nvlOwnerId) {
    this.nvlOwnerId = nvlOwnerId;
    return this;
  }

   /**
   * ID of the account that owns the instance
   * @return nvlOwnerId
  **/
  @ApiModelProperty(example = "", value = "ID of the account that owns the instance")
  public String getNvlOwnerId() {
    return nvlOwnerId;
  }

  public void setNvlOwnerId(String nvlOwnerId) {
    this.nvlOwnerId = nvlOwnerId;
  }

  public DeleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance nvlStateReason(List<CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceNvlstateReason> nvlStateReason) {
    this.nvlStateReason = nvlStateReason;
    return this;
  }

  public DeleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance addNvlStateReasonItem(CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceNvlstateReason nvlStateReasonItem) {
    if (this.nvlStateReason == null) {
      this.nvlStateReason = new ArrayList<>();
    }
    this.nvlStateReason.add(nvlStateReasonItem);
    return this;
  }

   /**
   * Get nvlStateReason
   * @return nvlStateReason
  **/
  @ApiModelProperty(value = "")
  public List<CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceNvlstateReason> getNvlStateReason() {
    return nvlStateReason;
  }

  public void setNvlStateReason(List<CreateDBInstanceV2ResponseSchemaCreateDBInstanceResponseCreateDBInstanceResultDBInstanceNvlstateReason> nvlStateReason) {
    this.nvlStateReason = nvlStateReason;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance deleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance = (DeleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance) o;
    return Objects.equals(this.allocatedStorage, deleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance.allocatedStorage) &&
        Objects.equals(this.availabilityZone, deleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance.availabilityZone) &&
        Objects.equals(this.characterSetName, deleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance.characterSetName) &&
        Objects.equals(this.dbInstanceClass, deleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance.dbInstanceClass) &&
        Objects.equals(this.dbInstanceIdentifier, deleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance.dbInstanceIdentifier) &&
        Objects.equals(this.dbInstanceStatus, deleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance.dbInstanceStatus) &&
        Objects.equals(this.dbName, deleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance.dbName) &&
        Objects.equals(this.dbSubnetGroup, deleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance.dbSubnetGroup) &&
        Objects.equals(this.dbInstancePort, deleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance.dbInstancePort) &&
        Objects.equals(this.dbiResourceId, deleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance.dbiResourceId) &&
        Objects.equals(this.endpoint, deleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance.endpoint) &&
        Objects.equals(this.engine, deleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance.engine) &&
        Objects.equals(this.engineVersion, deleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance.engineVersion) &&
        Objects.equals(this.instanceCreateTime, deleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance.instanceCreateTime) &&
        Objects.equals(this.licenseModel, deleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance.licenseModel) &&
        Objects.equals(this.masterUsername, deleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance.masterUsername) &&
        Objects.equals(this.multiAZ, deleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance.multiAZ) &&
        Objects.equals(this.preferredBackupWindow, deleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance.preferredBackupWindow) &&
        Objects.equals(this.preferredMaintenanceWindow, deleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance.preferredMaintenanceWindow) &&
        Objects.equals(this.readReplicaDBClusterIdentifiers, deleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance.readReplicaDBClusterIdentifiers) &&
        Objects.equals(this.readReplicaDBInstanceIdentifiers, deleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance.readReplicaDBInstanceIdentifiers) &&
        Objects.equals(this.readReplicaSourceDBInstanceIdentifier, deleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance.readReplicaSourceDBInstanceIdentifier) &&
        Objects.equals(this.secondaryAvailabilityZone, deleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance.secondaryAvailabilityZone) &&
        Objects.equals(this.statusInfos, deleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance.statusInfos) &&
        Objects.equals(this.storageEncrypted, deleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance.storageEncrypted) &&
        Objects.equals(this.storageType, deleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance.storageType) &&
        Objects.equals(this.tagList, deleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance.tagList) &&
        Objects.equals(this.timezone, deleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance.timezone) &&
        Objects.equals(this.vpcSecurityGroups, deleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance.vpcSecurityGroups) &&
        Objects.equals(this.nvlOwnerAlias, deleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance.nvlOwnerAlias) &&
        Objects.equals(this.nvlOwnerId, deleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance.nvlOwnerId) &&
        Objects.equals(this.nvlStateReason, deleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance.nvlStateReason);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allocatedStorage, availabilityZone, characterSetName, dbInstanceClass, dbInstanceIdentifier, dbInstanceStatus, dbName, dbSubnetGroup, dbInstancePort, dbiResourceId, endpoint, engine, engineVersion, instanceCreateTime, licenseModel, masterUsername, multiAZ, preferredBackupWindow, preferredMaintenanceWindow, readReplicaDBClusterIdentifiers, readReplicaDBInstanceIdentifiers, readReplicaSourceDBInstanceIdentifier, secondaryAvailabilityZone, statusInfos, storageEncrypted, storageType, tagList, timezone, vpcSecurityGroups, nvlOwnerAlias, nvlOwnerId, nvlStateReason);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeleteDBInstancesApiV2ResponseSchemaDeleteDBInstanceResponseDeleteDBInstanceResultDBInstance {\n");
    
    sb.append("    allocatedStorage: ").append(toIndentedString(allocatedStorage)).append("\n");
    sb.append("    availabilityZone: ").append(toIndentedString(availabilityZone)).append("\n");
    sb.append("    characterSetName: ").append(toIndentedString(characterSetName)).append("\n");
    sb.append("    dbInstanceClass: ").append(toIndentedString(dbInstanceClass)).append("\n");
    sb.append("    dbInstanceIdentifier: ").append(toIndentedString(dbInstanceIdentifier)).append("\n");
    sb.append("    dbInstanceStatus: ").append(toIndentedString(dbInstanceStatus)).append("\n");
    sb.append("    dbName: ").append(toIndentedString(dbName)).append("\n");
    sb.append("    dbSubnetGroup: ").append(toIndentedString(dbSubnetGroup)).append("\n");
    sb.append("    dbInstancePort: ").append(toIndentedString(dbInstancePort)).append("\n");
    sb.append("    dbiResourceId: ").append(toIndentedString(dbiResourceId)).append("\n");
    sb.append("    endpoint: ").append(toIndentedString(endpoint)).append("\n");
    sb.append("    engine: ").append(toIndentedString(engine)).append("\n");
    sb.append("    engineVersion: ").append(toIndentedString(engineVersion)).append("\n");
    sb.append("    instanceCreateTime: ").append(toIndentedString(instanceCreateTime)).append("\n");
    sb.append("    licenseModel: ").append(toIndentedString(licenseModel)).append("\n");
    sb.append("    masterUsername: ").append(toIndentedString(masterUsername)).append("\n");
    sb.append("    multiAZ: ").append(toIndentedString(multiAZ)).append("\n");
    sb.append("    preferredBackupWindow: ").append(toIndentedString(preferredBackupWindow)).append("\n");
    sb.append("    preferredMaintenanceWindow: ").append(toIndentedString(preferredMaintenanceWindow)).append("\n");
    sb.append("    readReplicaDBClusterIdentifiers: ").append(toIndentedString(readReplicaDBClusterIdentifiers)).append("\n");
    sb.append("    readReplicaDBInstanceIdentifiers: ").append(toIndentedString(readReplicaDBInstanceIdentifiers)).append("\n");
    sb.append("    readReplicaSourceDBInstanceIdentifier: ").append(toIndentedString(readReplicaSourceDBInstanceIdentifier)).append("\n");
    sb.append("    secondaryAvailabilityZone: ").append(toIndentedString(secondaryAvailabilityZone)).append("\n");
    sb.append("    statusInfos: ").append(toIndentedString(statusInfos)).append("\n");
    sb.append("    storageEncrypted: ").append(toIndentedString(storageEncrypted)).append("\n");
    sb.append("    storageType: ").append(toIndentedString(storageType)).append("\n");
    sb.append("    tagList: ").append(toIndentedString(tagList)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    vpcSecurityGroups: ").append(toIndentedString(vpcSecurityGroups)).append("\n");
    sb.append("    nvlOwnerAlias: ").append(toIndentedString(nvlOwnerAlias)).append("\n");
    sb.append("    nvlOwnerId: ").append(toIndentedString(nvlOwnerId)).append("\n");
    sb.append("    nvlStateReason: ").append(toIndentedString(nvlStateReason)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

