/*-
 * ========================LICENSE_START=================================
 * Api CMP
 * %%
 * Copyright (C) 2022 Regione Piemonte
 * %%
 * SPDX-FileCopyrightText: Copyright 2022 | Regione Piemonte
 * SPDX-License-Identifier: EUPL-1.2
 * =========================LICENSE_END==================================
 */
/*
 * Beehive API
 * Beehive API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: nivola.engineering@csi.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.csi.nivola.nivolasp.integration.rest.model.service;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.annotations.ApiModelProperty;

/**
 * DescribeLoggingInstanceLogConfigApiV2ResponseSchemaDescribeLoggingInstanceLogConfigResponse
 */

public class DescribeLoggingInstanceLogConfigApiV2ResponseSchemaDescribeLoggingInstanceLogConfigResponse {
  @JsonProperty("$xmlns")
  private String xmlns = null;

  @JsonProperty("logConfigSet")
  private List<DescribeLoggingInstanceLogConfigApiV2ResponseSchemaDescribeLoggingInstanceLogConfigResponseLogConfigSet> logConfigSet = null;

  @JsonProperty("logConfigTotal")
  private Integer logConfigTotal = null;

  @JsonProperty("requestId")
  private String requestId = null;

  public DescribeLoggingInstanceLogConfigApiV2ResponseSchemaDescribeLoggingInstanceLogConfigResponse xmlns(String xmlns) {
    this.xmlns = xmlns;
    return this;
  }

   /**
   * Get xmlns
   * @return xmlns
  **/
  @ApiModelProperty(value = "")
  public String getXmlns() {
    return xmlns;
  }

  public void setXmlns(String xmlns) {
    this.xmlns = xmlns;
  }

  public DescribeLoggingInstanceLogConfigApiV2ResponseSchemaDescribeLoggingInstanceLogConfigResponse logConfigSet(List<DescribeLoggingInstanceLogConfigApiV2ResponseSchemaDescribeLoggingInstanceLogConfigResponseLogConfigSet> logConfigSet) {
    this.logConfigSet = logConfigSet;
    return this;
  }

  public DescribeLoggingInstanceLogConfigApiV2ResponseSchemaDescribeLoggingInstanceLogConfigResponse addLogConfigSetItem(DescribeLoggingInstanceLogConfigApiV2ResponseSchemaDescribeLoggingInstanceLogConfigResponseLogConfigSet logConfigSetItem) {
    if (this.logConfigSet == null) {
      this.logConfigSet = new ArrayList<>();
    }
    this.logConfigSet.add(logConfigSetItem);
    return this;
  }

   /**
   * Get logConfigSet
   * @return logConfigSet
  **/
  @ApiModelProperty(value = "")
  public List<DescribeLoggingInstanceLogConfigApiV2ResponseSchemaDescribeLoggingInstanceLogConfigResponseLogConfigSet> getLogConfigSet() {
    return logConfigSet;
  }

  public void setLogConfigSet(List<DescribeLoggingInstanceLogConfigApiV2ResponseSchemaDescribeLoggingInstanceLogConfigResponseLogConfigSet> logConfigSet) {
    this.logConfigSet = logConfigSet;
  }

  public DescribeLoggingInstanceLogConfigApiV2ResponseSchemaDescribeLoggingInstanceLogConfigResponse logConfigTotal(Integer logConfigTotal) {
    this.logConfigTotal = logConfigTotal;
    return this;
  }

   /**
   * Total number of configuration available
   * @return logConfigTotal
  **/
  @ApiModelProperty(example = "10", required = true, value = "Total number of configuration available")
  public Integer getLogConfigTotal() {
    return logConfigTotal;
  }

  public void setLogConfigTotal(Integer logConfigTotal) {
    this.logConfigTotal = logConfigTotal;
  }

  public DescribeLoggingInstanceLogConfigApiV2ResponseSchemaDescribeLoggingInstanceLogConfigResponse requestId(String requestId) {
    this.requestId = requestId;
    return this;
  }

   /**
   * api request id
   * @return requestId
  **/
  @ApiModelProperty(required = true, value = "api request id")
  public String getRequestId() {
    return requestId;
  }

  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeLoggingInstanceLogConfigApiV2ResponseSchemaDescribeLoggingInstanceLogConfigResponse describeLoggingInstanceLogConfigApiV2ResponseSchemaDescribeLoggingInstanceLogConfigResponse = (DescribeLoggingInstanceLogConfigApiV2ResponseSchemaDescribeLoggingInstanceLogConfigResponse) o;
    return Objects.equals(this.xmlns, describeLoggingInstanceLogConfigApiV2ResponseSchemaDescribeLoggingInstanceLogConfigResponse.xmlns) &&
        Objects.equals(this.logConfigSet, describeLoggingInstanceLogConfigApiV2ResponseSchemaDescribeLoggingInstanceLogConfigResponse.logConfigSet) &&
        Objects.equals(this.logConfigTotal, describeLoggingInstanceLogConfigApiV2ResponseSchemaDescribeLoggingInstanceLogConfigResponse.logConfigTotal) &&
        Objects.equals(this.requestId, describeLoggingInstanceLogConfigApiV2ResponseSchemaDescribeLoggingInstanceLogConfigResponse.requestId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(xmlns, logConfigSet, logConfigTotal, requestId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeLoggingInstanceLogConfigApiV2ResponseSchemaDescribeLoggingInstanceLogConfigResponse {\n");
    
    sb.append("    xmlns: ").append(toIndentedString(xmlns)).append("\n");
    sb.append("    logConfigSet: ").append(toIndentedString(logConfigSet)).append("\n");
    sb.append("    logConfigTotal: ").append(toIndentedString(logConfigTotal)).append("\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

