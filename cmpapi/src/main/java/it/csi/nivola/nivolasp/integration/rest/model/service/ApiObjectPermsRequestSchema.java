/*-
 * ========================LICENSE_START=================================
 * Api CMP
 * %%
 * Copyright (C) 2022 CSI Piemonte
 * %%
 * SPDX-FileCopyrightText: Copyright 2022 | CSI Piemonte
 * SPDX-License-Identifier: EUPL-1.2
 * =========================LICENSE_END==================================
 */
/*
 * Beehive API
 * Beehive API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: nivola.engineering@csi.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.csi.nivola.nivolasp.integration.rest.model.service;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;

import io.swagger.annotations.ApiModelProperty;

/**
 * ApiObjectPermsRequestSchema
 */

public class ApiObjectPermsRequestSchema {
  /**
   * entities list order field. Ex. id, uuid, name
   */
  public enum FieldEnum {
    ID("id"),
    
    UUID("uuid"),
    
    OBJID("objid"),
    
    NAME("name");

    private String value;

    FieldEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static FieldEnum fromValue(String value) {
      for (FieldEnum b : FieldEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("field")
  private FieldEnum field = FieldEnum.ID;

  @JsonProperty("oid")
  private String oid = null;

  /**
   * entities list order: ASC or DESC
   */
  public enum OrderEnum {
    ASC("ASC"),
    
    ASC_2("asc"),
    
    DESC("DESC"),
    
    DESC_2("desc");

    private String value;

    OrderEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static OrderEnum fromValue(String value) {
      for (OrderEnum b : OrderEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("order")
  private OrderEnum order = OrderEnum.DESC;

  @JsonProperty("page")
  private Integer page = null;

  @JsonProperty("size")
  private Integer size = null;

  public ApiObjectPermsRequestSchema field(FieldEnum field) {
    this.field = field;
    return this;
  }

   /**
   * entities list order field. Ex. id, uuid, name
   * @return field
  **/
  @ApiModelProperty(example = "id", value = "entities list order field. Ex. id, uuid, name")
  public FieldEnum getField() {
    return field;
  }

  public void setField(FieldEnum field) {
    this.field = field;
  }

  public ApiObjectPermsRequestSchema oid(String oid) {
    this.oid = oid;
    return this;
  }

   /**
   * id, uuid or name
   * @return oid
  **/
  @ApiModelProperty(required = true, value = "id, uuid or name")
  public String getOid() {
    return oid;
  }

  public void setOid(String oid) {
    this.oid = oid;
  }

  public ApiObjectPermsRequestSchema order(OrderEnum order) {
    this.order = order;
    return this;
  }

   /**
   * entities list order: ASC or DESC
   * @return order
  **/
  @ApiModelProperty(example = "DESC", value = "entities list order: ASC or DESC")
  public OrderEnum getOrder() {
    return order;
  }

  public void setOrder(OrderEnum order) {
    this.order = order;
  }

  public ApiObjectPermsRequestSchema page(Integer page) {
    this.page = page;
    return this;
  }

   /**
   * entities list page selected
   * minimum: 0
   * maximum: 10000
   * @return page
  **/
  @ApiModelProperty(example = "0", value = "entities list page selected")
  public Integer getPage() {
    return page;
  }

  public void setPage(Integer page) {
    this.page = page;
  }

  public ApiObjectPermsRequestSchema size(Integer size) {
    this.size = size;
    return this;
  }

   /**
   * entities list page size. -1 to get all the records
   * minimum: -1
   * maximum: 100
   * @return size
  **/
  @ApiModelProperty(example = "20", value = "entities list page size. -1 to get all the records")
  public Integer getSize() {
    return size;
  }

  public void setSize(Integer size) {
    this.size = size;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiObjectPermsRequestSchema apiObjectPermsRequestSchema = (ApiObjectPermsRequestSchema) o;
    return Objects.equals(this.field, apiObjectPermsRequestSchema.field) &&
        Objects.equals(this.oid, apiObjectPermsRequestSchema.oid) &&
        Objects.equals(this.order, apiObjectPermsRequestSchema.order) &&
        Objects.equals(this.page, apiObjectPermsRequestSchema.page) &&
        Objects.equals(this.size, apiObjectPermsRequestSchema.size);
  }

  @Override
  public int hashCode() {
    return Objects.hash(field, oid, order, page, size);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiObjectPermsRequestSchema {\n");
    
    sb.append("    field: ").append(toIndentedString(field)).append("\n");
    sb.append("    oid: ").append(toIndentedString(oid)).append("\n");
    sb.append("    order: ").append(toIndentedString(order)).append("\n");
    sb.append("    page: ").append(toIndentedString(page)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

