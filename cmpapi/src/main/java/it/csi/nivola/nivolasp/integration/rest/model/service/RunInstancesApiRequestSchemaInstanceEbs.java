/*-
 * ========================LICENSE_START=================================
 * Api CMP
 * %%
 * Copyright (C) 2022 CSI Piemonte
 * %%
 * SPDX-FileCopyrightText: Copyright 2022 | CSI Piemonte
 * SPDX-License-Identifier: EUPL-1.2
 * =========================LICENSE_END==================================
 */
/*
 * Beehive API
 * Beehive API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: nivola.engineering@csi.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.csi.nivola.nivolasp.integration.rest.model.service;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Parameters used to automatically set up EBS volumes when the instance is launched.
 */
@ApiModel(description = "Parameters used to automatically set up EBS volumes when the instance is launched.")

public class RunInstancesApiRequestSchemaInstanceEbs {
  @JsonProperty("DeleteOnTermination")
  private Boolean deleteOnTermination = true;

  @JsonProperty("Encrypted")
  private Boolean encrypted = false;

  @JsonProperty("Iops")
  private Integer iops = null;

  @JsonProperty("KmsKeyId")
  private String kmsKeyId = null;

  @JsonProperty("Nvl_VolumeId")
  private String nvlVolumeId = null;

  @JsonProperty("SnapshotId")
  private String snapshotId = null;

  @JsonProperty("VolumeSize")
  private Integer volumeSize = null;

  @JsonProperty("VolumeType")
  private String volumeType = null;

  public RunInstancesApiRequestSchemaInstanceEbs deleteOnTermination(Boolean deleteOnTermination) {
    this.deleteOnTermination = deleteOnTermination;
    return this;
  }

   /**
   * Indicates whether the EBS volume is deleted on instance termination.
   * @return deleteOnTermination
  **/
  @ApiModelProperty(example = "true", value = "Indicates whether the EBS volume is deleted on instance termination.")
  public Boolean isDeleteOnTermination() {
    return deleteOnTermination;
  }

  public void setDeleteOnTermination(Boolean deleteOnTermination) {
    this.deleteOnTermination = deleteOnTermination;
  }

  public RunInstancesApiRequestSchemaInstanceEbs encrypted(Boolean encrypted) {
    this.encrypted = encrypted;
    return this;
  }

   /**
   * Indicates whether the EBS volume is encrypted
   * @return encrypted
  **/
  @ApiModelProperty(example = "false", value = "Indicates whether the EBS volume is encrypted")
  public Boolean isEncrypted() {
    return encrypted;
  }

  public void setEncrypted(Boolean encrypted) {
    this.encrypted = encrypted;
  }

  public RunInstancesApiRequestSchemaInstanceEbs iops(Integer iops) {
    this.iops = iops;
    return this;
  }

   /**
   * The number of I/O operations per second (IOPS) that the volume supports.
   * @return iops
  **/
  @ApiModelProperty(example = "10", value = "The number of I/O operations per second (IOPS) that the volume supports.")
  public Integer getIops() {
    return iops;
  }

  public void setIops(Integer iops) {
    this.iops = iops;
  }

  public RunInstancesApiRequestSchemaInstanceEbs kmsKeyId(String kmsKeyId) {
    this.kmsKeyId = kmsKeyId;
    return this;
  }

   /**
   * Identifier (key ID, key alias, ID ARN, or alias ARN) for a user-managed CMK under which the EBS volume is encrypted. 
   * @return kmsKeyId
  **/
  @ApiModelProperty(example = "", value = "Identifier (key ID, key alias, ID ARN, or alias ARN) for a user-managed CMK under which the EBS volume is encrypted. ")
  public String getKmsKeyId() {
    return kmsKeyId;
  }

  public void setKmsKeyId(String kmsKeyId) {
    this.kmsKeyId = kmsKeyId;
  }

  public RunInstancesApiRequestSchemaInstanceEbs nvlVolumeId(String nvlVolumeId) {
    this.nvlVolumeId = nvlVolumeId;
    return this;
  }

   /**
   * The ID of the volume to clone
   * @return nvlVolumeId
  **/
  @ApiModelProperty(example = "", value = "The ID of the volume to clone")
  public String getNvlVolumeId() {
    return nvlVolumeId;
  }

  public void setNvlVolumeId(String nvlVolumeId) {
    this.nvlVolumeId = nvlVolumeId;
  }

  public RunInstancesApiRequestSchemaInstanceEbs snapshotId(String snapshotId) {
    this.snapshotId = snapshotId;
    return this;
  }

   /**
   * The ID of the snapshot.
   * @return snapshotId
  **/
  @ApiModelProperty(example = "", value = "The ID of the snapshot.")
  public String getSnapshotId() {
    return snapshotId;
  }

  public void setSnapshotId(String snapshotId) {
    this.snapshotId = snapshotId;
  }

  public RunInstancesApiRequestSchemaInstanceEbs volumeSize(Integer volumeSize) {
    this.volumeSize = volumeSize;
    return this;
  }

   /**
   * The size of the volume, in GiB.
   * @return volumeSize
  **/
  @ApiModelProperty(example = "10", value = "The size of the volume, in GiB.")
  public Integer getVolumeSize() {
    return volumeSize;
  }

  public void setVolumeSize(Integer volumeSize) {
    this.volumeSize = volumeSize;
  }

  public RunInstancesApiRequestSchemaInstanceEbs volumeType(String volumeType) {
    this.volumeType = volumeType;
    return this;
  }

   /**
   * The volume type: default, oracle.
   * @return volumeType
  **/
  @ApiModelProperty(example = "default", value = "The volume type: default, oracle.")
  public String getVolumeType() {
    return volumeType;
  }

  public void setVolumeType(String volumeType) {
    this.volumeType = volumeType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RunInstancesApiRequestSchemaInstanceEbs runInstancesApiRequestSchemaInstanceEbs = (RunInstancesApiRequestSchemaInstanceEbs) o;
    return Objects.equals(this.deleteOnTermination, runInstancesApiRequestSchemaInstanceEbs.deleteOnTermination) &&
        Objects.equals(this.encrypted, runInstancesApiRequestSchemaInstanceEbs.encrypted) &&
        Objects.equals(this.iops, runInstancesApiRequestSchemaInstanceEbs.iops) &&
        Objects.equals(this.kmsKeyId, runInstancesApiRequestSchemaInstanceEbs.kmsKeyId) &&
        Objects.equals(this.nvlVolumeId, runInstancesApiRequestSchemaInstanceEbs.nvlVolumeId) &&
        Objects.equals(this.snapshotId, runInstancesApiRequestSchemaInstanceEbs.snapshotId) &&
        Objects.equals(this.volumeSize, runInstancesApiRequestSchemaInstanceEbs.volumeSize) &&
        Objects.equals(this.volumeType, runInstancesApiRequestSchemaInstanceEbs.volumeType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deleteOnTermination, encrypted, iops, kmsKeyId, nvlVolumeId, snapshotId, volumeSize, volumeType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RunInstancesApiRequestSchemaInstanceEbs {\n");
    
    sb.append("    deleteOnTermination: ").append(toIndentedString(deleteOnTermination)).append("\n");
    sb.append("    encrypted: ").append(toIndentedString(encrypted)).append("\n");
    sb.append("    iops: ").append(toIndentedString(iops)).append("\n");
    sb.append("    kmsKeyId: ").append(toIndentedString(kmsKeyId)).append("\n");
    sb.append("    nvlVolumeId: ").append(toIndentedString(nvlVolumeId)).append("\n");
    sb.append("    snapshotId: ").append(toIndentedString(snapshotId)).append("\n");
    sb.append("    volumeSize: ").append(toIndentedString(volumeSize)).append("\n");
    sb.append("    volumeType: ").append(toIndentedString(volumeType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

