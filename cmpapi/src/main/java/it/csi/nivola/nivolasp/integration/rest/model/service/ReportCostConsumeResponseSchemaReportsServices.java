/*-
 * ========================LICENSE_START=================================
 * Api CMP
 * %%
 * Copyright (C) 2022 CSI Piemonte
 * %%
 * SPDX-FileCopyrightText: Copyright 2022 | CSI Piemonte
 * SPDX-License-Identifier: EUPL-1.2
 * =========================LICENSE_END==================================
 */
/*
 * Beehive API
 * API description in Markdown.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: me@csi.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.csi.nivola.nivolasp.integration.rest.model.service;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.annotations.ApiModelProperty;

/**
 * ReportCostConsumeResponseSchemaReportsServices
 */

public class ReportCostConsumeResponseSchemaReportsServices {
  @JsonProperty("details")
  private List<ReportCostConsumeResponseSchemaReportsDetails> details = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("plugin_name")
  private String pluginName = null;

  @JsonProperty("summary_consume")
  private List<ReportCostConsumeResponseSchemaReportsMetrics> summaryConsume = null;

  @JsonProperty("total")
  private Float total = null;

  public ReportCostConsumeResponseSchemaReportsServices details(List<ReportCostConsumeResponseSchemaReportsDetails> details) {
    this.details = details;
    return this;
  }

  public ReportCostConsumeResponseSchemaReportsServices addDetailsItem(ReportCostConsumeResponseSchemaReportsDetails detailsItem) {
    if (this.details == null) {
      this.details = new ArrayList<>();
    }
    this.details.add(detailsItem);
    return this;
  }

   /**
   * Get details
   * @return details
  **/
  @ApiModelProperty(value = "")
  public List<ReportCostConsumeResponseSchemaReportsDetails> getDetails() {
    return details;
  }

  public void setDetails(List<ReportCostConsumeResponseSchemaReportsDetails> details) {
    this.details = details;
  }

  public ReportCostConsumeResponseSchemaReportsServices name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ReportCostConsumeResponseSchemaReportsServices pluginName(String pluginName) {
    this.pluginName = pluginName;
    return this;
  }

   /**
   * Get pluginName
   * @return pluginName
  **/
  @ApiModelProperty(value = "")
  public String getPluginName() {
    return pluginName;
  }

  public void setPluginName(String pluginName) {
    this.pluginName = pluginName;
  }

  public ReportCostConsumeResponseSchemaReportsServices summaryConsume(List<ReportCostConsumeResponseSchemaReportsMetrics> summaryConsume) {
    this.summaryConsume = summaryConsume;
    return this;
  }

  public ReportCostConsumeResponseSchemaReportsServices addSummaryConsumeItem(ReportCostConsumeResponseSchemaReportsMetrics summaryConsumeItem) {
    if (this.summaryConsume == null) {
      this.summaryConsume = new ArrayList<>();
    }
    this.summaryConsume.add(summaryConsumeItem);
    return this;
  }

   /**
   * Get summaryConsume
   * @return summaryConsume
  **/
  @ApiModelProperty(value = "")
  public List<ReportCostConsumeResponseSchemaReportsMetrics> getSummaryConsume() {
    return summaryConsume;
  }

  public void setSummaryConsume(List<ReportCostConsumeResponseSchemaReportsMetrics> summaryConsume) {
    this.summaryConsume = summaryConsume;
  }

  public ReportCostConsumeResponseSchemaReportsServices total(Float total) {
    this.total = total;
    return this;
  }

   /**
   * Get total
   * @return total
  **/
  @ApiModelProperty(required = true, value = "")
  public Float getTotal() {
    return total;
  }

  public void setTotal(Float total) {
    this.total = total;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReportCostConsumeResponseSchemaReportsServices reportCostConsumeResponseSchemaReportsServices = (ReportCostConsumeResponseSchemaReportsServices) o;
    return Objects.equals(this.details, reportCostConsumeResponseSchemaReportsServices.details) &&
        Objects.equals(this.name, reportCostConsumeResponseSchemaReportsServices.name) &&
        Objects.equals(this.pluginName, reportCostConsumeResponseSchemaReportsServices.pluginName) &&
        Objects.equals(this.summaryConsume, reportCostConsumeResponseSchemaReportsServices.summaryConsume) &&
        Objects.equals(this.total, reportCostConsumeResponseSchemaReportsServices.total);
  }

  @Override
  public int hashCode() {
    return Objects.hash(details, name, pluginName, summaryConsume, total);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReportCostConsumeResponseSchemaReportsServices {\n");
    
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    pluginName: ").append(toIndentedString(pluginName)).append("\n");
    sb.append("    summaryConsume: ").append(toIndentedString(summaryConsume)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

