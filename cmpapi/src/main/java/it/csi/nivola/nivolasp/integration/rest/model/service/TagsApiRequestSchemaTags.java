/*-
 * ========================LICENSE_START=================================
 * Api CMP
 * %%
 * Copyright (C) 2022 CSI Piemonte
 * %%
 * SPDX-FileCopyrightText: Copyright 2022 | CSI Piemonte
 * SPDX-License-Identifier: EUPL-1.2
 * =========================LICENSE_END==================================
 */
/*
 * Beehive API
 * Beehive API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: nivola.engineering@csi.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.csi.nivola.nivolasp.integration.rest.model.service;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.annotations.ApiModelProperty;

/**
 * TagsApiRequestSchemaTags
 */

public class TagsApiRequestSchemaTags {
  @JsonProperty("ResourceId.N")
  private List<String> resourceIdN = new ArrayList<>();

  @JsonProperty("Tag.N")
  private List<DeleteTagsApiRequestSchemaTagsTagN> tagN = new ArrayList<>();

  @JsonProperty("owner-id")
  private String ownerId = null;

  public TagsApiRequestSchemaTags resourceIdN(List<String> resourceIdN) {
    this.resourceIdN = resourceIdN;
    return this;
  }

  public TagsApiRequestSchemaTags addResourceIdNItem(String resourceIdNItem) {
    this.resourceIdN.add(resourceIdNItem);
    return this;
  }

   /**
   * list of resource id
   * @return resourceIdN
  **/
  @ApiModelProperty(required = true, value = "list of resource id")
  public List<String> getResourceIdN() {
    return resourceIdN;
  }

  public void setResourceIdN(List<String> resourceIdN) {
    this.resourceIdN = resourceIdN;
  }

  public TagsApiRequestSchemaTags tagN(List<DeleteTagsApiRequestSchemaTagsTagN> tagN) {
    this.tagN = tagN;
    return this;
  }

  public TagsApiRequestSchemaTags addTagNItem(DeleteTagsApiRequestSchemaTagsTagN tagNItem) {
    this.tagN.add(tagNItem);
    return this;
  }

   /**
   * list of tags
   * @return tagN
  **/
  @ApiModelProperty(required = true, value = "list of tags")
  public List<DeleteTagsApiRequestSchemaTagsTagN> getTagN() {
    return tagN;
  }

  public void setTagN(List<DeleteTagsApiRequestSchemaTagsTagN> tagN) {
    this.tagN = tagN;
  }

  public TagsApiRequestSchemaTags ownerId(String ownerId) {
    this.ownerId = ownerId;
    return this;
  }

   /**
   * account ID of compute service
   * @return ownerId
  **/
  @ApiModelProperty(required = true, value = "account ID of compute service")
  public String getOwnerId() {
    return ownerId;
  }

  public void setOwnerId(String ownerId) {
    this.ownerId = ownerId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TagsApiRequestSchemaTags tagsApiRequestSchemaTags = (TagsApiRequestSchemaTags) o;
    return Objects.equals(this.resourceIdN, tagsApiRequestSchemaTags.resourceIdN) &&
        Objects.equals(this.tagN, tagsApiRequestSchemaTags.tagN) &&
        Objects.equals(this.ownerId, tagsApiRequestSchemaTags.ownerId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(resourceIdN, tagN, ownerId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TagsApiRequestSchemaTags {\n");
    
    sb.append("    resourceIdN: ").append(toIndentedString(resourceIdN)).append("\n");
    sb.append("    tagN: ").append(toIndentedString(tagN)).append("\n");
    sb.append("    ownerId: ").append(toIndentedString(ownerId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

