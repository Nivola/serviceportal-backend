/*-
 * ========================LICENSE_START=================================
 * Api CMP
 * %%
 * Copyright (C) 2022 CSI Piemonte
 * %%
 * SPDX-FileCopyrightText: Copyright 2022 | CSI Piemonte
 * SPDX-License-Identifier: EUPL-1.2
 * =========================LICENSE_END==================================
 */
/*
 * Beehive API
 * Beehive API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: nivola.engineering@csi.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.csi.nivola.nivolasp.integration.rest.model.service;

import java.time.LocalDateTime;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;

import io.swagger.annotations.ApiModelProperty;

/**
 * ListConsumeRequestSchema
 */

public class ListConsumeRequestSchema {
  @JsonProperty("account_oid")
  private String accountOid = null;

  @JsonProperty("aggregation_type")
  private String aggregationType = null;

  @JsonProperty("cost_type_id")
  private Integer costTypeId = null;

  @JsonProperty("evaluation_date_end")
  private LocalDateTime evaluationDateEnd = null;

  @JsonProperty("evaluation_date_start")
  private LocalDateTime evaluationDateStart = null;

  /**
   * enitities list order field. Ex. id, platform_name
   */
  public enum FieldEnum {
    ID("id"),
    
    METRIC_TYPE_ID("metric_type_id"),
    
    EVALUATION_DATE("evaluation_date"),
    
    PERIOD("period"),
    
    COST_TYPE_ID("cost_type_id");

    private String value;

    FieldEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static FieldEnum fromValue(String value) {
      for (FieldEnum b : FieldEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("field")
  private FieldEnum field = FieldEnum.ID;

  @JsonProperty("filter_creation_date_start")
  private LocalDateTime filterCreationDateStart = null;

  @JsonProperty("filter_creation_date_stop")
  private LocalDateTime filterCreationDateStop = null;

  @JsonProperty("filter_expired")
  private Boolean filterExpired = false;

  @JsonProperty("filter_expiry_date_start")
  private LocalDateTime filterExpiryDateStart = null;

  @JsonProperty("filter_expiry_date_stop")
  private LocalDateTime filterExpiryDateStop = null;

  @JsonProperty("filter_modification_date_start")
  private LocalDateTime filterModificationDateStart = null;

  @JsonProperty("filter_modification_date_stop")
  private LocalDateTime filterModificationDateStop = null;

  @JsonProperty("id")
  private Integer id = null;

  @JsonProperty("instance_oid")
  private Integer instanceOid = null;

  @JsonProperty("job_id")
  private Integer jobId = null;

  @JsonProperty("metric_type_id")
  private Integer metricTypeId = null;

  /**
   * entities list order: ASC or DESC
   */
  public enum OrderEnum {
    ASC("ASC"),
    
    ASC_2("asc"),
    
    DESC("DESC"),
    
    DESC_2("desc");

    private String value;

    OrderEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static OrderEnum fromValue(String value) {
      for (OrderEnum b : OrderEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("order")
  private OrderEnum order = OrderEnum.DESC;

  @JsonProperty("page")
  private Integer page = null;

  @JsonProperty("period")
  private String period = null;

  @JsonProperty("size")
  private Integer size = null;

  public ListConsumeRequestSchema accountOid(String accountOid) {
    this.accountOid = accountOid;
    return this;
  }

   /**
   * Get accountOid
   * @return accountOid
  **/
  @ApiModelProperty(value = "")
  public String getAccountOid() {
    return accountOid;
  }

  public void setAccountOid(String accountOid) {
    this.accountOid = accountOid;
  }

  public ListConsumeRequestSchema aggregationType(String aggregationType) {
    this.aggregationType = aggregationType;
    return this;
  }

   /**
   * Get aggregationType
   * @return aggregationType
  **/
  @ApiModelProperty(value = "")
  public String getAggregationType() {
    return aggregationType;
  }

  public void setAggregationType(String aggregationType) {
    this.aggregationType = aggregationType;
  }

  public ListConsumeRequestSchema costTypeId(Integer costTypeId) {
    this.costTypeId = costTypeId;
    return this;
  }

   /**
   * Get costTypeId
   * @return costTypeId
  **/
  @ApiModelProperty(value = "")
  public Integer getCostTypeId() {
    return costTypeId;
  }

  public void setCostTypeId(Integer costTypeId) {
    this.costTypeId = costTypeId;
  }

  public ListConsumeRequestSchema evaluationDateEnd(LocalDateTime evaluationDateEnd) {
    this.evaluationDateEnd = evaluationDateEnd;
    return this;
  }

   /**
   * Get evaluationDateEnd
   * @return evaluationDateEnd
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getEvaluationDateEnd() {
    return evaluationDateEnd;
  }

  public void setEvaluationDateEnd(LocalDateTime evaluationDateEnd) {
    this.evaluationDateEnd = evaluationDateEnd;
  }

  public ListConsumeRequestSchema evaluationDateStart(LocalDateTime evaluationDateStart) {
    this.evaluationDateStart = evaluationDateStart;
    return this;
  }

   /**
   * Get evaluationDateStart
   * @return evaluationDateStart
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getEvaluationDateStart() {
    return evaluationDateStart;
  }

  public void setEvaluationDateStart(LocalDateTime evaluationDateStart) {
    this.evaluationDateStart = evaluationDateStart;
  }

  public ListConsumeRequestSchema field(FieldEnum field) {
    this.field = field;
    return this;
  }

   /**
   * enitities list order field. Ex. id, platform_name
   * @return field
  **/
  @ApiModelProperty(example = "id", value = "enitities list order field. Ex. id, platform_name")
  public FieldEnum getField() {
    return field;
  }

  public void setField(FieldEnum field) {
    this.field = field;
  }

  public ListConsumeRequestSchema filterCreationDateStart(LocalDateTime filterCreationDateStart) {
    this.filterCreationDateStart = filterCreationDateStart;
    return this;
  }

   /**
   * Get filterCreationDateStart
   * @return filterCreationDateStart
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getFilterCreationDateStart() {
    return filterCreationDateStart;
  }

  public void setFilterCreationDateStart(LocalDateTime filterCreationDateStart) {
    this.filterCreationDateStart = filterCreationDateStart;
  }

  public ListConsumeRequestSchema filterCreationDateStop(LocalDateTime filterCreationDateStop) {
    this.filterCreationDateStop = filterCreationDateStop;
    return this;
  }

   /**
   * Get filterCreationDateStop
   * @return filterCreationDateStop
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getFilterCreationDateStop() {
    return filterCreationDateStop;
  }

  public void setFilterCreationDateStop(LocalDateTime filterCreationDateStop) {
    this.filterCreationDateStop = filterCreationDateStop;
  }

  public ListConsumeRequestSchema filterExpired(Boolean filterExpired) {
    this.filterExpired = filterExpired;
    return this;
  }

   /**
   * Get filterExpired
   * @return filterExpired
  **/
  @ApiModelProperty(value = "")
  public Boolean isFilterExpired() {
    return filterExpired;
  }

  public void setFilterExpired(Boolean filterExpired) {
    this.filterExpired = filterExpired;
  }

  public ListConsumeRequestSchema filterExpiryDateStart(LocalDateTime filterExpiryDateStart) {
    this.filterExpiryDateStart = filterExpiryDateStart;
    return this;
  }

   /**
   * Get filterExpiryDateStart
   * @return filterExpiryDateStart
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getFilterExpiryDateStart() {
    return filterExpiryDateStart;
  }

  public void setFilterExpiryDateStart(LocalDateTime filterExpiryDateStart) {
    this.filterExpiryDateStart = filterExpiryDateStart;
  }

  public ListConsumeRequestSchema filterExpiryDateStop(LocalDateTime filterExpiryDateStop) {
    this.filterExpiryDateStop = filterExpiryDateStop;
    return this;
  }

   /**
   * Get filterExpiryDateStop
   * @return filterExpiryDateStop
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getFilterExpiryDateStop() {
    return filterExpiryDateStop;
  }

  public void setFilterExpiryDateStop(LocalDateTime filterExpiryDateStop) {
    this.filterExpiryDateStop = filterExpiryDateStop;
  }

  public ListConsumeRequestSchema filterModificationDateStart(LocalDateTime filterModificationDateStart) {
    this.filterModificationDateStart = filterModificationDateStart;
    return this;
  }

   /**
   * Get filterModificationDateStart
   * @return filterModificationDateStart
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getFilterModificationDateStart() {
    return filterModificationDateStart;
  }

  public void setFilterModificationDateStart(LocalDateTime filterModificationDateStart) {
    this.filterModificationDateStart = filterModificationDateStart;
  }

  public ListConsumeRequestSchema filterModificationDateStop(LocalDateTime filterModificationDateStop) {
    this.filterModificationDateStop = filterModificationDateStop;
    return this;
  }

   /**
   * Get filterModificationDateStop
   * @return filterModificationDateStop
  **/
  @ApiModelProperty(value = "")
  public LocalDateTime getFilterModificationDateStop() {
    return filterModificationDateStop;
  }

  public void setFilterModificationDateStop(LocalDateTime filterModificationDateStop) {
    this.filterModificationDateStop = filterModificationDateStop;
  }

  public ListConsumeRequestSchema id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public ListConsumeRequestSchema instanceOid(Integer instanceOid) {
    this.instanceOid = instanceOid;
    return this;
  }

   /**
   * Get instanceOid
   * @return instanceOid
  **/
  @ApiModelProperty(value = "")
  public Integer getInstanceOid() {
    return instanceOid;
  }

  public void setInstanceOid(Integer instanceOid) {
    this.instanceOid = instanceOid;
  }

  public ListConsumeRequestSchema jobId(Integer jobId) {
    this.jobId = jobId;
    return this;
  }

   /**
   * Get jobId
   * @return jobId
  **/
  @ApiModelProperty(value = "")
  public Integer getJobId() {
    return jobId;
  }

  public void setJobId(Integer jobId) {
    this.jobId = jobId;
  }

  public ListConsumeRequestSchema metricTypeId(Integer metricTypeId) {
    this.metricTypeId = metricTypeId;
    return this;
  }

   /**
   * Get metricTypeId
   * @return metricTypeId
  **/
  @ApiModelProperty(value = "")
  public Integer getMetricTypeId() {
    return metricTypeId;
  }

  public void setMetricTypeId(Integer metricTypeId) {
    this.metricTypeId = metricTypeId;
  }

  public ListConsumeRequestSchema order(OrderEnum order) {
    this.order = order;
    return this;
  }

   /**
   * entities list order: ASC or DESC
   * @return order
  **/
  @ApiModelProperty(example = "DESC", value = "entities list order: ASC or DESC")
  public OrderEnum getOrder() {
    return order;
  }

  public void setOrder(OrderEnum order) {
    this.order = order;
  }

  public ListConsumeRequestSchema page(Integer page) {
    this.page = page;
    return this;
  }

   /**
   * entities list page selected
   * minimum: 0
   * maximum: 10000
   * @return page
  **/
  @ApiModelProperty(example = "0", value = "entities list page selected")
  public Integer getPage() {
    return page;
  }

  public void setPage(Integer page) {
    this.page = page;
  }

  public ListConsumeRequestSchema period(String period) {
    this.period = period;
    return this;
  }

   /**
   * Get period
   * @return period
  **/
  @ApiModelProperty(value = "")
  public String getPeriod() {
    return period;
  }

  public void setPeriod(String period) {
    this.period = period;
  }

  public ListConsumeRequestSchema size(Integer size) {
    this.size = size;
    return this;
  }

   /**
   * entities list page size. -1 to get all the records
   * minimum: -1
   * maximum: 100
   * @return size
  **/
  @ApiModelProperty(example = "20", value = "entities list page size. -1 to get all the records")
  public Integer getSize() {
    return size;
  }

  public void setSize(Integer size) {
    this.size = size;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListConsumeRequestSchema listConsumeRequestSchema = (ListConsumeRequestSchema) o;
    return Objects.equals(this.accountOid, listConsumeRequestSchema.accountOid) &&
        Objects.equals(this.aggregationType, listConsumeRequestSchema.aggregationType) &&
        Objects.equals(this.costTypeId, listConsumeRequestSchema.costTypeId) &&
        Objects.equals(this.evaluationDateEnd, listConsumeRequestSchema.evaluationDateEnd) &&
        Objects.equals(this.evaluationDateStart, listConsumeRequestSchema.evaluationDateStart) &&
        Objects.equals(this.field, listConsumeRequestSchema.field) &&
        Objects.equals(this.filterCreationDateStart, listConsumeRequestSchema.filterCreationDateStart) &&
        Objects.equals(this.filterCreationDateStop, listConsumeRequestSchema.filterCreationDateStop) &&
        Objects.equals(this.filterExpired, listConsumeRequestSchema.filterExpired) &&
        Objects.equals(this.filterExpiryDateStart, listConsumeRequestSchema.filterExpiryDateStart) &&
        Objects.equals(this.filterExpiryDateStop, listConsumeRequestSchema.filterExpiryDateStop) &&
        Objects.equals(this.filterModificationDateStart, listConsumeRequestSchema.filterModificationDateStart) &&
        Objects.equals(this.filterModificationDateStop, listConsumeRequestSchema.filterModificationDateStop) &&
        Objects.equals(this.id, listConsumeRequestSchema.id) &&
        Objects.equals(this.instanceOid, listConsumeRequestSchema.instanceOid) &&
        Objects.equals(this.jobId, listConsumeRequestSchema.jobId) &&
        Objects.equals(this.metricTypeId, listConsumeRequestSchema.metricTypeId) &&
        Objects.equals(this.order, listConsumeRequestSchema.order) &&
        Objects.equals(this.page, listConsumeRequestSchema.page) &&
        Objects.equals(this.period, listConsumeRequestSchema.period) &&
        Objects.equals(this.size, listConsumeRequestSchema.size);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountOid, aggregationType, costTypeId, evaluationDateEnd, evaluationDateStart, field, filterCreationDateStart, filterCreationDateStop, filterExpired, filterExpiryDateStart, filterExpiryDateStop, filterModificationDateStart, filterModificationDateStop, id, instanceOid, jobId, metricTypeId, order, page, period, size);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListConsumeRequestSchema {\n");
    
    sb.append("    accountOid: ").append(toIndentedString(accountOid)).append("\n");
    sb.append("    aggregationType: ").append(toIndentedString(aggregationType)).append("\n");
    sb.append("    costTypeId: ").append(toIndentedString(costTypeId)).append("\n");
    sb.append("    evaluationDateEnd: ").append(toIndentedString(evaluationDateEnd)).append("\n");
    sb.append("    evaluationDateStart: ").append(toIndentedString(evaluationDateStart)).append("\n");
    sb.append("    field: ").append(toIndentedString(field)).append("\n");
    sb.append("    filterCreationDateStart: ").append(toIndentedString(filterCreationDateStart)).append("\n");
    sb.append("    filterCreationDateStop: ").append(toIndentedString(filterCreationDateStop)).append("\n");
    sb.append("    filterExpired: ").append(toIndentedString(filterExpired)).append("\n");
    sb.append("    filterExpiryDateStart: ").append(toIndentedString(filterExpiryDateStart)).append("\n");
    sb.append("    filterExpiryDateStop: ").append(toIndentedString(filterExpiryDateStop)).append("\n");
    sb.append("    filterModificationDateStart: ").append(toIndentedString(filterModificationDateStart)).append("\n");
    sb.append("    filterModificationDateStop: ").append(toIndentedString(filterModificationDateStop)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    instanceOid: ").append(toIndentedString(instanceOid)).append("\n");
    sb.append("    jobId: ").append(toIndentedString(jobId)).append("\n");
    sb.append("    metricTypeId: ").append(toIndentedString(metricTypeId)).append("\n");
    sb.append("    order: ").append(toIndentedString(order)).append("\n");
    sb.append("    page: ").append(toIndentedString(page)).append("\n");
    sb.append("    period: ").append(toIndentedString(period)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

