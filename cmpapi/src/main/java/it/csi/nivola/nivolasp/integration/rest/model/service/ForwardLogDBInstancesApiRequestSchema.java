/*-
 * ========================LICENSE_START=================================
 * Api CMP
 * %%
 * Copyright (C) 2022 CSI Piemonte
 * %%
 * SPDX-FileCopyrightText: Copyright 2022 | CSI Piemonte
 * SPDX-License-Identifier: EUPL-1.2
 * =========================LICENSE_END==================================
 */
/*
 * Beehive API
 * Beehive API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: nivola.engineering@csi.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.csi.nivola.nivolasp.integration.rest.model.service;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.annotations.ApiModelProperty;

/**
 * ForwardLogDBInstancesApiRequestSchema
 */

public class ForwardLogDBInstancesApiRequestSchema {
  @JsonProperty("DBInstanceId.N")
  private List<String> dbInstanceIdN = new ArrayList<>();

  @JsonProperty("Files")
  private List<String> files = null;

  @JsonProperty("Pipeline")
  private String pipeline = null;

  @JsonProperty("owner-id.N")
  private List<String> ownerIdN = null;

  public ForwardLogDBInstancesApiRequestSchema dbInstanceIdN(List<String> dbInstanceIdN) {
    this.dbInstanceIdN = dbInstanceIdN;
    return this;
  }

  public ForwardLogDBInstancesApiRequestSchema addDbInstanceIdNItem(String dbInstanceIdNItem) {
    this.dbInstanceIdN.add(dbInstanceIdNItem);
    return this;
  }

   /**
   * DB instance id
   * @return dbInstanceIdN
  **/
  @ApiModelProperty(required = true, value = "DB instance id")
  public List<String> getDbInstanceIdN() {
    return dbInstanceIdN;
  }

  public void setDbInstanceIdN(List<String> dbInstanceIdN) {
    this.dbInstanceIdN = dbInstanceIdN;
  }

  public ForwardLogDBInstancesApiRequestSchema files(List<String> files) {
    this.files = files;
    return this;
  }

  public ForwardLogDBInstancesApiRequestSchema addFilesItem(String filesItem) {
    if (this.files == null) {
      this.files = new ArrayList<>();
    }
    this.files.add(filesItem);
    return this;
  }

   /**
   * List of files to forward
   * @return files
  **/
  @ApiModelProperty(value = "List of files to forward")
  public List<String> getFiles() {
    return files;
  }

  public void setFiles(List<String> files) {
    this.files = files;
  }

  public ForwardLogDBInstancesApiRequestSchema pipeline(String pipeline) {
    this.pipeline = pipeline;
    return this;
  }

   /**
   * Log collector pipeline port
   * @return pipeline
  **/
  @ApiModelProperty(value = "Log collector pipeline port")
  public String getPipeline() {
    return pipeline;
  }

  public void setPipeline(String pipeline) {
    this.pipeline = pipeline;
  }

  public ForwardLogDBInstancesApiRequestSchema ownerIdN(List<String> ownerIdN) {
    this.ownerIdN = ownerIdN;
    return this;
  }

  public ForwardLogDBInstancesApiRequestSchema addOwnerIdNItem(String ownerIdNItem) {
    if (this.ownerIdN == null) {
      this.ownerIdN = new ArrayList<>();
    }
    this.ownerIdN.add(ownerIdNItem);
    return this;
  }

   /**
   * account ID of the DB instance owner
   * @return ownerIdN
  **/
  @ApiModelProperty(value = "account ID of the DB instance owner")
  public List<String> getOwnerIdN() {
    return ownerIdN;
  }

  public void setOwnerIdN(List<String> ownerIdN) {
    this.ownerIdN = ownerIdN;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ForwardLogDBInstancesApiRequestSchema forwardLogDBInstancesApiRequestSchema = (ForwardLogDBInstancesApiRequestSchema) o;
    return Objects.equals(this.dbInstanceIdN, forwardLogDBInstancesApiRequestSchema.dbInstanceIdN) &&
        Objects.equals(this.files, forwardLogDBInstancesApiRequestSchema.files) &&
        Objects.equals(this.pipeline, forwardLogDBInstancesApiRequestSchema.pipeline) &&
        Objects.equals(this.ownerIdN, forwardLogDBInstancesApiRequestSchema.ownerIdN);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dbInstanceIdN, files, pipeline, ownerIdN);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ForwardLogDBInstancesApiRequestSchema {\n");
    
    sb.append("    dbInstanceIdN: ").append(toIndentedString(dbInstanceIdN)).append("\n");
    sb.append("    files: ").append(toIndentedString(files)).append("\n");
    sb.append("    pipeline: ").append(toIndentedString(pipeline)).append("\n");
    sb.append("    ownerIdN: ").append(toIndentedString(ownerIdN)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

