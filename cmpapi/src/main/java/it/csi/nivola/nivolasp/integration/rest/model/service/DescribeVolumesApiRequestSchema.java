/*-
 * ========================LICENSE_START=================================
 * Api CMP
 * %%
 * Copyright (C) 2022 CSI Piemonte
 * %%
 * SPDX-FileCopyrightText: Copyright 2022 | CSI Piemonte
 * SPDX-License-Identifier: EUPL-1.2
 * =========================LICENSE_END==================================
 */
/*
 * Beehive API
 * Beehive API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: nivola.engineering@csi.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.csi.nivola.nivolasp.integration.rest.model.service;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;

import io.swagger.annotations.ApiModelProperty;

/**
 * DescribeVolumesApiRequestSchema
 */

public class DescribeVolumesApiRequestSchema {
  @JsonProperty("MaxResults")
  private Integer maxResults = null;

  @JsonProperty("NextToken")
  private String nextToken = null;

  @JsonProperty("Nvl_Name.N")
  private List<String> nvlNameN = null;

  @JsonProperty("VolumeId.N")
  private List<String> volumeIdDotN = null;

  @JsonProperty("attachment.N")
  private List<DescribeVolumesApiRequestSchemaAttachmentN> attachmentN = null;

  @JsonProperty("create-time.N")
  private List<String> createTimeN = null;

  @JsonProperty("owner-id.N")
  private List<String> ownerIdN = null;

  /**
   * Gets or Sets statusN
   */
  public enum StatusNEnum {
    CREATING("creating"),
    
    _AVAILABLE(" available"),
    
    IN_USE("in-use"),
    
    DELETING("deleting"),
    
    _DELETED(" deleted"),
    
    ERROR("error");

    private String value;

    StatusNEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusNEnum fromValue(String value) {
      for (StatusNEnum b : StatusNEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("status.N")
  private List<StatusNEnum> statusN = null;

  @JsonProperty("tag-key.N")
  private List<String> tagKeyN = null;

  @JsonProperty("volume-id.N")
  private List<String> volumeIdN = null;

  @JsonProperty("volume-type.N")
  private List<String> volumeTypeN = null;

  public DescribeVolumesApiRequestSchema maxResults(Integer maxResults) {
    this.maxResults = maxResults;
    return this;
  }

   /**
   * 
   * @return maxResults
  **/
  @ApiModelProperty(value = "")
  public Integer getMaxResults() {
    return maxResults;
  }

  public void setMaxResults(Integer maxResults) {
    this.maxResults = maxResults;
  }

  public DescribeVolumesApiRequestSchema nextToken(String nextToken) {
    this.nextToken = nextToken;
    return this;
  }

   /**
   * 
   * @return nextToken
  **/
  @ApiModelProperty(value = "")
  public String getNextToken() {
    return nextToken;
  }

  public void setNextToken(String nextToken) {
    this.nextToken = nextToken;
  }

  public DescribeVolumesApiRequestSchema nvlNameN(List<String> nvlNameN) {
    this.nvlNameN = nvlNameN;
    return this;
  }

  public DescribeVolumesApiRequestSchema addNvlNameNItem(String nvlNameNItem) {
    if (this.nvlNameN == null) {
      this.nvlNameN = new ArrayList<>();
    }
    this.nvlNameN.add(nvlNameNItem);
    return this;
  }

   /**
   * name of the volume
   * @return nvlNameN
  **/
  @ApiModelProperty(example = "\"\"", value = "name of the volume")
  public List<String> getNvlNameN() {
    return nvlNameN;
  }

  public void setNvlNameN(List<String> nvlNameN) {
    this.nvlNameN = nvlNameN;
  }

  public DescribeVolumesApiRequestSchema volumeIdDotN(List<String> volumeIdDotN) {
    this.volumeIdDotN = volumeIdDotN;
    return this;
  }

  public DescribeVolumesApiRequestSchema addVolumeIdDotNItem(String volumeIdDotNItem) {
    if (this.volumeIdDotN == null) {
      this.volumeIdDotN = new ArrayList<>();
    }
    this.volumeIdDotN.add(volumeIdDotNItem);
    return this;
  }

   /**
   * volume id
   * @return volumeIdDotN
  **/
  @ApiModelProperty(value = "volume id")
  public List<String> getVolumeIdDotN() {
    return volumeIdDotN;
  }

  public void setVolumeIdDotN(List<String> volumeIdDotN) {
    this.volumeIdDotN = volumeIdDotN;
  }

  public DescribeVolumesApiRequestSchema attachmentN(List<DescribeVolumesApiRequestSchemaAttachmentN> attachmentN) {
    this.attachmentN = attachmentN;
    return this;
  }

  public DescribeVolumesApiRequestSchema addAttachmentNItem(DescribeVolumesApiRequestSchemaAttachmentN attachmentNItem) {
    if (this.attachmentN == null) {
      this.attachmentN = new ArrayList<>();
    }
    this.attachmentN.add(attachmentNItem);
    return this;
  }

   /**
   * Attachment
   * @return attachmentN
  **/
  @ApiModelProperty(value = "Attachment")
  public List<DescribeVolumesApiRequestSchemaAttachmentN> getAttachmentN() {
    return attachmentN;
  }

  public void setAttachmentN(List<DescribeVolumesApiRequestSchemaAttachmentN> attachmentN) {
    this.attachmentN = attachmentN;
  }

  public DescribeVolumesApiRequestSchema createTimeN(List<String> createTimeN) {
    this.createTimeN = createTimeN;
    return this;
  }

  public DescribeVolumesApiRequestSchema addCreateTimeNItem(String createTimeNItem) {
    if (this.createTimeN == null) {
      this.createTimeN = new ArrayList<>();
    }
    this.createTimeN.add(createTimeNItem);
    return this;
  }

   /**
   * The time stamp when the volume was created.
   * @return createTimeN
  **/
  @ApiModelProperty(value = "The time stamp when the volume was created.")
  public List<String> getCreateTimeN() {
    return createTimeN;
  }

  public void setCreateTimeN(List<String> createTimeN) {
    this.createTimeN = createTimeN;
  }

  public DescribeVolumesApiRequestSchema ownerIdN(List<String> ownerIdN) {
    this.ownerIdN = ownerIdN;
    return this;
  }

  public DescribeVolumesApiRequestSchema addOwnerIdNItem(String ownerIdNItem) {
    if (this.ownerIdN == null) {
      this.ownerIdN = new ArrayList<>();
    }
    this.ownerIdN.add(ownerIdNItem);
    return this;
  }

   /**
   * account ID of the instance owner
   * @return ownerIdN
  **/
  @ApiModelProperty(value = "account ID of the instance owner")
  public List<String> getOwnerIdN() {
    return ownerIdN;
  }

  public void setOwnerIdN(List<String> ownerIdN) {
    this.ownerIdN = ownerIdN;
  }

  public DescribeVolumesApiRequestSchema statusN(List<StatusNEnum> statusN) {
    this.statusN = statusN;
    return this;
  }

  public DescribeVolumesApiRequestSchema addStatusNItem(StatusNEnum statusNItem) {
    if (this.statusN == null) {
      this.statusN = new ArrayList<>();
    }
    this.statusN.add(statusNItem);
    return this;
  }

   /**
   * The status of the volume (creating | available | in-use | deleting | deleted | error)
   * @return statusN
  **/
  @ApiModelProperty(value = "The status of the volume (creating | available | in-use | deleting | deleted | error)")
  public List<StatusNEnum> getStatusN() {
    return statusN;
  }

  public void setStatusN(List<StatusNEnum> statusN) {
    this.statusN = statusN;
  }

  public DescribeVolumesApiRequestSchema tagKeyN(List<String> tagKeyN) {
    this.tagKeyN = tagKeyN;
    return this;
  }

  public DescribeVolumesApiRequestSchema addTagKeyNItem(String tagKeyNItem) {
    if (this.tagKeyN == null) {
      this.tagKeyN = new ArrayList<>();
    }
    this.tagKeyN.add(tagKeyNItem);
    return this;
  }

   /**
   * Get tagKeyN
   * @return tagKeyN
  **/
  @ApiModelProperty(value = "")
  public List<String> getTagKeyN() {
    return tagKeyN;
  }

  public void setTagKeyN(List<String> tagKeyN) {
    this.tagKeyN = tagKeyN;
  }

  public DescribeVolumesApiRequestSchema volumeIdN(List<String> volumeIdN) {
    this.volumeIdN = volumeIdN;
    return this;
  }

  public DescribeVolumesApiRequestSchema addVolumeIdNItem(String volumeIdNItem) {
    if (this.volumeIdN == null) {
      this.volumeIdN = new ArrayList<>();
    }
    this.volumeIdN.add(volumeIdNItem);
    return this;
  }

   /**
   * volume id
   * @return volumeIdN
  **/
  @ApiModelProperty(value = "volume id")
  public List<String> getVolumeIdN() {
    return volumeIdN;
  }

  public void setVolumeIdN(List<String> volumeIdN) {
    this.volumeIdN = volumeIdN;
  }

  public DescribeVolumesApiRequestSchema volumeTypeN(List<String> volumeTypeN) {
    this.volumeTypeN = volumeTypeN;
    return this;
  }

  public DescribeVolumesApiRequestSchema addVolumeTypeNItem(String volumeTypeNItem) {
    if (this.volumeTypeN == null) {
      this.volumeTypeN = new ArrayList<>();
    }
    this.volumeTypeN.add(volumeTypeNItem);
    return this;
  }

   /**
   * The volume type.
   * @return volumeTypeN
  **/
  @ApiModelProperty(value = "The volume type.")
  public List<String> getVolumeTypeN() {
    return volumeTypeN;
  }

  public void setVolumeTypeN(List<String> volumeTypeN) {
    this.volumeTypeN = volumeTypeN;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeVolumesApiRequestSchema describeVolumesApiRequestSchema = (DescribeVolumesApiRequestSchema) o;
    return Objects.equals(this.maxResults, describeVolumesApiRequestSchema.maxResults) &&
        Objects.equals(this.nextToken, describeVolumesApiRequestSchema.nextToken) &&
        Objects.equals(this.nvlNameN, describeVolumesApiRequestSchema.nvlNameN) &&
        Objects.equals(this.volumeIdDotN, describeVolumesApiRequestSchema.volumeIdDotN) &&
        Objects.equals(this.attachmentN, describeVolumesApiRequestSchema.attachmentN) &&
        Objects.equals(this.createTimeN, describeVolumesApiRequestSchema.createTimeN) &&
        Objects.equals(this.ownerIdN, describeVolumesApiRequestSchema.ownerIdN) &&
        Objects.equals(this.statusN, describeVolumesApiRequestSchema.statusN) &&
        Objects.equals(this.tagKeyN, describeVolumesApiRequestSchema.tagKeyN) &&
        Objects.equals(this.volumeIdN, describeVolumesApiRequestSchema.volumeIdN) &&
        Objects.equals(this.volumeTypeN, describeVolumesApiRequestSchema.volumeTypeN);
  }

  @Override
  public int hashCode() {
    return Objects.hash(maxResults, nextToken, nvlNameN, volumeIdDotN, attachmentN, createTimeN, ownerIdN, statusN, tagKeyN, volumeIdN, volumeTypeN);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeVolumesApiRequestSchema {\n");
    
    sb.append("    maxResults: ").append(toIndentedString(maxResults)).append("\n");
    sb.append("    nextToken: ").append(toIndentedString(nextToken)).append("\n");
    sb.append("    nvlNameN: ").append(toIndentedString(nvlNameN)).append("\n");
    sb.append("    volumeIdDotN: ").append(toIndentedString(volumeIdDotN)).append("\n");
    sb.append("    attachmentN: ").append(toIndentedString(attachmentN)).append("\n");
    sb.append("    createTimeN: ").append(toIndentedString(createTimeN)).append("\n");
    sb.append("    ownerIdN: ").append(toIndentedString(ownerIdN)).append("\n");
    sb.append("    statusN: ").append(toIndentedString(statusN)).append("\n");
    sb.append("    tagKeyN: ").append(toIndentedString(tagKeyN)).append("\n");
    sb.append("    volumeIdN: ").append(toIndentedString(volumeIdN)).append("\n");
    sb.append("    volumeTypeN: ").append(toIndentedString(volumeTypeN)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

