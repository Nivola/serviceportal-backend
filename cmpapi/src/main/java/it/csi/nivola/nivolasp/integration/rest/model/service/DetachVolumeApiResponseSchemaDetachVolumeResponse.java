/*-
 * ========================LICENSE_START=================================
 * Api CMP
 * %%
 * Copyright (C) 2022 CSI Piemonte
 * %%
 * SPDX-FileCopyrightText: Copyright 2022 | CSI Piemonte
 * SPDX-License-Identifier: EUPL-1.2
 * =========================LICENSE_END==================================
 */
/*
 * Beehive API
 * Beehive API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: nivola.engineering@csi.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.csi.nivola.nivolasp.integration.rest.model.service;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.annotations.ApiModelProperty;

/**
 * DetachVolumeApiResponseSchemaDetachVolumeResponse
 */

public class DetachVolumeApiResponseSchemaDetachVolumeResponse {
  @JsonProperty("attachTime")
  private String attachTime = null;

  @JsonProperty("deleteOnTermination")
  private Boolean deleteOnTermination = null;

  @JsonProperty("device")
  private String device = null;

  @JsonProperty("instanceId")
  private String instanceId = null;

  @JsonProperty("requestId")
  private String requestId = null;

  @JsonProperty("status")
  private String status = null;

  @JsonProperty("volumeId")
  private String volumeId = null;

  public DetachVolumeApiResponseSchemaDetachVolumeResponse attachTime(String attachTime) {
    this.attachTime = attachTime;
    return this;
  }

   /**
   * volume attachment status
   * @return attachTime
  **/
  @ApiModelProperty(example = "", required = true, value = "volume attachment status")
  public String getAttachTime() {
    return attachTime;
  }

  public void setAttachTime(String attachTime) {
    this.attachTime = attachTime;
  }

  public DetachVolumeApiResponseSchemaDetachVolumeResponse deleteOnTermination(Boolean deleteOnTermination) {
    this.deleteOnTermination = deleteOnTermination;
    return this;
  }

   /**
   * Indicates whether the volume is deleted on instance termination.
   * @return deleteOnTermination
  **/
  @ApiModelProperty(example = "true", required = true, value = "Indicates whether the volume is deleted on instance termination.")
  public Boolean isDeleteOnTermination() {
    return deleteOnTermination;
  }

  public void setDeleteOnTermination(Boolean deleteOnTermination) {
    this.deleteOnTermination = deleteOnTermination;
  }

  public DetachVolumeApiResponseSchemaDetachVolumeResponse device(String device) {
    this.device = device;
    return this;
  }

   /**
   * instance device
   * @return device
  **/
  @ApiModelProperty(example = "", required = true, value = "instance device")
  public String getDevice() {
    return device;
  }

  public void setDevice(String device) {
    this.device = device;
  }

  public DetachVolumeApiResponseSchemaDetachVolumeResponse instanceId(String instanceId) {
    this.instanceId = instanceId;
    return this;
  }

   /**
   * instance id
   * @return instanceId
  **/
  @ApiModelProperty(example = "", required = true, value = "instance id")
  public String getInstanceId() {
    return instanceId;
  }

  public void setInstanceId(String instanceId) {
    this.instanceId = instanceId;
  }

  public DetachVolumeApiResponseSchemaDetachVolumeResponse requestId(String requestId) {
    this.requestId = requestId;
    return this;
  }

   /**
   * api request id
   * @return requestId
  **/
  @ApiModelProperty(example = "", required = true, value = "api request id")
  public String getRequestId() {
    return requestId;
  }

  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }

  public DetachVolumeApiResponseSchemaDetachVolumeResponse status(String status) {
    this.status = status;
    return this;
  }

   /**
   * volume attachment status
   * @return status
  **/
  @ApiModelProperty(example = "", required = true, value = "volume attachment status")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public DetachVolumeApiResponseSchemaDetachVolumeResponse volumeId(String volumeId) {
    this.volumeId = volumeId;
    return this;
  }

   /**
   * volume id
   * @return volumeId
  **/
  @ApiModelProperty(example = "", required = true, value = "volume id")
  public String getVolumeId() {
    return volumeId;
  }

  public void setVolumeId(String volumeId) {
    this.volumeId = volumeId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DetachVolumeApiResponseSchemaDetachVolumeResponse detachVolumeApiResponseSchemaDetachVolumeResponse = (DetachVolumeApiResponseSchemaDetachVolumeResponse) o;
    return Objects.equals(this.attachTime, detachVolumeApiResponseSchemaDetachVolumeResponse.attachTime) &&
        Objects.equals(this.deleteOnTermination, detachVolumeApiResponseSchemaDetachVolumeResponse.deleteOnTermination) &&
        Objects.equals(this.device, detachVolumeApiResponseSchemaDetachVolumeResponse.device) &&
        Objects.equals(this.instanceId, detachVolumeApiResponseSchemaDetachVolumeResponse.instanceId) &&
        Objects.equals(this.requestId, detachVolumeApiResponseSchemaDetachVolumeResponse.requestId) &&
        Objects.equals(this.status, detachVolumeApiResponseSchemaDetachVolumeResponse.status) &&
        Objects.equals(this.volumeId, detachVolumeApiResponseSchemaDetachVolumeResponse.volumeId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attachTime, deleteOnTermination, device, instanceId, requestId, status, volumeId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DetachVolumeApiResponseSchemaDetachVolumeResponse {\n");
    
    sb.append("    attachTime: ").append(toIndentedString(attachTime)).append("\n");
    sb.append("    deleteOnTermination: ").append(toIndentedString(deleteOnTermination)).append("\n");
    sb.append("    device: ").append(toIndentedString(device)).append("\n");
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    volumeId: ").append(toIndentedString(volumeId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

