/*-
 * ========================LICENSE_START=================================
 * Api CMP
 * %%
 * Copyright (C) 2022 CSI Piemonte
 * %%
 * SPDX-FileCopyrightText: Copyright 2022 | CSI Piemonte
 * SPDX-License-Identifier: EUPL-1.2
 * =========================LICENSE_END==================================
 */
/*
 * Beehive API
 * Beehive API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: nivola.engineering@csi.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.csi.nivola.nivolasp.integration.rest.model.service;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;

import io.swagger.annotations.ApiModelProperty;

/**
 * RunInstancesApiRequestSchemaInstance
 */

public class RunInstancesApiRequestSchemaInstance {
  @JsonProperty("AdditionalInfo")
  private String additionalInfo = null;

  @JsonProperty("AdminPassword")
  private String adminPassword = null;

  @JsonProperty("BlockDeviceMapping.N")
  private List<RunInstancesApiRequestSchemaInstanceBlockDeviceMappingN> blockDeviceMappingN = null;

  @JsonProperty("ImageId")
  private String imageId = null;

  @JsonProperty("InstanceType")
  private String instanceType = null;

  @JsonProperty("KeyName")
  private String keyName = null;

  @JsonProperty("Name")
  private String name = "default istance name";

  @JsonProperty("Nvl_HostGroup")
  private String nvlHostGroup = null;

  /**
   * hypervisor type
   */
  public enum NvlHypervisorEnum {
    OPENSTACK("openstack"),
    
    VSPHERE("vsphere");

    private String value;

    NvlHypervisorEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static NvlHypervisorEnum fromValue(String value) {
      for (NvlHypervisorEnum b : NvlHypervisorEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("Nvl_Hypervisor")
  private NvlHypervisorEnum nvlHypervisor = NvlHypervisorEnum.OPENSTACK;

  @JsonProperty("Nvl_Metadata")
  private Object nvlMetadata = null;

  @JsonProperty("Nvl_MultiAvz")
  private Boolean nvlMultiAvz = true;

  @JsonProperty("SecurityGroupId.N")
  private List<String> securityGroupIdN = null;

  @JsonProperty("SubnetId")
  private String subnetId = null;

  @JsonProperty("owner-id")
  private String ownerId = null;

  public RunInstancesApiRequestSchemaInstance additionalInfo(String additionalInfo) {
    this.additionalInfo = additionalInfo;
    return this;
  }

   /**
   * instance description
   * @return additionalInfo
  **/
  @ApiModelProperty(value = "instance description")
  public String getAdditionalInfo() {
    return additionalInfo;
  }

  public void setAdditionalInfo(String additionalInfo) {
    this.additionalInfo = additionalInfo;
  }

  public RunInstancesApiRequestSchemaInstance adminPassword(String adminPassword) {
    this.adminPassword = adminPassword;
    return this;
  }

   /**
   * admin password to set
   * @return adminPassword
  **/
  @ApiModelProperty(example = "myPwd1$", value = "admin password to set")
  public String getAdminPassword() {
    return adminPassword;
  }

  public void setAdminPassword(String adminPassword) {
    this.adminPassword = adminPassword;
  }

  public RunInstancesApiRequestSchemaInstance blockDeviceMappingN(List<RunInstancesApiRequestSchemaInstanceBlockDeviceMappingN> blockDeviceMappingN) {
    this.blockDeviceMappingN = blockDeviceMappingN;
    return this;
  }

  public RunInstancesApiRequestSchemaInstance addBlockDeviceMappingNItem(RunInstancesApiRequestSchemaInstanceBlockDeviceMappingN blockDeviceMappingNItem) {
    if (this.blockDeviceMappingN == null) {
      this.blockDeviceMappingN = new ArrayList<>();
    }
    this.blockDeviceMappingN.add(blockDeviceMappingNItem);
    return this;
  }

   /**
   * Get blockDeviceMappingN
   * @return blockDeviceMappingN
  **/
  @ApiModelProperty(value = "")
  public List<RunInstancesApiRequestSchemaInstanceBlockDeviceMappingN> getBlockDeviceMappingN() {
    return blockDeviceMappingN;
  }

  public void setBlockDeviceMappingN(List<RunInstancesApiRequestSchemaInstanceBlockDeviceMappingN> blockDeviceMappingN) {
    this.blockDeviceMappingN = blockDeviceMappingN;
  }

  public RunInstancesApiRequestSchemaInstance imageId(String imageId) {
    this.imageId = imageId;
    return this;
  }

   /**
   * instance id or uuid of the image
   * @return imageId
  **/
  @ApiModelProperty(example = "12", required = true, value = "instance id or uuid of the image")
  public String getImageId() {
    return imageId;
  }

  public void setImageId(String imageId) {
    this.imageId = imageId;
  }

  public RunInstancesApiRequestSchemaInstance instanceType(String instanceType) {
    this.instanceType = instanceType;
    return this;
  }

   /**
   * service definition of the instance
   * @return instanceType
  **/
  @ApiModelProperty(example = "small2", required = true, value = "service definition of the instance")
  public String getInstanceType() {
    return instanceType;
  }

  public void setInstanceType(String instanceType) {
    this.instanceType = instanceType;
  }

  public RunInstancesApiRequestSchemaInstance keyName(String keyName) {
    this.keyName = keyName;
    return this;
  }

   /**
   * The name of the key pair
   * @return keyName
  **/
  @ApiModelProperty(example = "1ffd", value = "The name of the key pair")
  public String getKeyName() {
    return keyName;
  }

  public void setKeyName(String keyName) {
    this.keyName = keyName;
  }

  public RunInstancesApiRequestSchemaInstance name(String name) {
    this.name = name;
    return this;
  }

   /**
   * instance name
   * @return name
  **/
  @ApiModelProperty(value = "instance name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public RunInstancesApiRequestSchemaInstance nvlHostGroup(String nvlHostGroup) {
    this.nvlHostGroup = nvlHostGroup;
    return this;
  }

   /**
   * hypervisor host group
   * @return nvlHostGroup
  **/
  @ApiModelProperty(example = "oracle", value = "hypervisor host group")
  public String getNvlHostGroup() {
    return nvlHostGroup;
  }

  public void setNvlHostGroup(String nvlHostGroup) {
    this.nvlHostGroup = nvlHostGroup;
  }

  public RunInstancesApiRequestSchemaInstance nvlHypervisor(NvlHypervisorEnum nvlHypervisor) {
    this.nvlHypervisor = nvlHypervisor;
    return this;
  }

   /**
   * hypervisor type
   * @return nvlHypervisor
  **/
  @ApiModelProperty(example = "openstack", value = "hypervisor type")
  public NvlHypervisorEnum getNvlHypervisor() {
    return nvlHypervisor;
  }

  public void setNvlHypervisor(NvlHypervisorEnum nvlHypervisor) {
    this.nvlHypervisor = nvlHypervisor;
  }

  public RunInstancesApiRequestSchemaInstance nvlMetadata(Object nvlMetadata) {
    this.nvlMetadata = nvlMetadata;
    return this;
  }

   /**
   * custom configuration keys
   * @return nvlMetadata
  **/
  @ApiModelProperty(example = "\"{\\\"cluster\\\":\\\"\\\",\\\"dvp\\\":\\\"\\\"}\"", value = "custom configuration keys")
  public Object getNvlMetadata() {
    return nvlMetadata;
  }

  public void setNvlMetadata(Object nvlMetadata) {
    this.nvlMetadata = nvlMetadata;
  }

  public RunInstancesApiRequestSchemaInstance nvlMultiAvz(Boolean nvlMultiAvz) {
    this.nvlMultiAvz = nvlMultiAvz;
    return this;
  }

   /**
   * Define if instance must be deployed to work in all the availability zone or only in the selected one
   * @return nvlMultiAvz
  **/
  @ApiModelProperty(example = "true", value = "Define if instance must be deployed to work in all the availability zone or only in the selected one")
  public Boolean isNvlMultiAvz() {
    return nvlMultiAvz;
  }

  public void setNvlMultiAvz(Boolean nvlMultiAvz) {
    this.nvlMultiAvz = nvlMultiAvz;
  }

  public RunInstancesApiRequestSchemaInstance securityGroupIdN(List<String> securityGroupIdN) {
    this.securityGroupIdN = securityGroupIdN;
    return this;
  }

  public RunInstancesApiRequestSchemaInstance addSecurityGroupIdNItem(String securityGroupIdNItem) {
    if (this.securityGroupIdN == null) {
      this.securityGroupIdN = new ArrayList<>();
    }
    this.securityGroupIdN.add(securityGroupIdNItem);
    return this;
  }

   /**
   * list of instance security group ids
   * @return securityGroupIdN
  **/
  @ApiModelProperty(value = "list of instance security group ids")
  public List<String> getSecurityGroupIdN() {
    return securityGroupIdN;
  }

  public void setSecurityGroupIdN(List<String> securityGroupIdN) {
    this.securityGroupIdN = securityGroupIdN;
  }

  public RunInstancesApiRequestSchemaInstance subnetId(String subnetId) {
    this.subnetId = subnetId;
    return this;
  }

   /**
   * instance id or uuid of the subnet
   * @return subnetId
  **/
  @ApiModelProperty(example = "12", value = "instance id or uuid of the subnet")
  public String getSubnetId() {
    return subnetId;
  }

  public void setSubnetId(String subnetId) {
    this.subnetId = subnetId;
  }

  public RunInstancesApiRequestSchemaInstance ownerId(String ownerId) {
    this.ownerId = ownerId;
    return this;
  }

   /**
   * account id or uuid associated to compute zone
   * @return ownerId
  **/
  @ApiModelProperty(example = "1", required = true, value = "account id or uuid associated to compute zone")
  public String getOwnerId() {
    return ownerId;
  }

  public void setOwnerId(String ownerId) {
    this.ownerId = ownerId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RunInstancesApiRequestSchemaInstance runInstancesApiRequestSchemaInstance = (RunInstancesApiRequestSchemaInstance) o;
    return Objects.equals(this.additionalInfo, runInstancesApiRequestSchemaInstance.additionalInfo) &&
        Objects.equals(this.adminPassword, runInstancesApiRequestSchemaInstance.adminPassword) &&
        Objects.equals(this.blockDeviceMappingN, runInstancesApiRequestSchemaInstance.blockDeviceMappingN) &&
        Objects.equals(this.imageId, runInstancesApiRequestSchemaInstance.imageId) &&
        Objects.equals(this.instanceType, runInstancesApiRequestSchemaInstance.instanceType) &&
        Objects.equals(this.keyName, runInstancesApiRequestSchemaInstance.keyName) &&
        Objects.equals(this.name, runInstancesApiRequestSchemaInstance.name) &&
        Objects.equals(this.nvlHostGroup, runInstancesApiRequestSchemaInstance.nvlHostGroup) &&
        Objects.equals(this.nvlHypervisor, runInstancesApiRequestSchemaInstance.nvlHypervisor) &&
        Objects.equals(this.nvlMetadata, runInstancesApiRequestSchemaInstance.nvlMetadata) &&
        Objects.equals(this.nvlMultiAvz, runInstancesApiRequestSchemaInstance.nvlMultiAvz) &&
        Objects.equals(this.securityGroupIdN, runInstancesApiRequestSchemaInstance.securityGroupIdN) &&
        Objects.equals(this.subnetId, runInstancesApiRequestSchemaInstance.subnetId) &&
        Objects.equals(this.ownerId, runInstancesApiRequestSchemaInstance.ownerId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(additionalInfo, adminPassword, blockDeviceMappingN, imageId, instanceType, keyName, name, nvlHostGroup, nvlHypervisor, nvlMetadata, nvlMultiAvz, securityGroupIdN, subnetId, ownerId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RunInstancesApiRequestSchemaInstance {\n");
    
    sb.append("    additionalInfo: ").append(toIndentedString(additionalInfo)).append("\n");
    sb.append("    adminPassword: ").append(toIndentedString(adminPassword)).append("\n");
    sb.append("    blockDeviceMappingN: ").append(toIndentedString(blockDeviceMappingN)).append("\n");
    sb.append("    imageId: ").append(toIndentedString(imageId)).append("\n");
    sb.append("    instanceType: ").append(toIndentedString(instanceType)).append("\n");
    sb.append("    keyName: ").append(toIndentedString(keyName)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nvlHostGroup: ").append(toIndentedString(nvlHostGroup)).append("\n");
    sb.append("    nvlHypervisor: ").append(toIndentedString(nvlHypervisor)).append("\n");
    sb.append("    nvlMetadata: ").append(toIndentedString(nvlMetadata)).append("\n");
    sb.append("    nvlMultiAvz: ").append(toIndentedString(nvlMultiAvz)).append("\n");
    sb.append("    securityGroupIdN: ").append(toIndentedString(securityGroupIdN)).append("\n");
    sb.append("    subnetId: ").append(toIndentedString(subnetId)).append("\n");
    sb.append("    ownerId: ").append(toIndentedString(ownerId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

