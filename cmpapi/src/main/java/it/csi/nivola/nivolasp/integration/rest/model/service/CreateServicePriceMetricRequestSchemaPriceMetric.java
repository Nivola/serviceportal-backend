/*-
 * ========================LICENSE_START=================================
 * Api CMP
 * %%
 * Copyright (C) 2022 CSI Piemonte
 * %%
 * SPDX-FileCopyrightText: Copyright 2022 | CSI Piemonte
 * SPDX-License-Identifier: EUPL-1.2
 * =========================LICENSE_END==================================
 */
/*
 * Beehive API
 * Beehive API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: nivola.engineering@csi.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.csi.nivola.nivolasp.integration.rest.model.service;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;

import io.swagger.annotations.ApiModelProperty;

/**
 * CreateServicePriceMetricRequestSchemaPriceMetric
 */

public class CreateServicePriceMetricRequestSchemaPriceMetric {
  @JsonProperty("active")
  private Boolean active = null;

  @JsonProperty("desc")
  private String desc = null;

  @JsonProperty("metric_type_id")
  private String metricTypeId = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("price")
  private BigDecimal price = null;

  @JsonProperty("price_list_id")
  private String priceListId = null;

  /**
   * Gets or Sets priceType
   */
  public enum PriceTypeEnum {
    SIMPLE("SIMPLE"),
    
    SLICE("SLICE"),
    
    THRESHOLD("THRESHOLD");

    private String value;

    PriceTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PriceTypeEnum fromValue(String value) {
      for (PriceTypeEnum b : PriceTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("price_type")
  private PriceTypeEnum priceType = null;

  @JsonProperty("thresholds")
  private List<CreateServicePriceMetricRequestSchemaPriceMetricThresholds> thresholds = null;

  /**
   * Gets or Sets timeUnit
   */
  public enum TimeUnitEnum {
    YEAR("YEAR"),
    
    MONTH("MONTH"),
    
    DAY("DAY"),
    
    HOUR("HOUR"),
    
    MINUTE("MINUTE"),
    
    SECOND("SECOND");

    private String value;

    TimeUnitEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TimeUnitEnum fromValue(String value) {
      for (TimeUnitEnum b : TimeUnitEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("time_unit")
  private TimeUnitEnum timeUnit = null;

  public CreateServicePriceMetricRequestSchemaPriceMetric active(Boolean active) {
    this.active = active;
    return this;
  }

   /**
   * Get active
   * @return active
  **/
  @ApiModelProperty(value = "")
  public Boolean isActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }

  public CreateServicePriceMetricRequestSchemaPriceMetric desc(String desc) {
    this.desc = desc;
    return this;
  }

   /**
   * Get desc
   * @return desc
  **/
  @ApiModelProperty(value = "")
  public String getDesc() {
    return desc;
  }

  public void setDesc(String desc) {
    this.desc = desc;
  }

  public CreateServicePriceMetricRequestSchemaPriceMetric metricTypeId(String metricTypeId) {
    this.metricTypeId = metricTypeId;
    return this;
  }

   /**
   * Get metricTypeId
   * @return metricTypeId
  **/
  @ApiModelProperty(required = true, value = "")
  public String getMetricTypeId() {
    return metricTypeId;
  }

  public void setMetricTypeId(String metricTypeId) {
    this.metricTypeId = metricTypeId;
  }

  public CreateServicePriceMetricRequestSchemaPriceMetric name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CreateServicePriceMetricRequestSchemaPriceMetric price(BigDecimal price) {
    this.price = price;
    return this;
  }

   /**
   * Get price
   * @return price
  **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getPrice() {
    return price;
  }

  public void setPrice(BigDecimal price) {
    this.price = price;
  }

  public CreateServicePriceMetricRequestSchemaPriceMetric priceListId(String priceListId) {
    this.priceListId = priceListId;
    return this;
  }

   /**
   * Get priceListId
   * @return priceListId
  **/
  @ApiModelProperty(required = true, value = "")
  public String getPriceListId() {
    return priceListId;
  }

  public void setPriceListId(String priceListId) {
    this.priceListId = priceListId;
  }

  public CreateServicePriceMetricRequestSchemaPriceMetric priceType(PriceTypeEnum priceType) {
    this.priceType = priceType;
    return this;
  }

   /**
   * Get priceType
   * @return priceType
  **/
  @ApiModelProperty(value = "")
  public PriceTypeEnum getPriceType() {
    return priceType;
  }

  public void setPriceType(PriceTypeEnum priceType) {
    this.priceType = priceType;
  }

  public CreateServicePriceMetricRequestSchemaPriceMetric thresholds(List<CreateServicePriceMetricRequestSchemaPriceMetricThresholds> thresholds) {
    this.thresholds = thresholds;
    return this;
  }

  public CreateServicePriceMetricRequestSchemaPriceMetric addThresholdsItem(CreateServicePriceMetricRequestSchemaPriceMetricThresholds thresholdsItem) {
    if (this.thresholds == null) {
      this.thresholds = new ArrayList<>();
    }
    this.thresholds.add(thresholdsItem);
    return this;
  }

   /**
   * Get thresholds
   * @return thresholds
  **/
  @ApiModelProperty(value = "")
  public List<CreateServicePriceMetricRequestSchemaPriceMetricThresholds> getThresholds() {
    return thresholds;
  }

  public void setThresholds(List<CreateServicePriceMetricRequestSchemaPriceMetricThresholds> thresholds) {
    this.thresholds = thresholds;
  }

  public CreateServicePriceMetricRequestSchemaPriceMetric timeUnit(TimeUnitEnum timeUnit) {
    this.timeUnit = timeUnit;
    return this;
  }

   /**
   * Get timeUnit
   * @return timeUnit
  **/
  @ApiModelProperty(required = true, value = "")
  public TimeUnitEnum getTimeUnit() {
    return timeUnit;
  }

  public void setTimeUnit(TimeUnitEnum timeUnit) {
    this.timeUnit = timeUnit;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateServicePriceMetricRequestSchemaPriceMetric createServicePriceMetricRequestSchemaPriceMetric = (CreateServicePriceMetricRequestSchemaPriceMetric) o;
    return Objects.equals(this.active, createServicePriceMetricRequestSchemaPriceMetric.active) &&
        Objects.equals(this.desc, createServicePriceMetricRequestSchemaPriceMetric.desc) &&
        Objects.equals(this.metricTypeId, createServicePriceMetricRequestSchemaPriceMetric.metricTypeId) &&
        Objects.equals(this.name, createServicePriceMetricRequestSchemaPriceMetric.name) &&
        Objects.equals(this.price, createServicePriceMetricRequestSchemaPriceMetric.price) &&
        Objects.equals(this.priceListId, createServicePriceMetricRequestSchemaPriceMetric.priceListId) &&
        Objects.equals(this.priceType, createServicePriceMetricRequestSchemaPriceMetric.priceType) &&
        Objects.equals(this.thresholds, createServicePriceMetricRequestSchemaPriceMetric.thresholds) &&
        Objects.equals(this.timeUnit, createServicePriceMetricRequestSchemaPriceMetric.timeUnit);
  }

  @Override
  public int hashCode() {
    return Objects.hash(active, desc, metricTypeId, name, price, priceListId, priceType, thresholds, timeUnit);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateServicePriceMetricRequestSchemaPriceMetric {\n");
    
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    desc: ").append(toIndentedString(desc)).append("\n");
    sb.append("    metricTypeId: ").append(toIndentedString(metricTypeId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    priceListId: ").append(toIndentedString(priceListId)).append("\n");
    sb.append("    priceType: ").append(toIndentedString(priceType)).append("\n");
    sb.append("    thresholds: ").append(toIndentedString(thresholds)).append("\n");
    sb.append("    timeUnit: ").append(toIndentedString(timeUnit)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

