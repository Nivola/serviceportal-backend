/*-
 * ========================LICENSE_START=================================
 * Api CMP
 * %%
 * Copyright (C) 2022 CSI Piemonte
 * %%
 * SPDX-FileCopyrightText: Copyright 2022 | CSI Piemonte
 * SPDX-License-Identifier: EUPL-1.2
 * =========================LICENSE_END==================================
 */
/*
 * Beehive API
 * Beehive API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: nivola.engineering@csi.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.csi.nivola.nivolasp.integration.rest.model.service;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.annotations.ApiModelProperty;

/**
 * DescribeInstancesApiResponseSchemaDescribeInstancesResponsePlacement
 */

public class DescribeInstancesApiResponseSchemaDescribeInstancesResponsePlacement {
  @JsonProperty("affinity")
  private String affinity = null;

  @JsonProperty("availabilityZone")
  private String availabilityZone = null;

  @JsonProperty("groupName")
  private String groupName = null;

  @JsonProperty("hostId")
  private String hostId = null;

  @JsonProperty("spreadDomain")
  private String spreadDomain = null;

  @JsonProperty("tenancy")
  private String tenancy = null;

  public DescribeInstancesApiResponseSchemaDescribeInstancesResponsePlacement affinity(String affinity) {
    this.affinity = affinity;
    return this;
  }

   /**
   * affinity setting for the instance on the dedicated host
   * @return affinity
  **/
  @ApiModelProperty(example = "", value = "affinity setting for the instance on the dedicated host")
  public String getAffinity() {
    return affinity;
  }

  public void setAffinity(String affinity) {
    this.affinity = affinity;
  }

  public DescribeInstancesApiResponseSchemaDescribeInstancesResponsePlacement availabilityZone(String availabilityZone) {
    this.availabilityZone = availabilityZone;
    return this;
  }

   /**
   * availability zone of the instance id
   * @return availabilityZone
  **/
  @ApiModelProperty(example = "", value = "availability zone of the instance id")
  public String getAvailabilityZone() {
    return availabilityZone;
  }

  public void setAvailabilityZone(String availabilityZone) {
    this.availabilityZone = availabilityZone;
  }

  public DescribeInstancesApiResponseSchemaDescribeInstancesResponsePlacement groupName(String groupName) {
    this.groupName = groupName;
    return this;
  }

   /**
   * name of the placement group the instance
   * @return groupName
  **/
  @ApiModelProperty(example = "", value = "name of the placement group the instance")
  public String getGroupName() {
    return groupName;
  }

  public void setGroupName(String groupName) {
    this.groupName = groupName;
  }

  public DescribeInstancesApiResponseSchemaDescribeInstancesResponsePlacement hostId(String hostId) {
    this.hostId = hostId;
    return this;
  }

   /**
   * host id on which the instance reside
   * @return hostId
  **/
  @ApiModelProperty(example = "", value = "host id on which the instance reside")
  public String getHostId() {
    return hostId;
  }

  public void setHostId(String hostId) {
    this.hostId = hostId;
  }

  public DescribeInstancesApiResponseSchemaDescribeInstancesResponsePlacement spreadDomain(String spreadDomain) {
    this.spreadDomain = spreadDomain;
    return this;
  }

   /**
   * instance id
   * @return spreadDomain
  **/
  @ApiModelProperty(example = "", value = "instance id")
  public String getSpreadDomain() {
    return spreadDomain;
  }

  public void setSpreadDomain(String spreadDomain) {
    this.spreadDomain = spreadDomain;
  }

  public DescribeInstancesApiResponseSchemaDescribeInstancesResponsePlacement tenancy(String tenancy) {
    this.tenancy = tenancy;
    return this;
  }

   /**
   * tenancy of the instance (if the instance is running in a VPC)
   * @return tenancy
  **/
  @ApiModelProperty(example = "", value = "tenancy of the instance (if the instance is running in a VPC)")
  public String getTenancy() {
    return tenancy;
  }

  public void setTenancy(String tenancy) {
    this.tenancy = tenancy;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeInstancesApiResponseSchemaDescribeInstancesResponsePlacement describeInstancesApiResponseSchemaDescribeInstancesResponsePlacement = (DescribeInstancesApiResponseSchemaDescribeInstancesResponsePlacement) o;
    return Objects.equals(this.affinity, describeInstancesApiResponseSchemaDescribeInstancesResponsePlacement.affinity) &&
        Objects.equals(this.availabilityZone, describeInstancesApiResponseSchemaDescribeInstancesResponsePlacement.availabilityZone) &&
        Objects.equals(this.groupName, describeInstancesApiResponseSchemaDescribeInstancesResponsePlacement.groupName) &&
        Objects.equals(this.hostId, describeInstancesApiResponseSchemaDescribeInstancesResponsePlacement.hostId) &&
        Objects.equals(this.spreadDomain, describeInstancesApiResponseSchemaDescribeInstancesResponsePlacement.spreadDomain) &&
        Objects.equals(this.tenancy, describeInstancesApiResponseSchemaDescribeInstancesResponsePlacement.tenancy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(affinity, availabilityZone, groupName, hostId, spreadDomain, tenancy);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeInstancesApiResponseSchemaDescribeInstancesResponsePlacement {\n");
    
    sb.append("    affinity: ").append(toIndentedString(affinity)).append("\n");
    sb.append("    availabilityZone: ").append(toIndentedString(availabilityZone)).append("\n");
    sb.append("    groupName: ").append(toIndentedString(groupName)).append("\n");
    sb.append("    hostId: ").append(toIndentedString(hostId)).append("\n");
    sb.append("    spreadDomain: ").append(toIndentedString(spreadDomain)).append("\n");
    sb.append("    tenancy: ").append(toIndentedString(tenancy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

