/*-
 * ========================LICENSE_START=================================
 * Api CMP
 * %%
 * Copyright (C) 2022 CSI Piemonte
 * %%
 * SPDX-FileCopyrightText: Copyright 2022 | CSI Piemonte
 * SPDX-License-Identifier: EUPL-1.2
 * =========================LICENSE_END==================================
 */
/*
 * Beehive API
 * Beehive API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: nivola.engineering@csi.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.csi.nivola.nivolasp.integration.rest.model.service;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;

import io.swagger.annotations.ApiModelProperty;

/**
 * CreateDBInstancesApiV2RequestSchemaDbinstance
 */

public class CreateDBInstancesApiV2RequestSchemaDbinstance {
  @JsonProperty("AccountId")
  private String accountId = null;

  @JsonProperty("AllocatedStorage")
  private Integer allocatedStorage = null;

  @JsonProperty("CharacterSetName")
  private String characterSetName = "latin1";

  @JsonProperty("DBInstanceClass")
  private String dbInstanceClass = null;

  @JsonProperty("DBInstanceIdentifier")
  private String dbInstanceIdentifier = null;

  @JsonProperty("DBSubnetGroupName")
  private String dbSubnetGroupName = null;

  /**
   * engine of DB instance
   */
  public enum EngineEnum {
    MYSQL("mysql"),
    
    ORACLE("oracle"),
    
    POSTGRESQL("postgresql"),
    
    SQLSERVER("sqlserver");

    private String value;

    EngineEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static EngineEnum fromValue(String value) {
      for (EngineEnum b : EngineEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("Engine")
  private EngineEnum engine = null;

  @JsonProperty("EngineVersion")
  private String engineVersion = null;

  @JsonProperty("MasterUserPassword")
  private String masterUserPassword = null;

  @JsonProperty("MultiAZ")
  private Boolean multiAZ = false;

  @JsonProperty("Nvl_KeyName")
  private String nvlKeyName = null;

  @JsonProperty("Nvl_Mysql_Options")
  private Object nvlMysqlOptions = null;

  @JsonProperty("Nvl_Oracle_Options")
  private CreateDBInstancesApiV2RequestSchemaDbinstanceNvlOracleOptions nvlOracleOptions = null;

  @JsonProperty("Nvl_Postgresql_Options")
  private CreateDBInstancesApiV2RequestSchemaDbinstanceNvlPostgresqlOptions nvlPostgresqlOptions = null;

  @JsonProperty("Port")
  private String port = null;

  @JsonProperty("Tags")
  private List<CreateDBInstancesApiRequestSchemaDbinstanceTagN> tags = null;

  @JsonProperty("Timezone")
  private String timezone = "Europe/Rome";

  @JsonProperty("VpcSecurityGroupIds")
  private CreateDBInstancesApiV2RequestSchemaDbinstanceVpcSecurityGroupIds vpcSecurityGroupIds = null;

  public CreateDBInstancesApiV2RequestSchemaDbinstance accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * account id or uuid associated to compute zone
   * @return accountId
  **/
  @ApiModelProperty(example = "", required = true, value = "account id or uuid associated to compute zone")
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }

  public CreateDBInstancesApiV2RequestSchemaDbinstance allocatedStorage(Integer allocatedStorage) {
    this.allocatedStorage = allocatedStorage;
    return this;
  }

   /**
   * amount of storage (in GB) to allocate for the DB instance
   * @return allocatedStorage
  **/
  @ApiModelProperty(example = "30", value = "amount of storage (in GB) to allocate for the DB instance")
  public Integer getAllocatedStorage() {
    return allocatedStorage;
  }

  public void setAllocatedStorage(Integer allocatedStorage) {
    this.allocatedStorage = allocatedStorage;
  }

  public CreateDBInstancesApiV2RequestSchemaDbinstance characterSetName(String characterSetName) {
    this.characterSetName = characterSetName;
    return this;
  }

   /**
   * For supported engines, indicates that the DB instance should be associated with the specified CharacterSet.
   * @return characterSetName
  **/
  @ApiModelProperty(example = "", value = "For supported engines, indicates that the DB instance should be associated with the specified CharacterSet.")
  public String getCharacterSetName() {
    return characterSetName;
  }

  public void setCharacterSetName(String characterSetName) {
    this.characterSetName = characterSetName;
  }

  public CreateDBInstancesApiV2RequestSchemaDbinstance dbInstanceClass(String dbInstanceClass) {
    this.dbInstanceClass = dbInstanceClass;
    return this;
  }

   /**
   * service definition of the DB instance
   * @return dbInstanceClass
  **/
  @ApiModelProperty(example = "db.m1.small", required = true, value = "service definition of the DB instance")
  public String getDbInstanceClass() {
    return dbInstanceClass;
  }

  public void setDbInstanceClass(String dbInstanceClass) {
    this.dbInstanceClass = dbInstanceClass;
  }

  public CreateDBInstancesApiV2RequestSchemaDbinstance dbInstanceIdentifier(String dbInstanceIdentifier) {
    this.dbInstanceIdentifier = dbInstanceIdentifier;
    return this;
  }

   /**
   * The DB instance identifier
   * @return dbInstanceIdentifier
  **/
  @ApiModelProperty(example = "", required = true, value = "The DB instance identifier")
  public String getDbInstanceIdentifier() {
    return dbInstanceIdentifier;
  }

  public void setDbInstanceIdentifier(String dbInstanceIdentifier) {
    this.dbInstanceIdentifier = dbInstanceIdentifier;
  }

  public CreateDBInstancesApiV2RequestSchemaDbinstance dbSubnetGroupName(String dbSubnetGroupName) {
    this.dbSubnetGroupName = dbSubnetGroupName;
    return this;
  }

   /**
   * a DB vpc subnet to associate with DB instance
   * @return dbSubnetGroupName
  **/
  @ApiModelProperty(example = "", required = true, value = "a DB vpc subnet to associate with DB instance")
  public String getDbSubnetGroupName() {
    return dbSubnetGroupName;
  }

  public void setDbSubnetGroupName(String dbSubnetGroupName) {
    this.dbSubnetGroupName = dbSubnetGroupName;
  }

  public CreateDBInstancesApiV2RequestSchemaDbinstance engine(EngineEnum engine) {
    this.engine = engine;
    return this;
  }

   /**
   * engine of DB instance
   * @return engine
  **/
  @ApiModelProperty(example = "MySQL", required = true, value = "engine of DB instance")
  public EngineEnum getEngine() {
    return engine;
  }

  public void setEngine(EngineEnum engine) {
    this.engine = engine;
  }

  public CreateDBInstancesApiV2RequestSchemaDbinstance engineVersion(String engineVersion) {
    this.engineVersion = engineVersion;
    return this;
  }

   /**
   * engine version of DB instance
   * @return engineVersion
  **/
  @ApiModelProperty(example = "5.7", required = true, value = "engine version of DB instance")
  public String getEngineVersion() {
    return engineVersion;
  }

  public void setEngineVersion(String engineVersion) {
    this.engineVersion = engineVersion;
  }

  public CreateDBInstancesApiV2RequestSchemaDbinstance masterUserPassword(String masterUserPassword) {
    this.masterUserPassword = masterUserPassword;
    return this;
  }

   /**
   * Password for the master database user
   * @return masterUserPassword
  **/
  @ApiModelProperty(example = "", value = "Password for the master database user")
  public String getMasterUserPassword() {
    return masterUserPassword;
  }

  public void setMasterUserPassword(String masterUserPassword) {
    this.masterUserPassword = masterUserPassword;
  }

  public CreateDBInstancesApiV2RequestSchemaDbinstance multiAZ(Boolean multiAZ) {
    this.multiAZ = multiAZ;
    return this;
  }

   /**
   * A value that indicates whether the DB instance is a Multi-AZ deployment
   * @return multiAZ
  **/
  @ApiModelProperty(value = "A value that indicates whether the DB instance is a Multi-AZ deployment")
  public Boolean isMultiAZ() {
    return multiAZ;
  }

  public void setMultiAZ(Boolean multiAZ) {
    this.multiAZ = multiAZ;
  }

  public CreateDBInstancesApiV2RequestSchemaDbinstance nvlKeyName(String nvlKeyName) {
    this.nvlKeyName = nvlKeyName;
    return this;
  }

   /**
   * The name of the key pair
   * @return nvlKeyName
  **/
  @ApiModelProperty(example = "1ffd", value = "The name of the key pair")
  public String getNvlKeyName() {
    return nvlKeyName;
  }

  public void setNvlKeyName(String nvlKeyName) {
    this.nvlKeyName = nvlKeyName;
  }

  public CreateDBInstancesApiV2RequestSchemaDbinstance nvlMysqlOptions(Object nvlMysqlOptions) {
    this.nvlMysqlOptions = nvlMysqlOptions;
    return this;
  }

   /**
   * Configure Mysql database options
   * @return nvlMysqlOptions
  **/
  @ApiModelProperty(value = "Configure Mysql database options")
  public Object getNvlMysqlOptions() {
    return nvlMysqlOptions;
  }

  public void setNvlMysqlOptions(Object nvlMysqlOptions) {
    this.nvlMysqlOptions = nvlMysqlOptions;
  }

  public CreateDBInstancesApiV2RequestSchemaDbinstance nvlOracleOptions(CreateDBInstancesApiV2RequestSchemaDbinstanceNvlOracleOptions nvlOracleOptions) {
    this.nvlOracleOptions = nvlOracleOptions;
    return this;
  }

   /**
   * Get nvlOracleOptions
   * @return nvlOracleOptions
  **/
  @ApiModelProperty(value = "")
  public CreateDBInstancesApiV2RequestSchemaDbinstanceNvlOracleOptions getNvlOracleOptions() {
    return nvlOracleOptions;
  }

  public void setNvlOracleOptions(CreateDBInstancesApiV2RequestSchemaDbinstanceNvlOracleOptions nvlOracleOptions) {
    this.nvlOracleOptions = nvlOracleOptions;
  }

  public CreateDBInstancesApiV2RequestSchemaDbinstance nvlPostgresqlOptions(CreateDBInstancesApiV2RequestSchemaDbinstanceNvlPostgresqlOptions nvlPostgresqlOptions) {
    this.nvlPostgresqlOptions = nvlPostgresqlOptions;
    return this;
  }

   /**
   * Get nvlPostgresqlOptions
   * @return nvlPostgresqlOptions
  **/
  @ApiModelProperty(value = "")
  public CreateDBInstancesApiV2RequestSchemaDbinstanceNvlPostgresqlOptions getNvlPostgresqlOptions() {
    return nvlPostgresqlOptions;
  }

  public void setNvlPostgresqlOptions(CreateDBInstancesApiV2RequestSchemaDbinstanceNvlPostgresqlOptions nvlPostgresqlOptions) {
    this.nvlPostgresqlOptions = nvlPostgresqlOptions;
  }

  public CreateDBInstancesApiV2RequestSchemaDbinstance port(String port) {
    this.port = port;
    return this;
  }

   /**
   * The port number on which the database accepts connections. MySql: 3306, PostgreSQL: 5432, Oracle: 1522, SQL Server: 1433
   * @return port
  **/
  @ApiModelProperty(example = "", value = "The port number on which the database accepts connections. MySql: 3306, PostgreSQL: 5432, Oracle: 1522, SQL Server: 1433")
  public String getPort() {
    return port;
  }

  public void setPort(String port) {
    this.port = port;
  }

  public CreateDBInstancesApiV2RequestSchemaDbinstance tags(List<CreateDBInstancesApiRequestSchemaDbinstanceTagN> tags) {
    this.tags = tags;
    return this;
  }

  public CreateDBInstancesApiV2RequestSchemaDbinstance addTagsItem(CreateDBInstancesApiRequestSchemaDbinstanceTagN tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @ApiModelProperty(value = "")
  public List<CreateDBInstancesApiRequestSchemaDbinstanceTagN> getTags() {
    return tags;
  }

  public void setTags(List<CreateDBInstancesApiRequestSchemaDbinstanceTagN> tags) {
    this.tags = tags;
  }

  public CreateDBInstancesApiV2RequestSchemaDbinstance timezone(String timezone) {
    this.timezone = timezone;
    return this;
  }

   /**
   * characterSet of DB instance
   * @return timezone
  **/
  @ApiModelProperty(example = "Europe/Rome", value = "characterSet of DB instance")
  public String getTimezone() {
    return timezone;
  }

  public void setTimezone(String timezone) {
    this.timezone = timezone;
  }

  public CreateDBInstancesApiV2RequestSchemaDbinstance vpcSecurityGroupIds(CreateDBInstancesApiV2RequestSchemaDbinstanceVpcSecurityGroupIds vpcSecurityGroupIds) {
    this.vpcSecurityGroupIds = vpcSecurityGroupIds;
    return this;
  }

   /**
   * Get vpcSecurityGroupIds
   * @return vpcSecurityGroupIds
  **/
  @ApiModelProperty(value = "")
  public CreateDBInstancesApiV2RequestSchemaDbinstanceVpcSecurityGroupIds getVpcSecurityGroupIds() {
    return vpcSecurityGroupIds;
  }

  public void setVpcSecurityGroupIds(CreateDBInstancesApiV2RequestSchemaDbinstanceVpcSecurityGroupIds vpcSecurityGroupIds) {
    this.vpcSecurityGroupIds = vpcSecurityGroupIds;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateDBInstancesApiV2RequestSchemaDbinstance createDBInstancesApiV2RequestSchemaDbinstance = (CreateDBInstancesApiV2RequestSchemaDbinstance) o;
    return Objects.equals(this.accountId, createDBInstancesApiV2RequestSchemaDbinstance.accountId) &&
        Objects.equals(this.allocatedStorage, createDBInstancesApiV2RequestSchemaDbinstance.allocatedStorage) &&
        Objects.equals(this.characterSetName, createDBInstancesApiV2RequestSchemaDbinstance.characterSetName) &&
        Objects.equals(this.dbInstanceClass, createDBInstancesApiV2RequestSchemaDbinstance.dbInstanceClass) &&
        Objects.equals(this.dbInstanceIdentifier, createDBInstancesApiV2RequestSchemaDbinstance.dbInstanceIdentifier) &&
        Objects.equals(this.dbSubnetGroupName, createDBInstancesApiV2RequestSchemaDbinstance.dbSubnetGroupName) &&
        Objects.equals(this.engine, createDBInstancesApiV2RequestSchemaDbinstance.engine) &&
        Objects.equals(this.engineVersion, createDBInstancesApiV2RequestSchemaDbinstance.engineVersion) &&
        Objects.equals(this.masterUserPassword, createDBInstancesApiV2RequestSchemaDbinstance.masterUserPassword) &&
        Objects.equals(this.multiAZ, createDBInstancesApiV2RequestSchemaDbinstance.multiAZ) &&
        Objects.equals(this.nvlKeyName, createDBInstancesApiV2RequestSchemaDbinstance.nvlKeyName) &&
        Objects.equals(this.nvlMysqlOptions, createDBInstancesApiV2RequestSchemaDbinstance.nvlMysqlOptions) &&
        Objects.equals(this.nvlOracleOptions, createDBInstancesApiV2RequestSchemaDbinstance.nvlOracleOptions) &&
        Objects.equals(this.nvlPostgresqlOptions, createDBInstancesApiV2RequestSchemaDbinstance.nvlPostgresqlOptions) &&
        Objects.equals(this.port, createDBInstancesApiV2RequestSchemaDbinstance.port) &&
        Objects.equals(this.tags, createDBInstancesApiV2RequestSchemaDbinstance.tags) &&
        Objects.equals(this.timezone, createDBInstancesApiV2RequestSchemaDbinstance.timezone) &&
        Objects.equals(this.vpcSecurityGroupIds, createDBInstancesApiV2RequestSchemaDbinstance.vpcSecurityGroupIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, allocatedStorage, characterSetName, dbInstanceClass, dbInstanceIdentifier, dbSubnetGroupName, engine, engineVersion, masterUserPassword, multiAZ, nvlKeyName, nvlMysqlOptions, nvlOracleOptions, nvlPostgresqlOptions, port, tags, timezone, vpcSecurityGroupIds);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateDBInstancesApiV2RequestSchemaDbinstance {\n");
    
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    allocatedStorage: ").append(toIndentedString(allocatedStorage)).append("\n");
    sb.append("    characterSetName: ").append(toIndentedString(characterSetName)).append("\n");
    sb.append("    dbInstanceClass: ").append(toIndentedString(dbInstanceClass)).append("\n");
    sb.append("    dbInstanceIdentifier: ").append(toIndentedString(dbInstanceIdentifier)).append("\n");
    sb.append("    dbSubnetGroupName: ").append(toIndentedString(dbSubnetGroupName)).append("\n");
    sb.append("    engine: ").append(toIndentedString(engine)).append("\n");
    sb.append("    engineVersion: ").append(toIndentedString(engineVersion)).append("\n");
    sb.append("    masterUserPassword: ").append(toIndentedString(masterUserPassword)).append("\n");
    sb.append("    multiAZ: ").append(toIndentedString(multiAZ)).append("\n");
    sb.append("    nvlKeyName: ").append(toIndentedString(nvlKeyName)).append("\n");
    sb.append("    nvlMysqlOptions: ").append(toIndentedString(nvlMysqlOptions)).append("\n");
    sb.append("    nvlOracleOptions: ").append(toIndentedString(nvlOracleOptions)).append("\n");
    sb.append("    nvlPostgresqlOptions: ").append(toIndentedString(nvlPostgresqlOptions)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    vpcSecurityGroupIds: ").append(toIndentedString(vpcSecurityGroupIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

