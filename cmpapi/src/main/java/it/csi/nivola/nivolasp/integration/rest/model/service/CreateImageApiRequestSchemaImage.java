/*-
 * ========================LICENSE_START=================================
 * Api CMP
 * %%
 * Copyright (C) 2022 CSI Piemonte
 * %%
 * SPDX-FileCopyrightText: Copyright 2022 | CSI Piemonte
 * SPDX-License-Identifier: EUPL-1.2
 * =========================LICENSE_END==================================
 */
/*
 * Beehive API
 * Beehive API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: nivola.engineering@csi.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.csi.nivola.nivolasp.integration.rest.model.service;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.annotations.ApiModelProperty;

/**
 * CreateImageApiRequestSchemaImage
 */

public class CreateImageApiRequestSchemaImage {
  @JsonProperty("ImageDescription")
  private String imageDescription = null;

  @JsonProperty("ImageName")
  private String imageName = null;

  @JsonProperty("ImageType")
  private String imageType = "--DEFAULT--image";

  @JsonProperty("owner_id")
  private String ownerId = null;

  public CreateImageApiRequestSchemaImage imageDescription(String imageDescription) {
    this.imageDescription = imageDescription;
    return this;
  }

   /**
   * description of the image
   * @return imageDescription
  **/
  @ApiModelProperty(example = "", value = "description of the image")
  public String getImageDescription() {
    return imageDescription;
  }

  public void setImageDescription(String imageDescription) {
    this.imageDescription = imageDescription;
  }

  public CreateImageApiRequestSchemaImage imageName(String imageName) {
    this.imageName = imageName;
    return this;
  }

   /**
   * name of the image
   * @return imageName
  **/
  @ApiModelProperty(example = "", required = true, value = "name of the image")
  public String getImageName() {
    return imageName;
  }

  public void setImageName(String imageName) {
    this.imageName = imageName;
  }

  public CreateImageApiRequestSchemaImage imageType(String imageType) {
    this.imageType = imageType;
    return this;
  }

   /**
   * image template
   * @return imageType
  **/
  @ApiModelProperty(value = "image template")
  public String getImageType() {
    return imageType;
  }

  public void setImageType(String imageType) {
    this.imageType = imageType;
  }

  public CreateImageApiRequestSchemaImage ownerId(String ownerId) {
    this.ownerId = ownerId;
    return this;
  }

   /**
   * account id
   * @return ownerId
  **/
  @ApiModelProperty(example = "", required = true, value = "account id")
  public String getOwnerId() {
    return ownerId;
  }

  public void setOwnerId(String ownerId) {
    this.ownerId = ownerId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateImageApiRequestSchemaImage createImageApiRequestSchemaImage = (CreateImageApiRequestSchemaImage) o;
    return Objects.equals(this.imageDescription, createImageApiRequestSchemaImage.imageDescription) &&
        Objects.equals(this.imageName, createImageApiRequestSchemaImage.imageName) &&
        Objects.equals(this.imageType, createImageApiRequestSchemaImage.imageType) &&
        Objects.equals(this.ownerId, createImageApiRequestSchemaImage.ownerId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(imageDescription, imageName, imageType, ownerId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateImageApiRequestSchemaImage {\n");
    
    sb.append("    imageDescription: ").append(toIndentedString(imageDescription)).append("\n");
    sb.append("    imageName: ").append(toIndentedString(imageName)).append("\n");
    sb.append("    imageType: ").append(toIndentedString(imageType)).append("\n");
    sb.append("    ownerId: ").append(toIndentedString(ownerId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

