/*-
 * ========================LICENSE_START=================================
 * Api CMP
 * %%
 * Copyright (C) 2022 CSI Piemonte
 * %%
 * SPDX-FileCopyrightText: Copyright 2022 | CSI Piemonte
 * SPDX-License-Identifier: EUPL-1.2
 * =========================LICENSE_END==================================
 */
/*
 * Beehive API
 * Beehive API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: nivola.engineering@csi.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.csi.nivola.nivolasp.integration.rest.model.service;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;

import io.swagger.annotations.ApiModelProperty;

/**
 * DescribeImagesResponseSchemaDescribeImagesResponseImagesSet
 */

public class DescribeImagesResponseSchemaDescribeImagesResponseImagesSet {
  /**
   * architecture of the image
   */
  public enum ArchitectureEnum {
    I386("i386"),
    
    X86_64("x86_64");

    private String value;

    ArchitectureEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ArchitectureEnum fromValue(String value) {
      for (ArchitectureEnum b : ArchitectureEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("architecture")
  private ArchitectureEnum architecture = null;

  @JsonProperty("blockDeviceMapping")
  private List<DescribeImagesResponseSchemaDescribeImagesResponseBlockDeviceMapping> blockDeviceMapping = null;

  @JsonProperty("creationDate")
  private LocalDateTime creationDate = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("enaSupport")
  private Boolean enaSupport = null;

  @JsonProperty("hypervisor")
  private String hypervisor = null;

  @JsonProperty("imageId")
  private String imageId = null;

  @JsonProperty("imageLocation")
  private String imageLocation = null;

  @JsonProperty("imageOwnerAlias")
  private String imageOwnerAlias = null;

  @JsonProperty("imageOwnerId")
  private String imageOwnerId = null;

  /**
   * state of image
   */
  public enum ImageStateEnum {
    AVAILABLE("available"),
    
    DEREGISTERED("deregistered"),
    
    ERROR("error"),
    
    PENDING("pending"),
    
    TRANSIENT("transient"),
    
    UNKNOWN("unknown");

    private String value;

    ImageStateEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ImageStateEnum fromValue(String value) {
      for (ImageStateEnum b : ImageStateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("imageState")
  private ImageStateEnum imageState = null;

  /**
   * type of image
   */
  public enum ImageTypeEnum {
    MACHINE("machine"),
    
    KERNEL("kernel"),
    
    RAMDISK("ramdisk");

    private String value;

    ImageTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ImageTypeEnum fromValue(String value) {
      for (ImageTypeEnum b : ImageTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("imageType")
  private ImageTypeEnum imageType = null;

  @JsonProperty("isPublic")
  private Boolean isPublic = null;

  @JsonProperty("kernelId")
  private String kernelId = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("nvl-minDiskSize")
  private Integer nvlMinDiskSize = null;

  @JsonProperty("nvl-resourceId")
  private String nvlResourceId = null;

  @JsonProperty("platform")
  private String platform = null;

  @JsonProperty("productCodes")
  private List<DescribeImagesResponseSchemaDescribeImagesResponseProductCodes> productCodes = null;

  @JsonProperty("ramdiskId")
  private String ramdiskId = null;

  @JsonProperty("rootDeviceName")
  private String rootDeviceName = null;

  @JsonProperty("rootDeviceType")
  private String rootDeviceType = null;

  @JsonProperty("sriovNetSupport")
  private String sriovNetSupport = null;

  @JsonProperty("stateReason")
  private DescribeComputeApiResponseSchemaDescribeComputeResponseStateReason stateReason = null;

  @JsonProperty("tagSet")
  private List<DescribeImagesResponseSchemaDescribeImagesResponseTagSet> tagSet = null;

  @JsonProperty("virtualizationType")
  private String virtualizationType = null;

  public DescribeImagesResponseSchemaDescribeImagesResponseImagesSet architecture(ArchitectureEnum architecture) {
    this.architecture = architecture;
    return this;
  }

   /**
   * architecture of the image
   * @return architecture
  **/
  @ApiModelProperty(example = "", value = "architecture of the image")
  public ArchitectureEnum getArchitecture() {
    return architecture;
  }

  public void setArchitecture(ArchitectureEnum architecture) {
    this.architecture = architecture;
  }

  public DescribeImagesResponseSchemaDescribeImagesResponseImagesSet blockDeviceMapping(List<DescribeImagesResponseSchemaDescribeImagesResponseBlockDeviceMapping> blockDeviceMapping) {
    this.blockDeviceMapping = blockDeviceMapping;
    return this;
  }

  public DescribeImagesResponseSchemaDescribeImagesResponseImagesSet addBlockDeviceMappingItem(DescribeImagesResponseSchemaDescribeImagesResponseBlockDeviceMapping blockDeviceMappingItem) {
    if (this.blockDeviceMapping == null) {
      this.blockDeviceMapping = new ArrayList<>();
    }
    this.blockDeviceMapping.add(blockDeviceMappingItem);
    return this;
  }

   /**
   * block device mapping
   * @return blockDeviceMapping
  **/
  @ApiModelProperty(value = "block device mapping")
  public List<DescribeImagesResponseSchemaDescribeImagesResponseBlockDeviceMapping> getBlockDeviceMapping() {
    return blockDeviceMapping;
  }

  public void setBlockDeviceMapping(List<DescribeImagesResponseSchemaDescribeImagesResponseBlockDeviceMapping> blockDeviceMapping) {
    this.blockDeviceMapping = blockDeviceMapping;
  }

  public DescribeImagesResponseSchemaDescribeImagesResponseImagesSet creationDate(LocalDateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

   /**
   * image date creation
   * @return creationDate
  **/
  @ApiModelProperty(example = "", value = "image date creation")
  public LocalDateTime getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(LocalDateTime creationDate) {
    this.creationDate = creationDate;
  }

  public DescribeImagesResponseSchemaDescribeImagesResponseImagesSet description(String description) {
    this.description = description;
    return this;
  }

   /**
   * image description
   * @return description
  **/
  @ApiModelProperty(example = "", value = "image description")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public DescribeImagesResponseSchemaDescribeImagesResponseImagesSet enaSupport(Boolean enaSupport) {
    this.enaSupport = enaSupport;
    return this;
  }

   /**
   * indicates whether the ENA enhanced networking is enabled
   * @return enaSupport
  **/
  @ApiModelProperty(value = "indicates whether the ENA enhanced networking is enabled")
  public Boolean isEnaSupport() {
    return enaSupport;
  }

  public void setEnaSupport(Boolean enaSupport) {
    this.enaSupport = enaSupport;
  }

  public DescribeImagesResponseSchemaDescribeImagesResponseImagesSet hypervisor(String hypervisor) {
    this.hypervisor = hypervisor;
    return this;
  }

   /**
   * type of the hypervisor
   * @return hypervisor
  **/
  @ApiModelProperty(example = "openstack,vsphere", value = "type of the hypervisor")
  public String getHypervisor() {
    return hypervisor;
  }

  public void setHypervisor(String hypervisor) {
    this.hypervisor = hypervisor;
  }

  public DescribeImagesResponseSchemaDescribeImagesResponseImagesSet imageId(String imageId) {
    this.imageId = imageId;
    return this;
  }

   /**
   * image instance id
   * @return imageId
  **/
  @ApiModelProperty(example = "", value = "image instance id")
  public String getImageId() {
    return imageId;
  }

  public void setImageId(String imageId) {
    this.imageId = imageId;
  }

  public DescribeImagesResponseSchemaDescribeImagesResponseImagesSet imageLocation(String imageLocation) {
    this.imageLocation = imageLocation;
    return this;
  }

   /**
   * image location
   * @return imageLocation
  **/
  @ApiModelProperty(example = "", value = "image location")
  public String getImageLocation() {
    return imageLocation;
  }

  public void setImageLocation(String imageLocation) {
    this.imageLocation = imageLocation;
  }

  public DescribeImagesResponseSchemaDescribeImagesResponseImagesSet imageOwnerAlias(String imageOwnerAlias) {
    this.imageOwnerAlias = imageOwnerAlias;
    return this;
  }

   /**
   * account alias of the AMI owner
   * @return imageOwnerAlias
  **/
  @ApiModelProperty(example = "", value = "account alias of the AMI owner")
  public String getImageOwnerAlias() {
    return imageOwnerAlias;
  }

  public void setImageOwnerAlias(String imageOwnerAlias) {
    this.imageOwnerAlias = imageOwnerAlias;
  }

  public DescribeImagesResponseSchemaDescribeImagesResponseImagesSet imageOwnerId(String imageOwnerId) {
    this.imageOwnerId = imageOwnerId;
    return this;
  }

   /**
   * account id of the image owner
   * @return imageOwnerId
  **/
  @ApiModelProperty(example = "", value = "account id of the image owner")
  public String getImageOwnerId() {
    return imageOwnerId;
  }

  public void setImageOwnerId(String imageOwnerId) {
    this.imageOwnerId = imageOwnerId;
  }

  public DescribeImagesResponseSchemaDescribeImagesResponseImagesSet imageState(ImageStateEnum imageState) {
    this.imageState = imageState;
    return this;
  }

   /**
   * state of image
   * @return imageState
  **/
  @ApiModelProperty(example = "", value = "state of image")
  public ImageStateEnum getImageState() {
    return imageState;
  }

  public void setImageState(ImageStateEnum imageState) {
    this.imageState = imageState;
  }

  public DescribeImagesResponseSchemaDescribeImagesResponseImagesSet imageType(ImageTypeEnum imageType) {
    this.imageType = imageType;
    return this;
  }

   /**
   * type of image
   * @return imageType
  **/
  @ApiModelProperty(example = "", value = "type of image")
  public ImageTypeEnum getImageType() {
    return imageType;
  }

  public void setImageType(ImageTypeEnum imageType) {
    this.imageType = imageType;
  }

  public DescribeImagesResponseSchemaDescribeImagesResponseImagesSet isPublic(Boolean isPublic) {
    this.isPublic = isPublic;
    return this;
  }

   /**
   * indicates whether the image is public
   * @return isPublic
  **/
  @ApiModelProperty(value = "indicates whether the image is public")
  public Boolean isIsPublic() {
    return isPublic;
  }

  public void setIsPublic(Boolean isPublic) {
    this.isPublic = isPublic;
  }

  public DescribeImagesResponseSchemaDescribeImagesResponseImagesSet kernelId(String kernelId) {
    this.kernelId = kernelId;
    return this;
  }

   /**
   * kernel id of the image
   * @return kernelId
  **/
  @ApiModelProperty(example = "", value = "kernel id of the image")
  public String getKernelId() {
    return kernelId;
  }

  public void setKernelId(String kernelId) {
    this.kernelId = kernelId;
  }

  public DescribeImagesResponseSchemaDescribeImagesResponseImagesSet name(String name) {
    this.name = name;
    return this;
  }

   /**
   * image name
   * @return name
  **/
  @ApiModelProperty(example = "", value = "image name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public DescribeImagesResponseSchemaDescribeImagesResponseImagesSet nvlMinDiskSize(Integer nvlMinDiskSize) {
    this.nvlMinDiskSize = nvlMinDiskSize;
    return this;
  }

   /**
   * minimum image disk size
   * @return nvlMinDiskSize
  **/
  @ApiModelProperty(value = "minimum image disk size")
  public Integer getNvlMinDiskSize() {
    return nvlMinDiskSize;
  }

  public void setNvlMinDiskSize(Integer nvlMinDiskSize) {
    this.nvlMinDiskSize = nvlMinDiskSize;
  }

  public DescribeImagesResponseSchemaDescribeImagesResponseImagesSet nvlResourceId(String nvlResourceId) {
    this.nvlResourceId = nvlResourceId;
    return this;
  }

   /**
   * resource id
   * @return nvlResourceId
  **/
  @ApiModelProperty(example = "", value = "resource id")
  public String getNvlResourceId() {
    return nvlResourceId;
  }

  public void setNvlResourceId(String nvlResourceId) {
    this.nvlResourceId = nvlResourceId;
  }

  public DescribeImagesResponseSchemaDescribeImagesResponseImagesSet platform(String platform) {
    this.platform = platform;
    return this;
  }

   /**
   * platform
   * @return platform
  **/
  @ApiModelProperty(example = "", value = "platform")
  public String getPlatform() {
    return platform;
  }

  public void setPlatform(String platform) {
    this.platform = platform;
  }

  public DescribeImagesResponseSchemaDescribeImagesResponseImagesSet productCodes(List<DescribeImagesResponseSchemaDescribeImagesResponseProductCodes> productCodes) {
    this.productCodes = productCodes;
    return this;
  }

  public DescribeImagesResponseSchemaDescribeImagesResponseImagesSet addProductCodesItem(DescribeImagesResponseSchemaDescribeImagesResponseProductCodes productCodesItem) {
    if (this.productCodes == null) {
      this.productCodes = new ArrayList<>();
    }
    this.productCodes.add(productCodesItem);
    return this;
  }

   /**
   * array of ProductCode objects
   * @return productCodes
  **/
  @ApiModelProperty(value = "array of ProductCode objects")
  public List<DescribeImagesResponseSchemaDescribeImagesResponseProductCodes> getProductCodes() {
    return productCodes;
  }

  public void setProductCodes(List<DescribeImagesResponseSchemaDescribeImagesResponseProductCodes> productCodes) {
    this.productCodes = productCodes;
  }

  public DescribeImagesResponseSchemaDescribeImagesResponseImagesSet ramdiskId(String ramdiskId) {
    this.ramdiskId = ramdiskId;
    return this;
  }

   /**
   * ram disk for the image
   * @return ramdiskId
  **/
  @ApiModelProperty(example = "", value = "ram disk for the image")
  public String getRamdiskId() {
    return ramdiskId;
  }

  public void setRamdiskId(String ramdiskId) {
    this.ramdiskId = ramdiskId;
  }

  public DescribeImagesResponseSchemaDescribeImagesResponseImagesSet rootDeviceName(String rootDeviceName) {
    this.rootDeviceName = rootDeviceName;
    return this;
  }

   /**
   * type of root device used by the AMI
   * @return rootDeviceName
  **/
  @ApiModelProperty(example = "", value = "type of root device used by the AMI")
  public String getRootDeviceName() {
    return rootDeviceName;
  }

  public void setRootDeviceName(String rootDeviceName) {
    this.rootDeviceName = rootDeviceName;
  }

  public DescribeImagesResponseSchemaDescribeImagesResponseImagesSet rootDeviceType(String rootDeviceType) {
    this.rootDeviceType = rootDeviceType;
    return this;
  }

   /**
   * rtype of root device used by the AMI
   * @return rootDeviceType
  **/
  @ApiModelProperty(example = "", value = "rtype of root device used by the AMI")
  public String getRootDeviceType() {
    return rootDeviceType;
  }

  public void setRootDeviceType(String rootDeviceType) {
    this.rootDeviceType = rootDeviceType;
  }

  public DescribeImagesResponseSchemaDescribeImagesResponseImagesSet sriovNetSupport(String sriovNetSupport) {
    this.sriovNetSupport = sriovNetSupport;
    return this;
  }

   /**
   * indicates whether the Intel 82599 Virtual enhanced networking is enabled
   * @return sriovNetSupport
  **/
  @ApiModelProperty(example = "", value = "indicates whether the Intel 82599 Virtual enhanced networking is enabled")
  public String getSriovNetSupport() {
    return sriovNetSupport;
  }

  public void setSriovNetSupport(String sriovNetSupport) {
    this.sriovNetSupport = sriovNetSupport;
  }

  public DescribeImagesResponseSchemaDescribeImagesResponseImagesSet stateReason(DescribeComputeApiResponseSchemaDescribeComputeResponseStateReason stateReason) {
    this.stateReason = stateReason;
    return this;
  }

   /**
   * Get stateReason
   * @return stateReason
  **/
  @ApiModelProperty(value = "")
  public DescribeComputeApiResponseSchemaDescribeComputeResponseStateReason getStateReason() {
    return stateReason;
  }

  public void setStateReason(DescribeComputeApiResponseSchemaDescribeComputeResponseStateReason stateReason) {
    this.stateReason = stateReason;
  }

  public DescribeImagesResponseSchemaDescribeImagesResponseImagesSet tagSet(List<DescribeImagesResponseSchemaDescribeImagesResponseTagSet> tagSet) {
    this.tagSet = tagSet;
    return this;
  }

  public DescribeImagesResponseSchemaDescribeImagesResponseImagesSet addTagSetItem(DescribeImagesResponseSchemaDescribeImagesResponseTagSet tagSetItem) {
    if (this.tagSet == null) {
      this.tagSet = new ArrayList<>();
    }
    this.tagSet.add(tagSetItem);
    return this;
  }

   /**
   * Get tagSet
   * @return tagSet
  **/
  @ApiModelProperty(value = "")
  public List<DescribeImagesResponseSchemaDescribeImagesResponseTagSet> getTagSet() {
    return tagSet;
  }

  public void setTagSet(List<DescribeImagesResponseSchemaDescribeImagesResponseTagSet> tagSet) {
    this.tagSet = tagSet;
  }

  public DescribeImagesResponseSchemaDescribeImagesResponseImagesSet virtualizationType(String virtualizationType) {
    this.virtualizationType = virtualizationType;
    return this;
  }

   /**
   * virtualization type of the instance
   * @return virtualizationType
  **/
  @ApiModelProperty(example = "hvm | paravirtual", value = "virtualization type of the instance")
  public String getVirtualizationType() {
    return virtualizationType;
  }

  public void setVirtualizationType(String virtualizationType) {
    this.virtualizationType = virtualizationType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeImagesResponseSchemaDescribeImagesResponseImagesSet describeImagesResponseSchemaDescribeImagesResponseImagesSet = (DescribeImagesResponseSchemaDescribeImagesResponseImagesSet) o;
    return Objects.equals(this.architecture, describeImagesResponseSchemaDescribeImagesResponseImagesSet.architecture) &&
        Objects.equals(this.blockDeviceMapping, describeImagesResponseSchemaDescribeImagesResponseImagesSet.blockDeviceMapping) &&
        Objects.equals(this.creationDate, describeImagesResponseSchemaDescribeImagesResponseImagesSet.creationDate) &&
        Objects.equals(this.description, describeImagesResponseSchemaDescribeImagesResponseImagesSet.description) &&
        Objects.equals(this.enaSupport, describeImagesResponseSchemaDescribeImagesResponseImagesSet.enaSupport) &&
        Objects.equals(this.hypervisor, describeImagesResponseSchemaDescribeImagesResponseImagesSet.hypervisor) &&
        Objects.equals(this.imageId, describeImagesResponseSchemaDescribeImagesResponseImagesSet.imageId) &&
        Objects.equals(this.imageLocation, describeImagesResponseSchemaDescribeImagesResponseImagesSet.imageLocation) &&
        Objects.equals(this.imageOwnerAlias, describeImagesResponseSchemaDescribeImagesResponseImagesSet.imageOwnerAlias) &&
        Objects.equals(this.imageOwnerId, describeImagesResponseSchemaDescribeImagesResponseImagesSet.imageOwnerId) &&
        Objects.equals(this.imageState, describeImagesResponseSchemaDescribeImagesResponseImagesSet.imageState) &&
        Objects.equals(this.imageType, describeImagesResponseSchemaDescribeImagesResponseImagesSet.imageType) &&
        Objects.equals(this.isPublic, describeImagesResponseSchemaDescribeImagesResponseImagesSet.isPublic) &&
        Objects.equals(this.kernelId, describeImagesResponseSchemaDescribeImagesResponseImagesSet.kernelId) &&
        Objects.equals(this.name, describeImagesResponseSchemaDescribeImagesResponseImagesSet.name) &&
        Objects.equals(this.nvlMinDiskSize, describeImagesResponseSchemaDescribeImagesResponseImagesSet.nvlMinDiskSize) &&
        Objects.equals(this.nvlResourceId, describeImagesResponseSchemaDescribeImagesResponseImagesSet.nvlResourceId) &&
        Objects.equals(this.platform, describeImagesResponseSchemaDescribeImagesResponseImagesSet.platform) &&
        Objects.equals(this.productCodes, describeImagesResponseSchemaDescribeImagesResponseImagesSet.productCodes) &&
        Objects.equals(this.ramdiskId, describeImagesResponseSchemaDescribeImagesResponseImagesSet.ramdiskId) &&
        Objects.equals(this.rootDeviceName, describeImagesResponseSchemaDescribeImagesResponseImagesSet.rootDeviceName) &&
        Objects.equals(this.rootDeviceType, describeImagesResponseSchemaDescribeImagesResponseImagesSet.rootDeviceType) &&
        Objects.equals(this.sriovNetSupport, describeImagesResponseSchemaDescribeImagesResponseImagesSet.sriovNetSupport) &&
        Objects.equals(this.stateReason, describeImagesResponseSchemaDescribeImagesResponseImagesSet.stateReason) &&
        Objects.equals(this.tagSet, describeImagesResponseSchemaDescribeImagesResponseImagesSet.tagSet) &&
        Objects.equals(this.virtualizationType, describeImagesResponseSchemaDescribeImagesResponseImagesSet.virtualizationType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(architecture, blockDeviceMapping, creationDate, description, enaSupport, hypervisor, imageId, imageLocation, imageOwnerAlias, imageOwnerId, imageState, imageType, isPublic, kernelId, name, nvlMinDiskSize, nvlResourceId, platform, productCodes, ramdiskId, rootDeviceName, rootDeviceType, sriovNetSupport, stateReason, tagSet, virtualizationType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeImagesResponseSchemaDescribeImagesResponseImagesSet {\n");
    
    sb.append("    architecture: ").append(toIndentedString(architecture)).append("\n");
    sb.append("    blockDeviceMapping: ").append(toIndentedString(blockDeviceMapping)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    enaSupport: ").append(toIndentedString(enaSupport)).append("\n");
    sb.append("    hypervisor: ").append(toIndentedString(hypervisor)).append("\n");
    sb.append("    imageId: ").append(toIndentedString(imageId)).append("\n");
    sb.append("    imageLocation: ").append(toIndentedString(imageLocation)).append("\n");
    sb.append("    imageOwnerAlias: ").append(toIndentedString(imageOwnerAlias)).append("\n");
    sb.append("    imageOwnerId: ").append(toIndentedString(imageOwnerId)).append("\n");
    sb.append("    imageState: ").append(toIndentedString(imageState)).append("\n");
    sb.append("    imageType: ").append(toIndentedString(imageType)).append("\n");
    sb.append("    isPublic: ").append(toIndentedString(isPublic)).append("\n");
    sb.append("    kernelId: ").append(toIndentedString(kernelId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nvlMinDiskSize: ").append(toIndentedString(nvlMinDiskSize)).append("\n");
    sb.append("    nvlResourceId: ").append(toIndentedString(nvlResourceId)).append("\n");
    sb.append("    platform: ").append(toIndentedString(platform)).append("\n");
    sb.append("    productCodes: ").append(toIndentedString(productCodes)).append("\n");
    sb.append("    ramdiskId: ").append(toIndentedString(ramdiskId)).append("\n");
    sb.append("    rootDeviceName: ").append(toIndentedString(rootDeviceName)).append("\n");
    sb.append("    rootDeviceType: ").append(toIndentedString(rootDeviceType)).append("\n");
    sb.append("    sriovNetSupport: ").append(toIndentedString(sriovNetSupport)).append("\n");
    sb.append("    stateReason: ").append(toIndentedString(stateReason)).append("\n");
    sb.append("    tagSet: ").append(toIndentedString(tagSet)).append("\n");
    sb.append("    virtualizationType: ").append(toIndentedString(virtualizationType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

