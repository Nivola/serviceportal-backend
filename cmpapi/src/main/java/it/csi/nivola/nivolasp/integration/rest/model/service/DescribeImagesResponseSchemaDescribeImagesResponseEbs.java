/*-
 * ========================LICENSE_START=================================
 * Api CMP
 * %%
 * Copyright (C) 2022 CSI Piemonte
 * %%
 * SPDX-FileCopyrightText: Copyright 2022 | CSI Piemonte
 * SPDX-License-Identifier: EUPL-1.2
 * =========================LICENSE_END==================================
 */
/*
 * Beehive API
 * Beehive API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: nivola.engineering@csi.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.csi.nivola.nivolasp.integration.rest.model.service;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;

import io.swagger.annotations.ApiModelProperty;

/**
 * DescribeImagesResponseSchemaDescribeImagesResponseEbs
 */

public class DescribeImagesResponseSchemaDescribeImagesResponseEbs {
  @JsonProperty("KmsKeyId")
  private String kmsKeyId = null;

  @JsonProperty("deleteOnTermination")
  private Boolean deleteOnTermination = null;

  @JsonProperty("encrypted")
  private Boolean encrypted = null;

  @JsonProperty("iops")
  private String iops = null;

  @JsonProperty("snapshotId")
  private String snapshotId = null;

  @JsonProperty("volumeSize")
  private Integer volumeSize = null;

  /**
   * type of the volume
   */
  public enum VolumeTypeEnum {
    GP2("gp2"),
    
    IO1("io1"),
    
    ST1("st1"),
    
    SC1("sc1"),
    
    STANDARD("standard");

    private String value;

    VolumeTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static VolumeTypeEnum fromValue(String value) {
      for (VolumeTypeEnum b : VolumeTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("volumeType")
  private VolumeTypeEnum volumeType = null;

  public DescribeImagesResponseSchemaDescribeImagesResponseEbs kmsKeyId(String kmsKeyId) {
    this.kmsKeyId = kmsKeyId;
    return this;
  }

   /**
   *  key id for a user-managed CMK under which the volume is encrypted.
   * @return kmsKeyId
  **/
  @ApiModelProperty(example = "", value = " key id for a user-managed CMK under which the volume is encrypted.")
  public String getKmsKeyId() {
    return kmsKeyId;
  }

  public void setKmsKeyId(String kmsKeyId) {
    this.kmsKeyId = kmsKeyId;
  }

  public DescribeImagesResponseSchemaDescribeImagesResponseEbs deleteOnTermination(Boolean deleteOnTermination) {
    this.deleteOnTermination = deleteOnTermination;
    return this;
  }

   /**
   * boolean to know if the volume is deleted on instance termination
   * @return deleteOnTermination
  **/
  @ApiModelProperty(value = "boolean to know if the volume is deleted on instance termination")
  public Boolean isDeleteOnTermination() {
    return deleteOnTermination;
  }

  public void setDeleteOnTermination(Boolean deleteOnTermination) {
    this.deleteOnTermination = deleteOnTermination;
  }

  public DescribeImagesResponseSchemaDescribeImagesResponseEbs encrypted(Boolean encrypted) {
    this.encrypted = encrypted;
    return this;
  }

   /**
   * indicates whether the volume is encrypted
   * @return encrypted
  **/
  @ApiModelProperty(value = "indicates whether the volume is encrypted")
  public Boolean isEncrypted() {
    return encrypted;
  }

  public void setEncrypted(Boolean encrypted) {
    this.encrypted = encrypted;
  }

  public DescribeImagesResponseSchemaDescribeImagesResponseEbs iops(String iops) {
    this.iops = iops;
    return this;
  }

   /**
   * number of I/O operations per second (IOPS) that the volume support
   * @return iops
  **/
  @ApiModelProperty(example = "", value = "number of I/O operations per second (IOPS) that the volume support")
  public String getIops() {
    return iops;
  }

  public void setIops(String iops) {
    this.iops = iops;
  }

  public DescribeImagesResponseSchemaDescribeImagesResponseEbs snapshotId(String snapshotId) {
    this.snapshotId = snapshotId;
    return this;
  }

   /**
   * ID of the snapshot.
   * @return snapshotId
  **/
  @ApiModelProperty(example = "", value = "ID of the snapshot.")
  public String getSnapshotId() {
    return snapshotId;
  }

  public void setSnapshotId(String snapshotId) {
    this.snapshotId = snapshotId;
  }

  public DescribeImagesResponseSchemaDescribeImagesResponseEbs volumeSize(Integer volumeSize) {
    this.volumeSize = volumeSize;
    return this;
  }

   /**
   * size of the volume, in GiB
   * @return volumeSize
  **/
  @ApiModelProperty(example = "", value = "size of the volume, in GiB")
  public Integer getVolumeSize() {
    return volumeSize;
  }

  public void setVolumeSize(Integer volumeSize) {
    this.volumeSize = volumeSize;
  }

  public DescribeImagesResponseSchemaDescribeImagesResponseEbs volumeType(VolumeTypeEnum volumeType) {
    this.volumeType = volumeType;
    return this;
  }

   /**
   * type of the volume
   * @return volumeType
  **/
  @ApiModelProperty(example = "", value = "type of the volume")
  public VolumeTypeEnum getVolumeType() {
    return volumeType;
  }

  public void setVolumeType(VolumeTypeEnum volumeType) {
    this.volumeType = volumeType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeImagesResponseSchemaDescribeImagesResponseEbs describeImagesResponseSchemaDescribeImagesResponseEbs = (DescribeImagesResponseSchemaDescribeImagesResponseEbs) o;
    return Objects.equals(this.kmsKeyId, describeImagesResponseSchemaDescribeImagesResponseEbs.kmsKeyId) &&
        Objects.equals(this.deleteOnTermination, describeImagesResponseSchemaDescribeImagesResponseEbs.deleteOnTermination) &&
        Objects.equals(this.encrypted, describeImagesResponseSchemaDescribeImagesResponseEbs.encrypted) &&
        Objects.equals(this.iops, describeImagesResponseSchemaDescribeImagesResponseEbs.iops) &&
        Objects.equals(this.snapshotId, describeImagesResponseSchemaDescribeImagesResponseEbs.snapshotId) &&
        Objects.equals(this.volumeSize, describeImagesResponseSchemaDescribeImagesResponseEbs.volumeSize) &&
        Objects.equals(this.volumeType, describeImagesResponseSchemaDescribeImagesResponseEbs.volumeType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(kmsKeyId, deleteOnTermination, encrypted, iops, snapshotId, volumeSize, volumeType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeImagesResponseSchemaDescribeImagesResponseEbs {\n");
    
    sb.append("    kmsKeyId: ").append(toIndentedString(kmsKeyId)).append("\n");
    sb.append("    deleteOnTermination: ").append(toIndentedString(deleteOnTermination)).append("\n");
    sb.append("    encrypted: ").append(toIndentedString(encrypted)).append("\n");
    sb.append("    iops: ").append(toIndentedString(iops)).append("\n");
    sb.append("    snapshotId: ").append(toIndentedString(snapshotId)).append("\n");
    sb.append("    volumeSize: ").append(toIndentedString(volumeSize)).append("\n");
    sb.append("    volumeType: ").append(toIndentedString(volumeType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

