/*-
 * ========================LICENSE_START=================================
 * Api CMP
 * %%
 * Copyright (C) 2022 CSI Piemonte
 * %%
 * SPDX-FileCopyrightText: Copyright 2022 | CSI Piemonte
 * SPDX-License-Identifier: EUPL-1.2
 * =========================LICENSE_END==================================
 */
/*
 * Beehive API
 * Beehive API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: nivola.engineering@csi.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.csi.nivola.nivolasp.integration.rest.model.service;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;

import io.swagger.annotations.ApiModelProperty;

/**
 * GetTasksRequestSchema
 */

public class GetTasksRequestSchema {
  @JsonProperty("elapsed")
  private Integer elapsed = null;

  @JsonProperty("entity_class")
  private String entityClass = null;

  /**
   * entities list order field. Ex. id, uuid, name
   */
  public enum FieldEnum {
    ID("id"),
    
    UUID("uuid"),
    
    OBJID("objid"),
    
    NAME("name");

    private String value;

    FieldEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static FieldEnum fromValue(String value) {
      for (FieldEnum b : FieldEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("field")
  private FieldEnum field = FieldEnum.ID;

  @JsonProperty("objid")
  private String objid = null;

  /**
   * entities list order: ASC or DESC
   */
  public enum OrderEnum {
    ASC("ASC"),
    
    ASC_2("asc"),
    
    DESC("DESC"),
    
    DESC_2("desc");

    private String value;

    OrderEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static OrderEnum fromValue(String value) {
      for (OrderEnum b : OrderEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("order")
  private OrderEnum order = OrderEnum.DESC;

  @JsonProperty("page")
  private Integer page = null;

  @JsonProperty("size")
  private Integer size = null;

  /**
   * Used to filter key type
   */
  public enum TtypeEnum {
    JOB("JOB"),
    
    JOBTASK("JOBTASK"),
    
    TASK("TASK");

    private String value;

    TtypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TtypeEnum fromValue(String value) {
      for (TtypeEnum b : TtypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("ttype")
  private TtypeEnum ttype = null;

  public GetTasksRequestSchema elapsed(Integer elapsed) {
    this.elapsed = elapsed;
    return this;
  }

   /**
   * Used to filter key not older than
   * @return elapsed
  **/
  @ApiModelProperty(example = "60", value = "Used to filter key not older than")
  public Integer getElapsed() {
    return elapsed;
  }

  public void setElapsed(Integer elapsed) {
    this.elapsed = elapsed;
  }

  public GetTasksRequestSchema entityClass(String entityClass) {
    this.entityClass = entityClass;
    return this;
  }

   /**
   * entity_class owner of the tasks to query
   * @return entityClass
  **/
  @ApiModelProperty(example = "beehive.module.scheduler_v2.controller.Manager", value = "entity_class owner of the tasks to query")
  public String getEntityClass() {
    return entityClass;
  }

  public void setEntityClass(String entityClass) {
    this.entityClass = entityClass;
  }

  public GetTasksRequestSchema field(FieldEnum field) {
    this.field = field;
    return this;
  }

   /**
   * entities list order field. Ex. id, uuid, name
   * @return field
  **/
  @ApiModelProperty(example = "id", value = "entities list order field. Ex. id, uuid, name")
  public FieldEnum getField() {
    return field;
  }

  public void setField(FieldEnum field) {
    this.field = field;
  }

  public GetTasksRequestSchema objid(String objid) {
    this.objid = objid;
    return this;
  }

   /**
   * authorization id
   * @return objid
  **/
  @ApiModelProperty(example = "396587362//3328462822", value = "authorization id")
  public String getObjid() {
    return objid;
  }

  public void setObjid(String objid) {
    this.objid = objid;
  }

  public GetTasksRequestSchema order(OrderEnum order) {
    this.order = order;
    return this;
  }

   /**
   * entities list order: ASC or DESC
   * @return order
  **/
  @ApiModelProperty(example = "DESC", value = "entities list order: ASC or DESC")
  public OrderEnum getOrder() {
    return order;
  }

  public void setOrder(OrderEnum order) {
    this.order = order;
  }

  public GetTasksRequestSchema page(Integer page) {
    this.page = page;
    return this;
  }

   /**
   * entities list page selected
   * minimum: 0
   * maximum: 10000
   * @return page
  **/
  @ApiModelProperty(example = "0", value = "entities list page selected")
  public Integer getPage() {
    return page;
  }

  public void setPage(Integer page) {
    this.page = page;
  }

  public GetTasksRequestSchema size(Integer size) {
    this.size = size;
    return this;
  }

   /**
   * entities list page size. -1 to get all the records
   * minimum: -1
   * maximum: 100
   * @return size
  **/
  @ApiModelProperty(example = "20", value = "entities list page size. -1 to get all the records")
  public Integer getSize() {
    return size;
  }

  public void setSize(Integer size) {
    this.size = size;
  }

  public GetTasksRequestSchema ttype(TtypeEnum ttype) {
    this.ttype = ttype;
    return this;
  }

   /**
   * Used to filter key type
   * @return ttype
  **/
  @ApiModelProperty(example = "JOB", value = "Used to filter key type")
  public TtypeEnum getTtype() {
    return ttype;
  }

  public void setTtype(TtypeEnum ttype) {
    this.ttype = ttype;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetTasksRequestSchema getTasksRequestSchema = (GetTasksRequestSchema) o;
    return Objects.equals(this.elapsed, getTasksRequestSchema.elapsed) &&
        Objects.equals(this.entityClass, getTasksRequestSchema.entityClass) &&
        Objects.equals(this.field, getTasksRequestSchema.field) &&
        Objects.equals(this.objid, getTasksRequestSchema.objid) &&
        Objects.equals(this.order, getTasksRequestSchema.order) &&
        Objects.equals(this.page, getTasksRequestSchema.page) &&
        Objects.equals(this.size, getTasksRequestSchema.size) &&
        Objects.equals(this.ttype, getTasksRequestSchema.ttype);
  }

  @Override
  public int hashCode() {
    return Objects.hash(elapsed, entityClass, field, objid, order, page, size, ttype);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetTasksRequestSchema {\n");
    
    sb.append("    elapsed: ").append(toIndentedString(elapsed)).append("\n");
    sb.append("    entityClass: ").append(toIndentedString(entityClass)).append("\n");
    sb.append("    field: ").append(toIndentedString(field)).append("\n");
    sb.append("    objid: ").append(toIndentedString(objid)).append("\n");
    sb.append("    order: ").append(toIndentedString(order)).append("\n");
    sb.append("    page: ").append(toIndentedString(page)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    ttype: ").append(toIndentedString(ttype)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

