/*-
 * ========================LICENSE_START=================================
 * Api CMP
 * %%
 * Copyright (C) 2022 CSI Piemonte
 * %%
 * SPDX-FileCopyrightText: Copyright 2022 | CSI Piemonte
 * SPDX-License-Identifier: EUPL-1.2
 * =========================LICENSE_END==================================
 */
/*
 * Beehive API
 * Beehive API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: nivola.engineering@csi.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.csi.nivola.nivolasp.integration.rest.model.service;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;

import io.swagger.annotations.ApiModelProperty;

/**
 * CreateServiceMetricTypeRequestSchemaMetricType
 */

public class CreateServiceMetricTypeRequestSchemaMetricType {
  @JsonProperty("desc")
  private String desc = "";

  @JsonProperty("group_name")
  private String groupName = "UNKNOWN";

  @JsonProperty("limits")
  private List<CreateServiceMetricTypeRequestSchemaMetricTypeLimits> limits = null;

  @JsonProperty("measure_unit")
  private String measureUnit = "None";

  /**
   * service metrics type description. Can be one of the following value: CONSUME|BUNDLE|OPTIONAL_BUNDLE|PROFESSIONAL_SERVICE|UNKNOWN
   */
  public enum MetricTypeEnum {
    CONSUME("CONSUME"),
    
    BUNDLE("BUNDLE"),
    
    OPT_BUNDLE("OPT_BUNDLE"),
    
    PROF_SERVICE("PROF_SERVICE");

    private String value;

    MetricTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static MetricTypeEnum fromValue(String value) {
      for (MetricTypeEnum b : MetricTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("metric_type")
  private MetricTypeEnum metricType = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("status")
  private String status = "DRAFT";

  public CreateServiceMetricTypeRequestSchemaMetricType desc(String desc) {
    this.desc = desc;
    return this;
  }

   /**
   * service metrics type description
   * @return desc
  **/
  @ApiModelProperty(example = "Gb Ram", value = "service metrics type description")
  public String getDesc() {
    return desc;
  }

  public void setDesc(String desc) {
    this.desc = desc;
  }

  public CreateServiceMetricTypeRequestSchemaMetricType groupName(String groupName) {
    this.groupName = groupName;
    return this;
  }

   /**
   * service metrics type group
   * @return groupName
  **/
  @ApiModelProperty(example = "cpaas", value = "service metrics type group")
  public String getGroupName() {
    return groupName;
  }

  public void setGroupName(String groupName) {
    this.groupName = groupName;
  }

  public CreateServiceMetricTypeRequestSchemaMetricType limits(List<CreateServiceMetricTypeRequestSchemaMetricTypeLimits> limits) {
    this.limits = limits;
    return this;
  }

  public CreateServiceMetricTypeRequestSchemaMetricType addLimitsItem(CreateServiceMetricTypeRequestSchemaMetricTypeLimits limitsItem) {
    if (this.limits == null) {
      this.limits = new ArrayList<>();
    }
    this.limits.add(limitsItem);
    return this;
  }

   /**
   * Get limits
   * @return limits
  **/
  @ApiModelProperty(value = "")
  public List<CreateServiceMetricTypeRequestSchemaMetricTypeLimits> getLimits() {
    return limits;
  }

  public void setLimits(List<CreateServiceMetricTypeRequestSchemaMetricTypeLimits> limits) {
    this.limits = limits;
  }

  public CreateServiceMetricTypeRequestSchemaMetricType measureUnit(String measureUnit) {
    this.measureUnit = measureUnit;
    return this;
  }

   /**
   * service metrics type unit
   * @return measureUnit
  **/
  @ApiModelProperty(example = "Gb", value = "service metrics type unit")
  public String getMeasureUnit() {
    return measureUnit;
  }

  public void setMeasureUnit(String measureUnit) {
    this.measureUnit = measureUnit;
  }

  public CreateServiceMetricTypeRequestSchemaMetricType metricType(MetricTypeEnum metricType) {
    this.metricType = metricType;
    return this;
  }

   /**
   * service metrics type description. Can be one of the following value: CONSUME|BUNDLE|OPTIONAL_BUNDLE|PROFESSIONAL_SERVICE|UNKNOWN
   * @return metricType
  **/
  @ApiModelProperty(example = "BUNDLE", required = true, value = "service metrics type description. Can be one of the following value: CONSUME|BUNDLE|OPTIONAL_BUNDLE|PROFESSIONAL_SERVICE|UNKNOWN")
  public MetricTypeEnum getMetricType() {
    return metricType;
  }

  public void setMetricType(MetricTypeEnum metricType) {
    this.metricType = metricType;
  }

  public CreateServiceMetricTypeRequestSchemaMetricType name(String name) {
    this.name = name;
    return this;
  }

   /**
   * service metrics type name
   * @return name
  **/
  @ApiModelProperty(example = "GBRam", required = true, value = "service metrics type name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CreateServiceMetricTypeRequestSchemaMetricType status(String status) {
    this.status = status;
    return this;
  }

   /**
   * service metrics type status: ACTIVE|DRAFT
   * @return status
  **/
  @ApiModelProperty(example = "ACTIVE", value = "service metrics type status: ACTIVE|DRAFT")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateServiceMetricTypeRequestSchemaMetricType createServiceMetricTypeRequestSchemaMetricType = (CreateServiceMetricTypeRequestSchemaMetricType) o;
    return Objects.equals(this.desc, createServiceMetricTypeRequestSchemaMetricType.desc) &&
        Objects.equals(this.groupName, createServiceMetricTypeRequestSchemaMetricType.groupName) &&
        Objects.equals(this.limits, createServiceMetricTypeRequestSchemaMetricType.limits) &&
        Objects.equals(this.measureUnit, createServiceMetricTypeRequestSchemaMetricType.measureUnit) &&
        Objects.equals(this.metricType, createServiceMetricTypeRequestSchemaMetricType.metricType) &&
        Objects.equals(this.name, createServiceMetricTypeRequestSchemaMetricType.name) &&
        Objects.equals(this.status, createServiceMetricTypeRequestSchemaMetricType.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(desc, groupName, limits, measureUnit, metricType, name, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateServiceMetricTypeRequestSchemaMetricType {\n");
    
    sb.append("    desc: ").append(toIndentedString(desc)).append("\n");
    sb.append("    groupName: ").append(toIndentedString(groupName)).append("\n");
    sb.append("    limits: ").append(toIndentedString(limits)).append("\n");
    sb.append("    measureUnit: ").append(toIndentedString(measureUnit)).append("\n");
    sb.append("    metricType: ").append(toIndentedString(metricType)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

